# Statistics to gather
ProcMemInfo=com.oracle.cmm.lowertier.gathering.ProcMemInfo
ProcVmstat=com.oracle.cmm.lowertier.gathering.ProcVmstat

# Note that we can have multiple evaluator and dampers properties defined here, but only one of each can be actively in use
LinuxPressureEvaluator=com.oracle.cmm.lowertier.pressure.LinuxPressureEvaluator:SwapOutPerSecConsecutivePeriodsThreshold=10,SwapInPerSecConsecutivePeriodsThreshold=50
NoopEvaluator=com.oracle.cmm.lowertier.pressure.NoopEvaluator

# Note the ELAlgA specifies the property name prefix that is used to lookup the per-level expressions (see the properties with this prefix below).
# This allows for multiple EL evaluators with different expressions to be defined (only one will be active).
ELAlgAEvaluator=com.oracle.cmm.lowertier.pressure.EL2ExpressionEvaluator:ELAlgA

MinimalDecrementAdjustmentDamper=com.oracle.cmm.lowertier.pressure.MinimalDecrementAdjustmentDamper:MinimalDecrementTime=300000
NoopAdjustmentDamper=com.oracle.cmm.lowertier.pressure.NoopAdjustmentDamper

com.oracle.cmm.lowertier.pressure.TimerInterval=5000
com.oracle.cmm.lowertier.pressure.Evaluator=LinuxPressureEvaluator
#com.oracle.cmm.lowertier.pressure.Evaluator=ELAlgAEvaluator
com.oracle.cmm.lowertier.pressure.Adjuster=MinimalDecrementAdjustmentDamper
com.oracle.cmm.lowertier.pressure.Statistics=ProcMemInfo,ProcVmstat

# Off, Low (Default), Medium, High:
#    Off:    No events will be generated by the implementation, the recording will still be created however (just in case you have custom classes which
#            generate debug JFR events...
#    Low:    Default level. This will generate a single JFR event when the pressure changed after being handled by both the evaluator and adjuster.
#    Medium: This adds a JFR event for every timer interval which reports the evaluated pressure and the adjuster pressure. This is useful to track
#            the adjuster behaviour for review later.
#    High:   This adds JFR events for the OOTB statistics, reported after each time they are refreshed (each timer interval)
# com.oracle.cmm.lowertier.jfr.Volume=High

ELAlgA.3=${(procMemInfo.committedAS > procMemInfo.memTotal)}
ELAlgA.6=${(procVmstat.pswpinPerSecConsecutiveTrailingIntervalsOverZero > 50)}
ELAlgA.9=${(procVmstat.pswpoutPerSecConsecutiveTrailingIntervalsOverZero > 10)}


# Old settings
#ELAlgA.5=${(((procMemInfo.memFree/procMemInfo.memTotal) <= 0.2)  || ((procMemInfo.committedAS/procMemInfo.commitLimit) >= 1.8) || ((procVmstat.deltaSecs > 0) && ((procVmstat.pswpinPerSec >= 1000) && (procVmstat.pswpoutPerSec >= 1000))))}
#ELAlgA.10=${(((procMemInfo.memFree/procMemInfo.memTotal) <= 0.05) || ((procMemInfo.committedAS/procMemInfo.commitLimit) >= 2.0) || ((procVmstat.deltaSecs > 0) && ((procVmstat.pswpinPerSec >= 5000) && (procVmstat.pswpoutPerSec >= 5000))))}


