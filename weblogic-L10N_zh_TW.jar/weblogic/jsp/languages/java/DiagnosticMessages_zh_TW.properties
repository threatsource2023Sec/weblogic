#
# Diagnostic Messages for the Java Language
#
# This is a Java property file used as a resource. See
# java.util.ResourceBundle,
# java.util.Properties,
# java.util.PropertyResourceBundle,
# java.text.MessageFormat, and
# java.util.Locale for more information on locales,
# property resources, and how to author the material in
# this file.
#
# Names should use the following convention:
# java.<major category>.<minor category>.<specific case>
# (Note that hyphens should be used to separate words within each section of the key.)
#

# TODO: This has to be in every language. Need some sort of way to ensure/simplify this...
javelin.ioexception = \u767C\u751F I/O \u7570\u5E38\u72C0\u6CC1: ''{0}''

java.syntax = \u5728 ''{0}'' \u9644\u8FD1\u767C\u751F\u8A9E\u6CD5\u932F\u8AA4
java.syntax.missing-token = \u8A9E\u6CD5\u932F\u8AA4: \u61C9\u70BA {0} (\u4F46\u5BE6\u969B\u4E0A\u662F ''{1}'')
java.syntax.unused-javadoc = \u5FFD\u7565 JavaDoc \u8A3B\u89E3
java.syntax.expression-expected = \u61C9\u70BA\u8868\u793A\u5F0F (\u4F46\u5BE6\u969B\u4E0A\u662F ''{0}'')
java.syntax.identifier-expected = \u61C9\u70BA ID (\u4F46\u5BE6\u969B\u4E0A\u662F ''{0}'')
java.syntax.type-expected = \u61C9\u70BA\u985E\u578B (\u4F46\u5BE6\u969B\u4E0A\u662F ''{0}'')
java.syntax.invalid-lhs = \u8868\u793A\u5F0F\u5DE6\u65B9\u4E0D\u53EF\u6307\u5B9A\u4EFB\u4F55\u9805\u76EE
java.syntax.invalid-local-modifier = \u7121\u6548\u7684\u5340\u57DF\u985E\u5225\u5BA3\u544A\u4FEE\u98FE\u689D\u4EF6
java.syntax.pointless-try = ''try'' \u6558\u8FF0\u53E5\u6C92\u6709 ''catch'' \u6216 ''finally'' \u5B50\u53E5
java.syntax.missing-if = ''else'' \u6C92\u6709\u76F8\u5C0D\u61C9\u7684 ''if'' (\u6216\u7F3A\u5C11\u5927\u62EC\u865F)
java.syntax.identifier-keyword-conflict = {0} \u662F\u95DC\u9375\u5B57\uFF0C\u4E0D\u80FD\u4F5C\u70BA ID\u3002
java.syntax.malformed-else = ''else'' \u5F8C\u9762\u61C9\u6709\u6558\u8FF0\u53E5
java.syntax.inserting-right-brace = \u907A\u6F0F\u53F3\u5927\u62EC\u865F\uFF0C\u7121\u6CD5\u7D50\u675F\u6B64\u5340\u584A
java.syntax.extra-right-brace-detected = \u5927\u62EC\u865F\u6578\u76EE\u4E0D\u7B26\u3002
java.syntax.type-parameter.not-allowed = \u4E0D\u5141\u8A31\u985E\u578B\u53C3\u6578\u3002
java.syntax.type-argument.not-allowed = \u4E0D\u5141\u8A31\u985E\u578B\u5F15\u6578\u3002
java.syntax.missing-return-type = \u65B9\u6CD5\u5BA3\u544A\u4E2D\u907A\u6F0F\u4E86\u50B3\u56DE\u985E\u578B\u3002
java.syntax.block-too-deeply-nested = \u6A94\u6848\u5DE2\u72C0\u6DF1\u5EA6\u904E\u6DF1\uFF0C\u5256\u6790\u5668\u7121\u6CD5\u5256\u6790\u3002

# TODO (twagner): The following is just blindly copied from v8, and needs to be checked/vetted
# against the source code.

java.long.overflow = \u6B64\u6587\u5B57\u904E\u5927\uFF0C\u7121\u6CD5\u4EE5 long \u8868\u793A\u3002
java.int.overflow = \u6B64\u6587\u5B57\u904E\u5927\uFF0C\u7121\u6CD5\u4EE5 int \u8868\u793A\u3002
java.double.infinite = \u6B64\u6587\u5B57\u904E\u5927\uFF0C\u7121\u6CD5\u4EE5 double \u6E96\u78BA\u5132\u5B58\u3002
java.double.overflow = \u6B64\u6587\u5B57\u904E\u5927\uFF0C\u7121\u6CD5\u4EE5 double \u6E96\u78BA\u5132\u5B58\u3002
java.double.zero = \u6B64\u6587\u5B57\u904E\u5C0F\uFF0C\u7121\u6CD5\u4EE5 double \u6E96\u78BA\u5132\u5B58\u3002
java.float.infinite = \u6B64\u6587\u5B57\u904E\u5927\uFF0C\u7121\u6CD5\u4EE5 float \u6E96\u78BA\u5132\u5B58\u3002
java.float.overflow = \u6B64\u6587\u5B57\u904E\u5927\uFF0C\u7121\u6CD5\u4EE5 float \u6E96\u78BA\u5132\u5B58\u3002
java.float.zero = \u6B64\u6587\u5B57\u904E\u5C0F\uFF0C\u7121\u6CD5\u4EE5 float \u6E96\u78BA\u5132\u5B58\u3002

java.escape.illegal = \u4E0D\u660E\u7684\u9041\u96E2\u78BC\u3002

# This is a warning
java.constant.eval-error = \u5617\u8A66\u8A55\u4F30\u6B64\u5E38\u6578\u6642\u767C\u751F\u7570\u5E38\u72C0\u6CC1: {0} 

java.constant.cycle = \u8A55\u4F30\u6B64\u5E38\u6578\u6642\u5075\u6E2C\u5230\u5FAA\u74B0\u76F8\u4F9D\u6027\u3002

java.break.illegal-context = \u6C92\u6709\u6A19\u7C64\u7684 break \u6558\u8FF0\u53E5\u53EA\u80FD\u653E\u5728 for\u3001while\u3001do \u6216 switch \u6558\u8FF0\u53E5\u88E1\u3002

java.continue.illegal-context = \u6C92\u6709\u6A19\u7C64\u7684 continue \u6558\u8FF0\u53E5\u53EA\u80FD\u653E\u5728 for\u3001while\u6216 do \u6558\u8FF0\u53E5\u88E1\u3002

java.continue.illegal-statement = \u6709\u6A19\u7C64\u7684 continue \u6558\u8FF0\u53E5\u53EA\u80FD\u5B9A\u4F4D\u5230\u6709\u6A19\u7C64\u7684 for\u3001while \u6216 do \u6558\u8FF0\u53E5\u88E1\u3002

java.label.not-found = \u6B64\u4F4D\u7F6E\u770B\u4E0D\u5230\u9019\u500B\u540D\u7A31\u7684\u6A19\u7C64\u3002

java.throw.not-handled = \u6B64\u8868\u793A\u5F0F\u6703\u767C\u751F {0} \u7570\u5E38\u72C0\u6CC1\uFF0C\u4F46\u7121\u6CD5\u88AB\u4EFB\u4F55\u5167\u542B\u7684 try \u6558\u8FF0\u53E5\u6355\u7372\uFF0C\u56E0\u6B64\u4E0D\u5141\u8A31\u51FA\u73FE\u5728\u6B64\u65B9\u6CD5\u3001\u5EFA\u69CB\u5B50\u6216\u8D77\u59CB\u8A2D\u5B9A\u5143\u5340\u584A\u4E2D\u3002

java.loop.final-assignment = \u6B64\u8FF4\u5708\u5075\u6E2C\u5230 final \u8B8A\u6578\u6307\u5B9A\u3002\u9019\u53EF\u6307\u5B9A\u8A72\u8B8A\u6578\u5169\u6B21\u4EE5\u4E0A\u3002

java.modifier.duplicate = \u6B64\u4FEE\u98FE\u689D\u4EF6\u5DF2\u91CD\u8907\u3002

java.modifier.conflict.access = \u4E00\u6B21\u53EA\u80FD\u4F7F\u7528\u4E00\u7A2E\u5B58\u53D6 (public\u3001private \u6216 protected)\u3002

java.modifier.conflict.abstract-final = \u4EFB\u4F55\u6210\u54E1\u4E0D\u80FD\u540C\u6642\u662F abstract \u53C8\u662F final\uFF0C\u9019\u662F\u4E0D\u5408\u6CD5\u7684\u3002

java.field.modifiers.illegal = \u6B04\u4F4D\u7121\u6CD5\u5BA3\u544A\u70BA synchronized\u3001abstract \u6216 native\u3002

java.field.volatile.modifiers.illegal = volatile \u6B04\u4F4D\u4E0D\u80FD\u5BA3\u544A\u70BA final\u3002

java.method.modifiers.illegal = \u65B9\u6CD5\u4E0D\u80FD\u5BA3\u544A\u70BA transient \u6216 volatile\u3002

java.method.abstract.modifiers.illegal = abstract \u65B9\u6CD5\u4E0D\u80FD\u5BA3\u544A\u70BA private\u3001static\u3001synchronized\u3001native \u6216 strictfp\u3002

java.method.native.modifiers.illegal = native \u65B9\u6CD5\u4E0D\u80FD\u5BA3\u544A\u70BA strictfp\u3002

java.constructor.modifiers.illegal = \u5EFA\u69CB\u5B50\u4E0D\u80FD\u5BA3\u544A\u70BA abstract\u3001static\u3001final\u3001native\u3001synchronized\u3001transient\u3001volatile \u6216 strictfp\u3002

java.class.illegal-modifiers = \u985E\u5225\u4E0D\u80FD\u5BA3\u544A\u70BA transient\u3001volatile\u3001native \u6216 synchronized\u3002

java.enum.illegal-modifiers = \u5217\u8209\u4E0D\u80FD\u5BA3\u544A\u70BA abstract\u3001final\u3001transient\u3001volatile\u3001native \u6216 synchronized\u3002

java.enum.constructor.illegal-access = \u4E0D\u5408\u6CD5\u7684\u5B58\u53D6\u4FEE\u98FE\u689D\u4EF6\u3002

java.interface.illegal-modifiers = \u4ECB\u9762\u4E0D\u80FD\u5BA3\u544A\u70BA final\u3001transient\u3001volatile\u3001native \u6216 synchronized\u3002

java.interface.members.illegal-access = \u4ECB\u9762\u4E2D\u7684\u6210\u54E1\u4E00\u5B9A\u662F public \u7684\u3002\u5B83\u5011\u4E0D\u80FD\u5BA3\u544A\u70BA protected \u6216 private\u3002

java.interface.members.field.illegal-modifier = \u4ECB\u9762\u4E2D\u7684\u6B04\u4F4D\u4E0D\u80FD\u5BA3\u544A\u70BA abstract\u3001transient\u3001volatile\u3001strictfp\u3001native \u6216 synchronized\u3002

java.interface.members.method.illegal-modifier = \u4ECB\u9762\u4E2D\u7684\u65B9\u6CD5\u4E0D\u80FD\u5BA3\u544A\u70BA static\u3001final\u3001transient\u3001volatile\u3001strictfp\u3001native \u6216 synchronized\u3002

java.cast.not-type-name = \u5728\u8F49\u578B\u8868\u793A\u5F0F\u4E2D\uFF0C\u62EC\u865F\u5167\u7684\u8868\u793A\u5F0F\u61C9\u5305\u542B\u985E\u578B\u540D\u7A31\u3002

java.type.name-in-use.class = \u6B64\u985E\u5225\u540D\u7A31\u5DF2\u5B9A\u7FA9\u65BC\u6B64\u5C08\u6848\u4E2D\uFF0C\u5728\u6A94\u6848 {0} \u4E2D\u3002

java.import.name-in-use.import = \u6B64\u540D\u7A31\u7684\u985E\u578B\u5DF2\u532F\u5165\u3002

java.import.name-in-use.field = \u6B64\u6B04\u4F4D\u5DF2\u5B9A\u7FA9\u65BC\u55AE\u4E00\u975C\u614B\u532F\u5165\u5BA3\u544A\u4E2D\u3002

java.import.name-in-use.type = \u6B64\u540D\u7A31\u7684\u985E\u578B\u5DF2\u5B9A\u7FA9\u65BC\u6B64\u6A94\u6848\u4E2D\u3002

java.import.inner-class.inherited = \u60A8\u4E0D\u80FD\u532F\u5165\u4E00\u500B\u7E7C\u627F\u7684\u5167\u90E8\u985E\u5225\u3002

java.static-import.not-found = \u5728\u985E\u5225 {0} \u4E2D\u627E\u4E0D\u5230 static \u7B26\u865F {1}\u3002

java.inner-class.member.static-type = \u975E\u975C\u614B\u7684\u5167\u90E8\u985E\u5225\u4E0D\u80FD\u5BA3\u544A static \u985E\u578B\u6210\u54E1\u3002

java.inner-class.member.static-field = \u975E\u975C\u614B\u7684\u5167\u90E8\u985E\u5225\u4E0D\u80FD\u5BA3\u544A static \u6B04\u4F4D\u3002

java.inner-class.member.static-method = \u975E\u975C\u614B\u7684\u5167\u90E8\u985E\u5225\u4E0D\u80FD\u5BA3\u544A static \u65B9\u6CD5\u3002

java.inner-class.member.static-initializer = \u975E\u975C\u614B\u7684\u5167\u90E8\u985E\u5225\u4E0D\u80FD\u5BA3\u544A static \u8D77\u59CB\u8A2D\u5B9A\u5143\u3002

java.constructor-call.cycle = \u5728\u6B64\u985E\u5225\u5EFA\u69CB\u5B50\u7684\u5404\u7A2E\u5EFA\u69CB\u5B50\u53EB\u7528\u6558\u8FF0\u53E5\u4E2D\u767C\u73FE\u5FAA\u74B0\u3002

java.blank-final.static.not-initialized = \u6C92\u6709\u521D\u59CB\u503C\u7684 final \u6B04\u4F4D {0} \u5BA3\u544A\u70BA static\uFF0C\u5FC5\u9808\u5728\u6700\u5F8C\u4E00\u500B static \u8D77\u59CB\u8A2D\u5B9A\u5143\u7D50\u675F\u524D\u5C31\u4E88\u4EE5\u521D\u59CB\u5316\u3002

java.blank-final.non-static.not-initialized = \u6C92\u6709\u521D\u59CB\u503C\u7684 final \u6B04\u4F4D {0} \u5FC5\u9808\u5728\u6BCF\u500B\u5EFA\u69CB\u5B50\u7D50\u675F\u524D\u5C31\u4E88\u4EE5\u521D\u59CB\u5316\u3002

java.method.body.unexpected = abstract \u548C native \u65B9\u6CD5\u4E0D\u80FD\u6709\u4E3B\u9AD4\u3002

java.method.body.missing = \u65B9\u6CD5\u5FC5\u9808\u6709\u4E3B\u9AD4\uFF0C\u9664\u975E\u5B83\u5011\u662F abstract \u6216 native\u3002

java.method.no-return = \u907A\u6F0F return \u6558\u8FF0\u53E5\u3002

java.constructor.wrong-name = \u6B64\u65B9\u6CD5\u907A\u6F0F\u50B3\u56DE\u985E\u578B\uFF0C\u6216\u5EFA\u69CB\u5B50\u540D\u7A31\u5BA3\u544A\u4E0D\u7B26\u5408\u985E\u5225\u540D\u7A31\u3002

java.initializer.cannot-complete-normally = \u6B64\u8D77\u59CB\u8A2D\u5B9A\u5143\u7121\u6CD5\u6B63\u5E38\u5B8C\u6210\u3002

java.block.unreachable = \u57F7\u884C\u671F\u9593\u7121\u6CD5\u5230\u9054\u6B64\u5340\u584A\u3002

java.statement.unreachable = \u57F7\u884C\u671F\u9593\u7121\u6CD5\u5230\u9054\u6B64\u6558\u8FF0\u53E5\u3002

java.intializer.not-array = \u6B64\u8D77\u59CB\u8A2D\u5B9A\u5143\u8868\u793A\u5F0F\u61C9\u6709\u9663\u5217\u3002

java.label.name-in-use = \u6B64\u4F4D\u7F6E\u5DF2\u6709\u76F8\u540C\u540D\u7A31\u7684\u6A19\u7C64\u3002

java.if-else.condition-not-boolean = if \u6558\u8FF0\u53E5\u7684\u689D\u4EF6\u61C9\u8A55\u4F30\u70BA\u4E00\u500B\u5E03\u6797\u503C\u3002

java.while.condition-not-boolean = while \u6558\u8FF0\u53E5\u7684\u689D\u4EF6\u61C9\u8A55\u4F30\u70BA\u4E00\u500B\u5E03\u6797\u503C\u3002

java.do-while.condition-not-boolean = do \u6558\u8FF0\u53E5\u7684\u689D\u4EF6\u61C9\u8A55\u4F30\u70BA\u4E00\u500B\u5E03\u6797\u503C\u3002

java.for.condition-not-boolean = for \u6558\u8FF0\u53E5\u7684\u689D\u4EF6\u61C9\u8A55\u4F30\u70BA\u4E00\u500B\u5E03\u6797\u503C\u3002

java.enhanced-for.condition-type = foreach \u6558\u8FF0\u53E5\u4E0D\u9069\u7528\u65BC\u8868\u793A\u5F0F\u985E\u578B\u3002

java.assert.condition-not-boolean = assert \u6558\u8FF0\u53E5\u7684\u689D\u4EF6\u61C9\u8A55\u4F30\u70BA\u4E00\u500B\u5E03\u6797\u503C\u3002

java.assert.detail-void = assert \u6558\u8FF0\u53E5\u7684\u8A0A\u606F\u8868\u793A\u5F0F\u53EF\u4EE5\u662F\u4EFB\u4F55\u985E\u578B\uFF0C\u4F46\u4E0D\u80FD\u70BA void\u3002

java.switch.expr.bad-type = switch \u8868\u793A\u5F0F\u5FC5\u9808\u662F\u500B byte\u3001char\u3001short\u3001int \u6216 enum\u3002

java.switch.multiple-default = \u6B64 switch \u6558\u8FF0\u53E5\u4E2D\u5DF2\u5BA3\u544A\u4E86\u9810\u8A2D\u6A19\u7C64\u3002

java.switch.case.not-convertable = \u6B64 case \u7684\u503C\u7121\u6CD5\u8F49\u63DB\u70BA switch \u8868\u793A\u5F0F\u7684\u985E\u578B\u3002

java.switch.case.not-constant = \u6B64 case \u7684\u503C\u5FC5\u9808\u662F\u500B\u53EF\u65BC\u7DE8\u8B6F\u6642\u6C7A\u5B9A\u7684\u5E38\u6578\u3002

java.switch.case.not-enum-constant = \u6B64 case \u7684\u503C\u5FC5\u9808\u662F\u500B\u672A\u9650\u5B9A\u5B57\u5143\u7684\u5217\u8209\u5E38\u6578\u3002

java.switch.case.value-repeated = \u503C ''{0}'' \u5DF2\u7528\u65BC\u6B64 switch \u6558\u8FF0\u53E5\u7684\u5176\u4ED6 case \u6A19\u7C64\u4E2D\u3002

java.return.unexpected = \u8D77\u59CB\u8A2D\u5B9A\u5143\u4E0D\u5F97\u4F7F\u7528 return \u6558\u8FF0\u53E5\u3002

java.return.argument.unexpected = \u5EFA\u69CB\u5B50\u6216 void \u65B9\u6CD5\u7121\u6CD5\u50B3\u56DE\u503C\u3002

java.return.argument.not-convertable = \u6B64\u8868\u793A\u5F0F\u7684\u503C\u7121\u6CD5\u8F49\u63DB\u70BA\u6B64\u65B9\u6CD5\u7684\u50B3\u56DE\u985E\u578B\u3002

java.return.argument.missing = \u975E void \u65B9\u6CD5\u5FC5\u9808\u6709\u50B3\u56DE\u503C\u3002

java.throw.not-reference-type = \u4E0D\u80FD\u767C\u51FA\u57FA\u672C\u985E\u578B\u3002

java.throw.not-throwable = \u53EA\u6709\u80FD\u8F49\u578B\u70BA java.lang.Throwable \u7684\u7269\u4EF6\u624D\u53EF\u88AB\u767C\u51FA\u3002

java.synchronized.not-reference-type = \u60A8\u4E0D\u80FD\u5728\u57FA\u672C\u985E\u578B\u4E0A\u540C\u6B65\u3002

java.catch.not-reference-type = \u57FA\u672C\u985E\u578B\u4E0D\u80FD\u88AB\u6355\u7372\u3002

java.catch.not-throwable = catch \u53C3\u6578\u7684\u985E\u578B\u5FC5\u9808\u53EF\u8F49\u578B\u70BA java.lang.Throwable\u3002

java.catch.empty-try-checked = \u6B64\u6AA2\u67E5\u7684\u7570\u5E38\u72C0\u6CC1\u6355\u7372\u5668\u7121\u6CD5\u5230\u9054\uFF0C\u56E0\u70BA\u76F8\u5C0D\u61C9\u7684 try \u5340\u584A\u662F\u7A7A\u7684\u3002

java.catch.empty-try-unchecked = \u6B64\u672A\u6AA2\u67E5\u7684\u7570\u5E38\u72C0\u6CC1\u6355\u7372\u5668\u7121\u6CD5\u5230\u9054\uFF0C\u56E0\u70BA\u76F8\u5C0D\u61C9\u7684 try \u5340\u584A\u662F\u7A7A\u7684\u3002

java.catch.not-reachable = \u6B64\u6355\u7372\u5668\u7121\u6CD5\u5230\u9054\uFF0C\u56E0\u70BA\u76F8\u5C0D\u61C9\u7684 try \u5340\u584A\u4E0D\u6703\u5728\u6B64\u767C\u51FA\u4EFB\u4F55\u53EF\u6355\u7372\u7684\u9805\u76EE\u3002

java.resolve.package.not-exists = \u6B64\u5C08\u6848\u4E2D\u6C92\u6709\u6B64\u540D\u7A31\u7684\u5957\u4EF6\u3002

java.resolve.package-or-type.not-exists = \u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u9019\u500B\u540D\u7A31\u7684\u5957\u4EF6\u6216\u985E\u578B\u3002

java.resolve.type.not-exists = \u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u9019\u500B\u540D\u7A31\u7684\u985E\u578B\u3002

java.resolved.namedtype.not-exists = \u627E\u4E0D\u5230\u985E\u578B {0}\u3002

java.resolve.variable.not-exists = \u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u9019\u500B\u540D\u7A31\u7684\u8B8A\u6578\u6216\u6B04\u4F4D\u3002

java.resolve.variable.not-static = \u975C\u614B\u76F8\u95DC\u8CC7\u8A0A\u74B0\u5883\u7121\u6CD5\u5B58\u53D6\u6B64\u8B8A\u6578\u6216\u6B04\u4F4D\u3002

java.resolve.type.not-static = \u975C\u614B\u76F8\u95DC\u8CC7\u8A0A\u74B0\u5883\u7121\u6CD5\u53C3\u7167\u6B64\u985E\u578B\u3002

java.resolve.method.not-exists = \u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u9019\u500B\u540D\u7A31\u7684\u65B9\u6CD5\u3002

java.resolve.method.not-static = \u975C\u614B\u76F8\u95DC\u8CC7\u8A0A\u74B0\u5883\u7121\u6CD5\u5B58\u53D6\u6B64\u65B9\u6CD5\u3002

java.resolve.ambiguous.not-exists = \u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u9019\u500B\u540D\u7A31\u7684\u8B8A\u6578\u3001\u6B04\u4F4D\u6216\u5957\u4EF6\u3002

java.package.not-exists = \u5957\u4EF6 {0} \u4E0D\u5B58\u5728\u3002

java.member-package.not-exists = \u5957\u4EF6 {0} \u4E2D\u4E0D\u542B\u9019\u500B\u540D\u7A31\u7684\u6210\u54E1\u5957\u4EF6\u3002

java.member-type.not-exists = \u985E\u578B {0} \u4E2D\u4E0D\u542B\u540D\u7A31\u70BA {1} \u7684\u6210\u54E1\u985E\u578B\u3002

java.member-package-or-type.not-exists = \u5957\u4EF6 {0} \u4E2D\u4E0D\u542B\u9019\u500B\u540D\u7A31\u7684\u6210\u54E1\u5957\u4EF6\u6216\u985E\u578B\u3002

java.package-member-type.not-exists = \u5957\u4EF6 {0} \u4E2D\u4E0D\u542B\u9019\u500B\u540D\u7A31\u7684\u6210\u54E1\u985E\u578B\u3002

java.expression.package-qualifier = \u6B64\u540D\u7A31\u7684\u9650\u5B9A\u5B57\u5143\u662F\u500B\u5957\u4EF6\uFF0C\u5B83\u4E0D\u80FD\u5305\u542B\u6B04\u4F4D\u3002

java.expression.not-reference-type = \u6B64\u540D\u7A31\u7684\u9650\u5B9A\u5B57\u5143\u662F\u57FA\u672C\u985E\u578B\uFF0C\u5B83\u7121\u6CD5\u64C1\u6709\u6B04\u4F4D\u3002

java.method.package-qualifier = \u6B64\u540D\u7A31\u7684\u9650\u5B9A\u5B57\u5143\u662F\u500B\u5957\u4EF6\uFF0C\u5B83\u4E0D\u80FD\u5305\u542B\u65B9\u6CD5\u3002

java.method.not-reference-type = \u6B64\u540D\u7A31\u7684\u9650\u5B9A\u5B57\u5143\u662F\u57FA\u672C\u985E\u578B\uFF0C\u5B83\u7121\u6CD5\u64C1\u6709\u65B9\u6CD5\u3002

java.ambiguous.not-reference-type = \u6B64\u540D\u7A31\u7684\u9650\u5B9A\u5B57\u5143\u662F\u57FA\u672C\u985E\u578B\uFF0C\u5B83\u7121\u6CD5\u64C1\u6709\u6B04\u4F4D\u3002

java.type.not-exists = \u985E\u5225\u6216\u4F86\u6E90\u8DEF\u5F91\u4E2D\u627E\u4E0D\u5230\u985E\u578B {0}\u3002

java.type.inaccessible = \u6B64\u4F4D\u7F6E\u7121\u6CD5\u5B58\u53D6\u985E\u5225 {0}\u3002

java.type.ambiguous = \u985E\u578B {0} \u4E2D\u6709\u591A\u500B\u540C\u70BA\u6B64\u540D\u7A31\u7684\u53EF\u5B58\u53D6\u6210\u54E1\u985E\u578B\u3002

java.type.field.not-exists = \u985E\u578B {0} \u4E2D\u4E0D\u542B\u9019\u500B\u540D\u7A31\u7684\u6B04\u4F4D\u3002

java.use.deprecated = {0} \u4F7F\u7528\u6216\u53C3\u7167\u4E86\u5DF2\u4E0D\u518D\u4F7F\u7528\u7684 API\u3002\u8ACB\u4EE5 -Xlint:deprecation \u91CD\u65B0\u7DE8\u8B6F\u4EE5\u77AD\u89E3\u8A73\u7D30\u8CC7\u8A0A\u3002

java.warn.deprecation-field.use.deprecated-directly = \u985E\u5225 {1} \u7684\u6B04\u4F4D {0} \u5DF2\u4E0D\u518D\u4F7F\u7528\u3002

java.warn.deprecation-method.use.deprecated-directly = \u985E\u5225 {1} \u7684\u65B9\u6CD5 {0} \u5DF2\u4E0D\u518D\u4F7F\u7528\u3002

java.warn.deprecation-constructor.use.deprecated-directly = \u985E\u5225 {1} \u7684\u5EFA\u69CB\u5B50 {0} \u5DF2\u4E0D\u518D\u4F7F\u7528\u3002

java.warn.deprecation-constructor.use.deprecated-by-class = \u547C\u53EB\u5DF2\u4E0D\u518D\u4F7F\u7528\u4E4B\u985E\u5225 {1} \u7684\u5EFA\u69CB\u5B50 {0}\u3002

java.warn.deprecation-class.decl.deprecated-superclass = \u985E\u5225 {0} \u7E7C\u627F\u4E86\u5DF2\u4E0D\u518D\u4F7F\u7528\u7684\u985E\u5225 {1}\u3002

java.warn.deprecation-class.decl.deprecated-superinterface = \u985E\u5225 {0} \u7E7C\u627F\u4E86\u5DF2\u4E0D\u518D\u4F7F\u7528\u7684\u4ECB\u9762 {1}\u3002

java.warn.deprecation-class.use.deprecated = \u985E\u5225 {0} \u5DF2\u4E0D\u518D\u4F7F\u7528\u3002

java.type.method.not-exists = \u985E\u578B {0} \u4E0D\u542B\u540D\u7A31\u70BA {1} \u7684\u65B9\u6CD5\u3002

java.type.ambiguous-member.not-exists = \u985E\u578B {0} \u4E2D\u4E0D\u542B\u9019\u500B\u540D\u7A31\u7684\u6B04\u4F4D\u6216\u985E\u578B\u3002

java.expression.member.not-static = \u975C\u614B\u76F8\u95DC\u8CC7\u8A0A\u74B0\u5883\u7121\u6CD5\u5B58\u53D6\u6B64\u6B04\u4F4D\u3002

java.expression.field.inaccessible = \u7121\u6CD5\u5B58\u53D6\u985E\u578B {0} \u7684\u9019\u500B\u6B04\u4F4D\u3002

java.expression.method.inaccessible = \u7121\u6CD5\u5B58\u53D6\u985E\u578B {0} \u7684\u9019\u500B\u65B9\u6CD5\u3002

java.expression.field.ambiguous = \u985E\u578B {0} \u4E2D\u6709\u591A\u500B\u540C\u70BA\u6B64\u540D\u7A31\u7684\u53EF\u5B58\u53D6\u6B04\u4F4D\u3002

java.expression.method.ambiguous = \u985E\u578B {0} \u4E2D\u6709\u591A\u500B\u540C\u70BA\u6B64\u540D\u7A31\u7684\u53EF\u5B58\u53D6\u65B9\u6CD5\u3002

java.type.inner.illegal-dollar = \u4F7F\u7528 ''$'' \u4F86\u53C3\u7167\u5728\u539F\u59CB\u6A94\u4E2D\u5B9A\u7FA9\u7684\u5167\u90E8\u985E\u578B\u662F\u4E0D\u5408\u6CD5\u7684\u3002

java.class-instance-creation.not-reference-type = \u57FA\u672C\u985E\u578B\u4E0D\u80FD\u4EE5 new \u95DC\u9375\u5B57\u5EFA\u7ACB\u3002

java.class-instance-creation.abstract = \u6B64\u985E\u578B\u662F abstract\uFF0C\u56E0\u6B64\u4E0D\u80FD\u4E88\u4EE5\u5EFA\u7ACB\u3002

java.class-instance-creation.enum = \u4E0D\u80FD\u5EFA\u7ACB enum \u985E\u578B\u3002

java.method-call.non-reference = \u552F\u6709\u64C1\u6709\u65B9\u6CD5\u7684\u7269\u4EF6\u624D\u80FD\u4EE5 ''.'' \u547C\u53EB\u3002

java.method-call.no-super = \u6B64\u985E\u578B\u6C92\u6709\u8D85\u7D1A\u985E\u5225\u3002

java.method-call.super.abstract = \u6B64\u65B9\u6CD5\u662F abstract\uFF0C\u56E0\u6B64\u4E0D\u80FD\u547C\u53EB\u3002

java.constructor-call.qualifier.unexpected = \u61C9\u6C92\u6709\u9650\u5B9A\u5B57\u5143\uFF0C\u56E0\u70BA\u985E\u578B {0} \u4E0D\u662F (\u975E\u975C\u614B) \u5167\u90E8\u985E\u5225\u3002

java.constructor-call.qualifier.not-subclass = \u985E\u578B {1} \u4E0D\u662F {0} \u7684\u5916\u90E8\u985E\u578B {2} \u7684\u5B50\u985E\u5225\u3002

java.constructor-call.qualifier.missing = \u985E\u578B {0} \u662F\u500B (\u975E\u975C\u614B) \u5167\u90E8\u985E\u5225\uFF0C\u5B83\u9700\u8981\u4E00\u500B\u985E\u578B {1} \u7684\u5167\u542B\u57F7\u884C\u8655\u7406\u6216\u5B50\u985E\u5225\u3002

java.outer-this.static = \u985E\u578B {0} \u662F\u500B (\u975E\u975C\u614B) \u5167\u90E8\u985E\u5225\uFF0C\u5B83\u9700\u8981\u4E00\u500B\u985E\u578B {1} \u7684\u5167\u542B\u57F7\u884C\u8655\u7406\u6216\u5B50\u985E\u5225\u3002\u6B64\u4F4D\u7F6E\u4F4D\u65BC\u985E\u578B {2} (\u5373\u70BA\u6240\u9700\u7684\u5B50\u985E\u5225) \u7684\u5DE2\u72C0\u4E2D\uFF0C\u4F46\u6B64\u7A2E\u7684\u975C\u614B\u76F8\u95DC\u8CC7\u8A0A\u74B0\u5883\u7121\u6CD5\u53C3\u7167\u6B64\u985E\u578B\u3002

java.method-call.no-match = \u627E\u4E0D\u5230\u8207\u985E\u578B {0} \u4E4B\u65B9\u6CD5 {1} \u76F8\u7B26\u7684\u9805\u76EE\u3002

java.method-call.no-match-access = \u907A\u6F0F\u985E\u578B {0} \u7684\u65B9\u6CD5 {1}\uFF0C\u6216\u8005\u5B83\u7121\u6CD5\u5F9E\u6B64\u4F4D\u7F6E\u5B58\u53D6\u3002

java.constructor-call.no-match = \u627E\u4E0D\u5230\u8207\u985E\u578B {0} \u4E4B\u5EFA\u69CB\u5B50 {1} \u76F8\u7B26\u7684\u9805\u76EE\u3002

java.constructor-call.no-match-access = \u907A\u6F0F\u985E\u578B {0} \u7684\u65B9\u6CD5 {1}\uFF0C\u6216\u8005\u5B83\u7121\u6CD5\u5F9E\u6B64\u4F4D\u7F6E\u5B58\u53D6\u3002

java.method-call.ambiguous = \u4E0D\u660E\u78BA\u7684 {0} \u547C\u53EB\uFF0C{2} \u4E2D\u7684 {1} \u8207 {4} \u4E2D\u7684 {3} \u90FD\u7B26\u5408\u3002

java.array-access.not-array = ''[..]'' \u904B\u7B97\u5B50\u53EA\u9069\u7528\u65BC\u9663\u5217\u985E\u578B\u3002

java.casting.bad-conversion = \u60A8\u4E0D\u80FD\u5C07 {0} \u8F49\u578B\u6210 {1}\u3002

java.operator.unary.not-convertible = \u6B64\u904B\u7B97\u5B50\u4E0D\u9069\u7528\u65BC {0}\u3002

java.operator.binary.not-convertible = \u6B64\u904B\u7B97\u5B50\u4E0D\u9069\u7528\u65BC {0}\uFF0C{1}\u3002

java.operator.binary.bad-equality = \u985E\u578B {0} \u8207 {1} \u7121\u6CD5\u6BD4\u8F03\u3002

java.types.inconvertible = \u7121\u6CD5\u8F49\u63DB\u7684\u985E\u578B\u3002\u627E\u5230 {0}\uFF0C\u4F46\u9700\u8981 {1}\u3002

java.operator.shift-eq.not-primitive = \u6B64\u6307\u5B9A\u904B\u7B97\u5B50\u53EA\u9069\u7528\u65BC\u57FA\u672C\u6574\u6578\u985E\u578B\u3002

java.assignment.not-convertable = \u6B64\u6307\u5B9A\u7684\u904B\u7B97\u5143\u985E\u578B\u7121\u6CD5\u9032\u884C\u6307\u5B9A\u8F49\u63DB\u3002

java.foreach.not-convertable = \u4E0D\u80FD\u6307\u5B9A\u8868\u793A\u5F0F\u7D66\u5FC5\u9700\u7684\u985E\u578B\u3002

java.instanceof.not-reference = instanceof \u904B\u7B97\u5B50\u53EA\u9069\u7528\u65BC\u53C3\u7167\u985E\u578B\u3002

java.type.not-reifiable = \u4E0D\u5408\u6CD5\u7684\u4E00\u822C\u985E\u578B\u3002

java.operator.increment.not-variable = \u5DE6\u908A\u7684\u904B\u7B97\u5143\u5FC5\u9808\u662F\u500B\u8B8A\u6578\uFF0C\u800C\u4E0D\u662F\u6578\u503C\u3002

java.conditional.first-not-boolean = \u689D\u4EF6\u904B\u7B97\u5B50\u7684\u7B2C\u4E00\u500B\u904B\u7B97\u5143\u61C9\u8A55\u4F30\u70BA\u4E00\u500B\u5E03\u6797\u503C\u3002

java.conditional.void-type = \u689D\u4EF6\u904B\u7B97\u5B50\u7684\u7B2C\u4E8C\u500B\u8207\u7B2C\u4E09\u500B\u904B\u7B97\u5143\u4E0D\u80FD\u70BA void \u985E\u578B\u3002

java.conditional.bad-types = \u689D\u4EF6\u904B\u7B97\u5B50\u7684\u7B2C\u4E8C\u500B\u8207\u7B2C\u4E09\u500B\u904B\u7B97\u5143\u5FC5\u9808\u662F\u57FA\u672C\u6578\u503C\u985E\u578B\u3001\u5E03\u6797\u503C\u6216\u53C3\u7167\u985E\u578B\u3002

java.field-reference.final-assignment = \u6B64\u6B04\u4F4D\u662F final\uFF0C\u7121\u6CD5\u65BC\u6B64\u4F4D\u7F6E\u6307\u5B9A\u3002

java.variable-reference.final-assignment = \u6B64\u8B8A\u6578\u662F final\uFF0C\u7121\u6CD5\u65BC\u6B64\u4F4D\u7F6E\u6307\u5B9A\u3002

java.variable-reference.non-local.not-final = \u5340\u57DF\u8B8A\u6578\u6216\u53C3\u6578\u61C9\u5BA3\u544A\u70BA final\uFF0C\u624D\u80FD\u5F9E\u5340\u57DF\u6216\u533F\u540D\u985E\u5225\u4E2D\u5B58\u53D6\u5B83\u5011\u3002

java.field-reference.illegal-forward = \u60A8\u7121\u6CD5\u5F9E\u6B64\u4F4D\u7F6E\u53C3\u7167\u6B64\u6B04\u4F4D\uFF0C\u56E0\u70BA\u6B64\u6B04\u4F4D\u5728\u8A72\u6A94\u6848\u7684\u5F8C\u9762\u624D\u5B9A\u7FA9\u3002

java.variable.not-definitely-assigned = \u6B64\u8B8A\u6578\u5C1A\u672A\u65BC\u6B64\u4F4D\u7F6E\u6307\u5B9A\u3002

java.parameter.not-definitely-unassigned = \u6B64\u53C3\u6578\u662F final\uFF0C\u7121\u6CD5\u6307\u5B9A\u3002

java.local-variable.not-definitely-unassigned = \u6B64\u8B8A\u6578\u662F final\uFF0C\u7121\u6CD5\u91CD\u65B0\u6307\u5B9A\u3002

java.field.in-method.not-definitely-unassigned = \u6B64\u6B04\u4F4D\u662F final\uFF0C\u7121\u6CD5\u5F9E\u65B9\u6CD5\u6307\u5B9A\u3002

java.field.in-constructor.not-definitely-unassigned = \u6B64\u6B04\u4F4D\u662F final\uFF0C\u7121\u6CD5\u5F9E\u5EFA\u69CB\u5B50\u6307\u5B9A\u3002

java.variable.not-definitely-unassigned = \u6B64\u8B8A\u6578\u5148\u524D\u5DF2\u6307\u5B9A\u3002\u60A8\u4E0D\u80FD\u6307\u5B9A\u5169\u6B21 final \u8B8A\u6578\u3002

java.variable.name-in-use = \u6B64\u4F4D\u7F6E\u5DF2\u6709\u540C\u540D\u7A31\u7684\u8B8A\u6578\u3002

java.local-class.name-in-use = \u6B64\u4F4D\u7F6E\u5DF2\u6709\u540C\u540D\u7A31\u7684\u5340\u57DF\u985E\u5225\u3002

java.class-name.not-outer = \u9019\u500B\u540D\u7A31\u7684\u985E\u5225\u672A\u5305\u542B\u76EE\u524D\u7684\u4F4D\u7F6E\u3002

java.super-expression.static = static \u76F8\u95DC\u8CC7\u8A0A\u74B0\u5883\u4E2D\u7121\u6CD5\u4F7F\u7528 ''super'' \u95DC\u9375\u5B57\u3002

java.this-expression.static = static \u76F8\u95DC\u8CC7\u8A0A\u74B0\u5883\u4E2D\u7121\u6CD5\u4F7F\u7528 ''this'' \u95DC\u9375\u5B57\u3002

java.class.top-level.access = \u6700\u4E0A\u5C64\u985E\u5225\u4E0D\u80FD\u5BA3\u544A\u70BA protected \u6216 private\u3002

java.class.top-level.static = \u6700\u4E0A\u5C64\u985E\u5225\u4E00\u5F8B\u662F\u96B1\u542B\u7684 static\uFF0C\u4E0D\u80FD\u660E\u78BA\u5730\u5BA3\u544A\u70BA static\u3002

java.expected-type.wrong-id = \u6B64\u6A94\u6848\u5B9A\u7FA9\u7684 public\u3001\u6700\u4E0A\u5C64\u985E\u578B ''{0}'' \u7684\u540D\u7A31\u8207\u6A94\u6848 ''{1}'' \u7684\u540D\u7A31\u4E0D\u7B26\u3002

java.expected-type.wrong-package = \u6B64\u985E\u578B\u7684\u5957\u4EF6\u4E0D\u7B26\u5408\u4F86\u6E90\u8DEF\u5F91: {0} \u4E0A\u7684\u4F4D\u7F6E\u3002

java.type.superclass.not-class = \u8D85\u7D1A\u985E\u5225\u5FC5\u9808\u662F\u500B\u985E\u5225\uFF0C\u800C\u4E0D\u662F\u4ECB\u9762\u3002

java.type.superclass.throwable=\u4E00\u822C\u985E\u5225\u4E0D\u80FD\u7E7C\u627F java.lang.Throwable\u3002

java.type.super-interface.not-interface = \u9019\u88E1\u5217\u51FA\u7684\u4ECB\u9762\u5FC5\u9808\u662F\u500B\u4ECB\u9762\uFF0C\u800C\u4E0D\u662F\u985E\u5225\u3002

java.type.super-interface.duplicate = \u6B64\u4ECB\u9762\u5DF2\u5217\u51FA\u3002

java.type.super.self = \u985E\u5225\u6216\u4ECB\u9762\u4E0D\u80FD\u7E7C\u627F\u6216\u5BE6\u884C\u81EA\u5DF1\u3002

java.member.type.name-in-use = \u6B64\u540D\u7A31\u7684\u985E\u578B\u5DF2\u65BC\u6B64\u985E\u578B\u4E2D\u5BA3\u544A\u3002

java.member.type.name-in-use.outer = \u6210\u54E1\u985E\u578B\u7684\u540D\u7A31\u4E0D\u80FD\u8207\u4EFB\u4F55\u5167\u542B\u985E\u578B\u76F8\u540C\u3002

java.inner-class.member.interface = \u975E static \u7684\u5167\u90E8\u985E\u5225\u4E0D\u80FD\u4EE5\u4ECB\u9762\u4F5C\u70BA\u6210\u54E1\u3002

java.member.field.name-in-use = \u6B64\u540D\u7A31\u7684\u6B04\u4F4D\u5DF2\u65BC\u6B64\u985E\u578B\u4E2D\u5BA3\u544A\u3002

java.member.method.name-in-use = \u542B\u6B64\u7C3D\u7AE0\u7684\u65B9\u6CD5\u5DF2\u65BC\u6B64\u985E\u578B\u4E2D\u5BA3\u544A\u3002

java.member.method.erasure-clash = \u540D\u7A31\u885D\u7A81: {0} \u8207 {1} \u64C1\u6709\u76F8\u540C\u7684\u62ED\u53BB\u6CD5 (erasure)\u3002

java.member.constructor.name-in-use = \u542B\u6B64\u7C3D\u7AE0\u7684\u5EFA\u69CB\u5B50\u5DF2\u65BC\u6B64\u985E\u5225\u4E2D\u5BA3\u544A\u3002

java.member.method.throws.not-class = \u53EA\u53EF\u5C07\u985E\u5225\u5F15\u767C\u70BA\u7570\u5E38\u72C0\u6CC1; \u4E0D\u80FD\u5F15\u767C\u4ECB\u9762\u3002

java.member.method.throws.not-throwable = \u53EA\u6709 java.lang.Throwable \u53CA\u5176\u5B50\u985E\u5225\u53EF\u4EE5\u5F15\u767C\u70BA\u7570\u5E38\u72C0\u6CC1\u3002

java.token.illegal = \u6B64\u5B57\u5143\u4E0D\u662F\u5408\u6CD5 Java \u8A9E\u5F59\u55AE\u5143\u7684\u4E00\u90E8\u5206\u3002

java.long-comment.unterminated = \u4EE5 ''/*'' \u958B\u982D\u7684\u8A3B\u89E3\u5FC5\u9808\u4EE5 ''*/'' \u7D50\u675F\u3002

java.short-comment.unterminated = \u4EE5 ''//'' \u958B\u982D\u7684\u8A3B\u89E3\u5FC5\u9808\u4EE5\u65B0\u7684\u4E00\u884C\u7D50\u675F\u3002

java.character.empty = \u5B57\u5143\u9808\u4EE5\u5F15\u865F\u62EC\u8D77\u3002

java.character.unterminated = \u4E00\u500B\u5B57\u5143\u6587\u5B57\u9808\u7531\u4E00\u500B\u5B57\u5143\u6216\u7531\u5F15\u865F\u6240\u5305\u570D\u7684\u9041\u96E2\u5E8F\u5217\u6240\u7D44\u6210\u3002

java.string.unterminated = \u5B57\u4E32\u9808\u4EE5\u53F3\u5F15\u865F\u7D50\u675F\uFF0C\u4E14\u8981\u8207\u5176\u958B\u982D\u4F4D\u65BC\u540C\u4E00\u884C\u3002

java.character.malformed-octal-escape 8 \u9032\u4F4D\u9041\u96E2\u683C\u5F0F\u932F\u8AA4\uFF0C\u6216\u5B57\u5143\u6587\u5B57\u5167\u6709\u672A\u9810\u671F\u7684\u5B57\u5143\u3002

java.character.malformed \u5B57\u5143\u6587\u5B57\u683C\u5F0F\u932F\u8AA4 (\u53EA\u80FD\u6709\u4E00\u500B\u5B57\u5143\u503C)\u3002

java.string.malformed-octal-escape \u5B57\u4E32\u6587\u5B57\u5167\u7684 8 \u9032\u4F4D\u9041\u96E2\u683C\u5F0F\u932F\u8AA4\u3002

java.hex-literal.empty = 16 \u9032\u4F4D\u6578\u503C\u5FC5\u9808\u4EE5 0x \u958B\u982D\u3002

java.fp-literal.empty-exponent = \u6D6E\u9EDE\u6578\u6587\u5B57\u7684\u6307\u6578\u5FC5\u9808\u70BA\u6574\u6578\u3002

java.hexadecimal-fp-literal.missing-exponent = 16 \u9032\u4F4D\u6D6E\u9EDE\u6578\u6587\u5B57\u9700\u8981\u6307\u6578\u3002

java.hexadecimal-fp-literal.malformed = 16 \u9032\u4F4D\u6D6E\u9EDE\u6578\u6587\u5B57\u907A\u6F0F\u4E86\u6574\u6578\u8207\u5206\u6578\u5143\u7D20\u3002

java.octal-literal.malformed = 8 \u9032\u4F4D\u6578\u503C\u683C\u5F0F\u932F\u8AA4 -- \u6240\u6709\u4F4D\u6578\u7684\u7BC4\u570D\u5FC5\u9808\u5728 [0-7]\u3002

java.unicode.format = Unicode \u9041\u96E2\u5E8F\u5217\u5FC5\u9808\u6709\u56DB\u500B 16 \u9032\u4F4D\u7684\u4F4D\u6578\u3002

java.lexical.high-surrogate-character-in-identifier = ID \u4E2D\u7684 Unicode \u5B57\u5143\u53EA\u6709\u524D\u534A\u6BB5\u4EE3\u7528\u5B57\u5143\uFF0C\u7F3A\u5C11\u76F8\u5C0D\u61C9\u7684\u5F8C\u534A\u6BB5\u4EE3\u7528\u5B57\u5143\u3002

java.lexical.low-surrogate-character-in-identifier = ID \u4E2D\u7684 Unicode \u5B57\u5143\u53EA\u6709\u5F8C\u534A\u6BB5\u4EE3\u7528\u5B57\u5143\uFF0C\u7F3A\u5C11\u76F8\u5C0D\u61C9\u7684\u524D\u534A\u6BB5\u4EE3\u7528\u5B57\u5143\u3002

java.lexical.high-surrogate-character = Unicode \u5B57\u5143\u53EA\u6709\u524D\u534A\u6BB5\u4EE3\u7528\u5B57\u5143\uFF0C\u7F3A\u5C11\u76F8\u5C0D\u61C9\u7684\u5F8C\u534A\u6BB5\u4EE3\u7528\u5B57\u5143\u3002

java.lexical.low-surrogate-character = Unicode \u5B57\u5143\u53EA\u6709\u5F8C\u6BB5\u4EE3\u7528\u5B57\u5143\uFF0C\u7F3A\u5C11\u76F8\u5C0D\u61C9\u7684\u524D\u534A\u6BB5\u4EE3\u7528\u5B57\u5143\u3002

java.lexical.invalid-surrogate-pair-in-identifier = ID \u5305\u542B\u7121\u6548\u7684\u5B57\u78BC (\u6210\u5C0D\u7684\u9AD8/\u4F4E UTF-16)\u3002

java.import.ambiguous = \u6B64\u985E\u578B\u540D\u7A31\u4E0D\u660E\u78BA\uFF0C\u56E0\u70BA\u5B83\u7B26\u5408\u591A\u500B ''*'' \u532F\u5165\uFF0C\u5305\u62EC ''{0}'' \u8207 ''{1}''\u3002

java.statement.expression = \u5C07\u8868\u793A\u5F0F\u7576\u4F5C\u6558\u8FF0\u53E5\u7684\u4F7F\u7528\u65B9\u5F0F\u4E0D\u5408\u6CD5\u3002
java.statement.no-condition = \u62EC\u865F\u4E2D\u61C9\u63D0\u4F9B\u689D\u4EF6\u3002

java.array-creation.bad = \u5EFA\u7ACB\u7684\u985E\u578B\u540D\u7A31\u5F8C\u9762\u61C9\u6709\u4E2D\u62EC\u865F\u6216\u62EC\u865F\u3002

java.array.bad-dimension = \u9663\u5217\u7DAD\u5EA6\u985E\u578B\u5FC5\u9808\u53EF\u8F49\u63DB\u70BA\u6574\u6578\u3002

java.annotations.method.illegal-param = \u8A3B\u89E3\u65B9\u6CD5\u4E0D\u80FD\u6709\u53C3\u6578\u3002

java.annotations.method.illegal-throws = \u8A3B\u89E3\u65B9\u6CD5\u4E0D\u80FD\u6709 throws \u53E5\u5B50\u3002

java.annotations.illegal-extends = \u8A3B\u89E3\u5BA3\u544A\u4E0D\u80FD\u7E7C\u627F\u5176\u4ED6\u4ECB\u9762\u3002

java.annotations.value.not-convertible = \u6B64\u8A3B\u89E3\u503C\u7121\u6CD5\u8F49\u63DB\u6210\u8A3B\u89E3\u6210\u54E1\u5BA3\u544A\u7684\u985E\u578B\u3002

java.annotations.value.not-constant = \u6B64\u8A3B\u89E3\u6210\u54E1\u7684\u503C\u5FC5\u9808\u662F\u500B\u7DE8\u8B6F\u968E\u6BB5\u5E38\u6578\u3002

java.annotations.class-value.not-literal = \u6B64\u503C\u5FC5\u9808\u662F\u500B\u985E\u5225\u5E38\u503C\u8868\u793A\u5F0F\u3002

java.annotations.value.missing = \u5FC5\u9808\u63D0\u4F9B\u6578\u503C\u7D66\u6210\u54E1 ''{0}''\u3002

java.annotations.no-such-member = \u8A3B\u89E3\u6210\u54E1 ''{0}'' \u4E0D\u542B\u540D\u7A31\u70BA ''{1}'' \u7684\u6210\u54E1\u3002

java.annotations.duplicate-annotation = \u6B64\u5BA3\u544A\u5DF2\u6709\u4E00\u500B\u985E\u578B ''{0}'' \u7684\u8A3B\u89E3\u3002

java.annotations.duplicate-member = \u6B64\u8A3B\u89E3\u5DF2\u6307\u5B9A\u6210\u54E1 ''{0}'' \u7684\u503C\u3002

java.annotations.not-annotation-type = \u6B64\u985E\u578B\u4E0D\u662F\u8A3B\u89E3\u985E\u578B\u3002

java.annotations.method.bad-return-type = \u8A3B\u89E3\u65B9\u6CD5\u7684\u50B3\u56DE\u985E\u578B\u61C9\u70BA\u57FA\u672C\u985E\u578B\u3001enum \u985E\u578B\u3001\u8A3B\u89E3\u985E\u578B\u3001String \u6216 Class\u3002

java.annotations.invalid-target=\u6B64\u8A3B\u89E3\u985E\u578B\u5C0D\u6B64\u5143\u7D20\u985E\u578B\u7121\u6548\u3002
java.annotations.repeated-target=Target \u8A3B\u89E3\u4E2D\u51FA\u73FE\u91CD\u8907\u7684 ElementType \u5E38\u6578\u3002
java.annotations.cycle=\u4E0D\u5408\u6CD5\u7684\u8A3B\u89E3\u5FAA\u74B0\u3002

java.expected-type.missing = \u6B64\u6A94\u6848\u61C9\u5B9A\u7FA9\u540D\u7A31\u70BA {0} \u7684\u985E\u578B\uFF0C\u56E0\u70BA\u5176\u5728\u985E\u5225\u6216\u4F86\u6E90\u8DEF\u5F91\u4E2D\u7684\u4F4D\u7F6E\u6240\u5C0E\u81F4\u3002

java.class.superclass.final = \u6B64\u985E\u578B\u4E2D\u5217\u51FA\u7684\u8D85\u7D1A\u985E\u5225\u662F final\uFF0C\u4E0D\u80FD\u5F9E\u5176\u4E2D\u884D\u751F\u3002

java.depend.cycle = \u6B64\u5BE6\u9AD4\u4E2D\u5075\u6E2C\u5230\u5FAA\u74B0\u76F8\u4F9D\u6027\u3002

java.class.abstract.cannot-implement = \u6B64\u985E\u5225\u7684\u8D85\u7D1A\u985E\u5225\u6216\u4ECB\u9762\u5B9A\u7FA9\u4E86\u672A\u7E7C\u627F\u7684 abstract \u65B9\u6CD5\uFF0C\u56E0\u70BA\u6B64\u4F4D\u7F6E\u7121\u6CD5\u5B58\u53D6\u9019\u4E9B\u65B9\u6CD5\uFF0C\u4F46\u9019\u4E9B\u65B9\u6CD5\u4ECD\u6703\u907F\u514D\u6B64\u985E\u5225\u8B8A\u6210\u975E\u62BD\u8C61\u985E\u5225\u3002

java.class.abstract.method-cannot-implement = \u6B64\u985E\u5225\u7684\u8D85\u7D1A\u985E\u5225\u6216\u4ECB\u9762\u5B9A\u7FA9\u4E86\u4E00\u500B abstract \u65B9\u6CD5 {0}\uFF0C\u6B64\u4F4D\u7F6E\u7121\u6CD5\u5B58\u53D6\u6B64\u65B9\u6CD5\uFF0C\u56E0\u6B64\u4E0D\u6703\u7E7C\u627F\u5B83\uFF0C\u66F4\u4E0D\u6703\u5BE6\u884C\u5B83\u3002

java.class.abstract.method-not-implemented = \u6B64\u985E\u5225\u4E0D\u6703\u5BE6\u884C abstract \u65B9\u6CD5 {0}\u3002

java.member.method.final-override = \u6B64\u65B9\u6CD5\u5617\u8A66\u8986\u5BEB {1} \u7684 {0}\uFF0C\u4F46\u5B83\u5BA3\u544A\u70BA final\u3002

java.member.method.static-conflict = \u6B64\u65B9\u6CD5\u5617\u8A66\u8986\u5BEB {1} \u7684 {0}\uFF0C\u4F46\u5169\u8005\u7684 static \u7279\u6027\u4E0D\u540C\u3002

java.member.method.static-implementer = \u6B64\u65B9\u6CD5\u5617\u8A66\u5BE6\u884C {1} \u7684 {0}\uFF0C\u4F46\u5B83\u662F static\u3002

java.member.method.return-type-conflict = \u6B64\u65B9\u6CD5\u5617\u8A66\u8986\u5BEB {1} \u7684 {0}\uFF0C\u4F46\u50B3\u56DE\u985E\u578B\u885D\u7A81\u3002

java.member.method.erasure-conflict=\u6B64\u65B9\u6CD5\u8207 {1} \u7684\u65B9\u6CD5 {0} \u64C1\u6709\u76F8\u540C\u7684\u62ED\u53BB\u6CD5\uFF0C\u56E0\u6B64\u90FD\u4E0D\u6703\u8986\u5BEB\u5C0D\u65B9\u3002

java.member.method.access-conflict = \u6B64\u65B9\u6CD5\u5617\u8A66\u8986\u5BEB {1} \u7684 {0}\uFF0C\u4F46\u5B83\u7684\u5B58\u53D6\u9650\u5236\u8F03\u5F31\u3002

java.member.method.throws-conflict = \u6B64\u65B9\u6CD5\u5617\u8A66\u8986\u5BEB {1} \u7684 {0}\uFF0C\u4F46\u4E26\u672A\u5305\u542B\u9019\u88E1\u5217\u51FA\u7684\u6240\u6709\u53EF\u80FD\u7570\u5E38\u72C0\u6CC1\u3002

java.member.method.static-conflict.inherited = {1} \u7684\u65B9\u6CD5 {0} \u8207 {3} \u7684\u65B9\u6CD5 {2} \u7684 staitc \u7279\u6027\u885D\u7A81\u3002

java.member.method.static-implementer.inherited = {1} \u7684\u65B9\u6CD5 {0} \u5617\u8A66\u5BE6\u884C {3} \u7684 abstract \u65B9\u6CD5 {2}\uFF0C\u4F46\u7121\u6CD5\u5B8C\u6210\uFF0C\u56E0\u70BA\u5B83\u662F static\u3002

java.member.method.return-type-conflict.inherited = {1} \u7684\u65B9\u6CD5 {0} \u8207 {3} \u7684\u65B9\u6CD5 {2} \u7684\u50B3\u56DE\u985E\u578B\u885D\u7A81\u3002

java.member.method.erasure-conflict.inherited={1} \u7684\u65B9\u6CD5 {0} \u8207 {3} \u7684\u65B9\u6CD5 {2} \u64C1\u6709\u76F8\u540C\u7684\u62ED\u53BB\u6CD5\uFF0C\u56E0\u6B64\u90FD\u4E0D\u6703\u8986\u5BEB\u5C0D\u65B9\u3002

java.member.method.multiple-inherited-methods={1} \u7684\u65B9\u6CD5 {0} \u8207 {3} \u7684\u65B9\u6CD5 {2} \u7E7C\u627F\u4E86\u76F8\u540C\u7684\u7C3D\u7AE0\u3002

java.member.method.access-conflict.inherited = {1} \u7684\u65B9\u6CD5 {0} \u8207 {3} \u7684\u65B9\u6CD5 {2} \u7684\u5B58\u53D6\u9650\u5236\u885D\u7A81\u3002

java.member.method.throws-conflict.inherited = {1} \u7684\u65B9\u6CD5 {0} \u8207 {3} \u7684\u65B9\u6CD5 {2} \u7684 thorws \u5B50\u53E5\u885D\u7A81\u3002

java.warn.unchecked-return.inherited = \u6B64\u985E\u578B\u7E7C\u627F\u4E86\u5169\u7A2E\u7248\u672C\u7684\u65B9\u6CD5 {1}\uFF0C\u4E00\u500B\u4F86\u81EA {2}\uFF0C\u53E6\u4E00\u500B\u4F86\u81EA {3}; \u50B3\u56DE\u985E\u578B\u9700\u8981\u672A\u6AA2\u67E5\u7684\u8F49\u63DB\u3002

java.class.resolve.ioerror = \u6B64\u985E\u5225\u7121\u6CD5\u5F9E {0} \u8F09\u5165\u3002\u539F\u56E0: {1}\u3002

java.class.resolve.notfound = \u627E\u4E0D\u5230\u985E\u5225 {0}\u3002

java.class.annotation.with-enum = \u985E\u5225 {0} \u6709\u985E\u578B {1} \u7684\u8A3B\u89E3\u3002\u8A72\u8A3B\u89E3\u985E\u578B\u6709\u500B enum \u6210\u54E1\u3002\u76EE\u524D\u4E0D\u652F\u63F4\u6B64\u4F5C\u696D\uFF0C\u56E0\u6B64\u5C07\u5FFD\u7565\u6B64\u8A3B\u89E3\u3002

java.pkg.name.collision = \u5957\u4EF6\u8207\u76F8\u540C\u540D\u7A31\u7684\u985E\u5225\u885D\u7A81\u3002

# Displayed when an I/O exception occurs during generate.
generate.io-exception = \u7121\u6CD5\u5BEB\u5165 ''{0}'' \u7684 .class \u6A94: {1}

# Errors detected by the Javelin back-end

back-end.constant-pool-too-big = \u985E\u5225 ''{0}'' \u7684\u5E38\u6578\u904E\u591A ({1})\u3002

back-end.method.args-too-big = \u65B9\u6CD5 ''{0}'' \u7684\u5F15\u6578\u904E\u591A ({1})\u3002

back-end.constructor.args-too-big = \u5EFA\u69CB\u5B50 ''{0}'' \u7684\u5F15\u6578\u904E\u591A ({1})\u3002

java.enum.super-constructor-call = \u547C\u53EB\u8D85\u7D1A\u985E\u5225\u7684\u5167\u90E8 enum \u5EFA\u69CB\u5B50\u7121\u6548\u3002

java.class.enum-const.not-found = \u627E\u4E0D\u5230 enum \u5E38\u6578 ''{0}''\u3002

java.bound.not-interface=\u9019\u88E1\u61C9\u6709\u4ECB\u9762\u3002
java.bound.erasure-clash=\u985E\u578B\u8B8A\u6578\u4E4B\u7BC4\u570D\u7684\u62ED\u53BB\u6CD5\u5FC5\u9808\u4E0D\u540C\u3002
java.generics.type-argument-count=\u985E\u578B\u5F15\u6578\u7684\u6578\u91CF\u932F\u8AA4\u3002
java.generics.type-argument-primitive=\u4E0D\u5408\u6CD5\u7684\u57FA\u672C\u985E\u578B\u5F15\u6578\u3002
java.generics.type-argument-bounds=\u985E\u578B\u5F15\u6578\u4E0D\u5728\u6B64\u7BC4\u570D\u4E2D\u3002

java.warn.unchecked-conversion=\u672A\u6AA2\u67E5\u7684\u8F49\u63DB\u3002

java.warn.unchecked-return = \u6B64\u65B9\u6CD5\u8986\u5BEB {1} \u7684 {0}; \u50B3\u56DE\u985E\u578B\u9700\u8981\u672A\u6AA2\u67E5\u7684\u8F49\u63DB\u3002

unchecked.suppressed-warning=\u6709\u4E9B\u8F38\u5165\u6A94\u6848\u4F7F\u7528\u672A\u6AA2\u67E5\u6216\u4E0D\u5B89\u5168\u7684\u64CD\u4F5C\u3002\n\u8ACB\u4EE5 -Xlint:unchecked \u91CD\u65B0\u7DE8\u8B6F\u4EE5\u77AD\u89E3\u8A73\u7D30\u8CC7\u8A0A\u3002

deprecation.suppressed-warning=\u6709\u4E9B\u8F38\u5165\u6A94\u6848\u4F7F\u7528\u4E86\u5DF2\u4E0D\u518D\u4F7F\u7528\u7684 API\u3002\n\u8ACB\u4EE5 -Xlint:deprecation \u91CD\u65B0\u7DE8\u8B6F\u4EE5\u77AD\u89E3\u8A73\u7D30\u8CC7\u8A0A\u3002

# The following resource keys should mirror those found in
# IJavaFormattingOptions.java.  They use the following convention:
# java.<option page>.<option group>.<specific option>
#
# Note that for every fully qualified (2+ parts) option key, each hierarchical
# parent must also be defined.  That is because the option groups and option
# pages draw their names from this list as well.
#
# The exception is "java" itself, since it isn't used anywhere in the UI
# # java = Java

java                                    = Java

java.lines                              = Java: \u65B7\u884C

java.lines.before                       = \u4E4B\u524D\u7A7A\u884C
java.lines.before.imports               = \u532F\u5165
java.lines.before.class                 = \u985E\u5225
java.lines.before.methodDecl            = \u65B9\u6CD5\u5BA3\u544A
java.lines.before.nestedClass           = \u5DE2\u72C0\u985E\u5225

java.lines.ownLine                      = \u958B\u59CB\u65B0\u884C
java.lines.ownLine.else                 = else
java.lines.ownLine.while                = while
java.lines.ownLine.catch                = catch
java.lines.ownLine.finally              = finally
java.lines.ownLine.extends              = extends
java.lines.ownLine.implements           = implements
java.lines.ownLine.implemented_classes  = \u5BE6\u884C\u7684\u985E\u5225
java.lines.ownLine.decl_parameters      = \u65B9\u6CD5\u5BA3\u544A\u53C3\u6578
java.lines.ownLine.call_parameters      = \u65B9\u6CD5\u547C\u53EB\u53C3\u6578
java.lines.ownLine.throws               = throws
java.lines.ownLine.throw_classes        = throw \u985E\u5225
java.lines.ownLine.enum                 = enum \u503C



java.spaces                             = Java: \u7A7A\u683C

java.spaces.beforeParen                 = \u62EC\u865F\u524D
java.spaces.beforeParen.methodDecl      = \u65B9\u6CD5\u5BA3\u544A
java.spaces.beforeParen.methodCall      = \u65B9\u6CD5\u547C\u53EB
java.spaces.beforeParen.if              = if
java.spaces.beforeParen.while           = while
java.spaces.beforeParen.for             = for
java.spaces.beforeParen.switch          = switch
java.spaces.beforeParen.synchronized    = synchronized
java.spaces.beforeParen.catch           = catch

java.spaces.insideParens                = \u5167\u90E8\u62EC\u865F
java.spaces.insideParens.methodDecl     = \u65B9\u6CD5\u5BA3\u544A
java.spaces.insideParens.methodCall     = \u65B9\u6CD5\u547C\u53EB
java.spaces.insideParens.if             = if
java.spaces.insideParens.while          = while
java.spaces.insideParens.for            = for
java.spaces.insideParens.switch         = switch
java.spaces.insideParens.synchronized   = synchronized
java.spaces.insideParens.catch          = catch
java.spaces.insideParens.operation      = \u64CD\u4F5C

# Special options for for statements
java.spaces.for                         = for \u6558\u8FF0\u53E5\u53C3\u6578
java.spaces.for.beforeSemicolon         = \u5728\u6BCF\u500B\u5206\u865F\u524D
java.spaces.for.afterSemicolon          = \u5728\u6BCF\u500B\u5206\u865F\u5F8C
java.spaces.for.emptySemicolon          = \u5728\u7A7A\u767D\u5206\u865F\u4E4B\u9593
java.spaces.for.beforeColon             = \u5192\u865F\u524D
java.spaces.for.afterColon              = \u5192\u865F\u5F8C

java.spaces.param                       = \u65B9\u6CD5\u547C\u53EB\u53C3\u6578
java.spaces.param.comma                 = \u5728\u6BCF\u500B\u9017\u865F\u5F8C
java.spaces.param.noParams              = \u7121\u53C3\u6578

java.spaces.generic                     = \u4E00\u822C
java.spaces.generic.beforeClass         = \u5728\u985E\u5225\u4E00\u822C\u5316\u4E4B\u524D
java.spaces.generic.inside              = \u5728\u985E\u5225\u4E00\u822C\u5316\u4E4B\u5167
java.spaces.generic.afterComma          = \u5728\u6BCF\u500B\u9017\u865F\u5F8C
java.spaces.generic.afterField          = \u5728\u6B04\u4F4D\u6216\u53C3\u6578\u4E00\u822C\u5316\u4E4B\u5F8C

java.spaces.cast                        = \u8F49\u578B\u904B\u7B97\u5B50
java.spaces.cast.after                  = \u62EC\u865F\u5F8C

java.spaces.aroundOperator              = \u904B\u7B97\u5B50\u5468\u570D
# Having a separate option for every option is overwhelming and silly.
# Lump similar categories together, and point their options at the groups.
#java.spaces.aroundOperator.eq           = =
#java.spaces.aroundOperator.plus         = +
#java.spaces.aroundOperator.minus        = -
#java.spaces.aroundOperator.mult         = *
#java.spaces.aroundOperator.div          = /
#java.spaces.aroundOperator.mod          = %
#java.spaces.aroundOperator.and          = &
#java.spaces.aroundOperator.or           = |
#java.spaces.aroundOperator.xor          = ^
#java.spaces.aroundOperator.lshift       = <<
#java.spaces.aroundOperator.rshift       = >>
#java.spaces.aroundOperator.urshift      = >>>
#java.spaces.aroundOperator.andand       = &&
#java.spaces.aroundOperator.oror         = ||
#java.spaces.aroundOperator.lt           = <
#java.spaces.aroundOperator.gt           = >
#java.spaces.aroundOperator.lteq         = <=
#java.spaces.aroundOperator.gteq         = >=
#java.spaces.aroundOperator.eqeq         = ==
#java.spaces.aroundOperator.noteq        = !=
#java.spaces.aroundOperator.pluseq       = +=
#java.spaces.aroundOperator.minuseq      = -=
#java.spaces.aroundOperator.multeq       = *=
#java.spaces.aroundOperator.diveq        = /=
#java.spaces.aroundOperator.modeq        = %=
#java.spaces.aroundOperator.andeq        = &=
#java.spaces.aroundOperator.oreq         = |=
#java.spaces.aroundOperator.xoreq        = ^=
#java.spaces.aroundOperator.lshifteq     = <<=
#java.spaces.aroundOperator.rshifteq     = >>=
#java.spaces.aroundOperator.urshifteq    = >>>=
#java.spaces.aroundOperator.question     = ?
#java.spaces.aroundOperator.colon        = :
#java.spaces.aroundOperator.instanceof   = instanceof
java.spaces.aroundOperator.arithmetic   = \u7B97\u6578 (+ - * / %)
java.spaces.aroundOperator.bitwise      = \u4F4D\u5143\u904B\u7B97 (& | ^)
java.spaces.aroundOperator.shift        = \u504F\u79FB (<< >> >>>)
java.spaces.aroundOperator.logical      = \u908F\u8F2F (&& ||)
java.spaces.aroundOperator.relational   = \u95DC\u4FC2 (== != < > <= >=)
java.spaces.aroundOperator.ternary      = \u4E09\u5143 (? :)
java.spaces.aroundOperator.assignment   = \u6307\u5B9A (= += |= <<= etc.)
java.spaces.aroundOperator.parentheses  = \u62EC\u865F


java.braces                 = Java: \u5927\u62EC\u865F
java.braces.class           = \u985E\u5225
java.braces.enum            = enum
java.braces.method          = \u65B9\u6CD5\u5BA3\u544A
java.braces.if              = if
java.braces.switch          = switch
java.braces.case            = case
java.braces.while           = while
java.braces.do              = do
java.braces.for             = for
java.braces.synchronized    = synchronized
java.braces.try             = try
java.braces.catch           = catch
java.braces.finally         = finally
java.braces.anonymous       = \u533F\u540D\u5167\u90E8\u985E\u5225
java.braces.array           = static \u9663\u5217\u5BA3\u544A


# Combo choices for generic brace formats
java.braces.cuddled            = \u9760\u5728\u4E00\u8D77
java.braces.cuddled_with_space = \u9694\u4E00\u500B\u7A7A\u683C
java.braces.standard           = \u6A19\u6E96
java.braces.standard2          = \u6A19\u6E96\uFF0C\u6C92\u6709\u7A7A\u884C
java.braces.indented           = \u5927\u62EC\u865F\u7E2E\u6392
java.braces.indented2          = \u5927\u62EC\u865F\u7E2E\u6392 +

# Special case for brace rules above when braces are empty
java.braces.empty              = \u7A7A\u767D\u5340\u584A
java.braces.empty.normal       = \u6B63\u5E38\u898F\u5247
java.braces.empty.empty        = {}
java.braces.empty.space        = { }
java.braces.empty.leaveAlone   = \u4FDD\u7559



java.other                          = Java: \u5176\u4ED6

# Special options for switch statements
java.other.case                             = Switch \u6558\u8FF0\u53E5\u72C0\u6CC1
java.other.case.spaceBeforeColon            = \u5192\u865F\u524D\u7A7A\u683C
java.other.case.indentCase                  = \u7E2E\u6392 case \u6558\u8FF0\u53E5
java.other.case.indentBodies                = \u7E2E\u6392 case \u5167\u6587
java.other.case.betweenCaseBlocks           = case \u7FA4\u7D44\u9593\u7A7A\u884C
java.other.case.blocks                      = \u5340\u584A\u4E2D\u7684 case \u5167\u6587

java.other.blocks                           = \u5340\u584A
java.other.blocks.convertNestedStatements   = \u5C07\u55AE\u884C\u5167\u6587\u8F49\u63DB\u70BA\u5340\u584A

java.other.assert                           = \u5BA3\u544A
java.other.assert.parens                    = \u5C07\u6E2C\u8A66\u689D\u4EF6\u5305\u5728\u62EC\u865F\u4E2D
java.other.assert.colon                     = \u4EE5\u5192\u865F\u958B\u59CB\u65B0\u7684\u4E00\u884C

java.other.string                           = \u4E32\u63A5\u7684\u5B57\u4E32
java.other.string.wrapConcat                = \u63DB\u5230\u4E0B\u4E00\u884C
java.other.string.wrapPlus                  = \u5728\u524D\u4E00\u884C\u4FDD\u7559 '+'
java.other.string.outdentPlus               = \u5411\u5916\u7E2E\u6392 '+' \u4EE5\u6392\u9F4A\u5B57\u4E32

java.other.string.wordBreak                 = \u5C07\u5B57\u4E32\u6253\u65B7\u4EE5\u7B26\u5408\u908A\u754C\u5927\u5C0F
java.other.string.wordJoin                  = \u7B26\u5408\u908A\u754C\u5927\u5C0F\u6642\uFF0C\u628A\u5B57\u4E32\u9023\u8D77\u4F86
java.other.string.concat                    = \u4E32\u63A5\u7684\u5B57\u4E32
java.other.string.wrap.none                 = \u4FDD\u7559\u5728\u4E00\u884C\u4E2D
java.other.string.wrap.line                 = \u63DB\u5230\u4E0B\u4E00\u884C
java.other.string.wrap.indent               = \u63DB\u5230\u4E0B\u4E00\u884C\uFF0C\u7E2E\u6392
java.other.string.wrap.string               = \u63DB\u5230\u5B57\u4E32\u7684\u8D77\u59CB\u8655
java.other.string.wrap.plusLine             = \u5C07 + \u63DB\u5230\u4E0B\u4E00\u884C
java.other.string.wrap.plusIndent           = \u5C07 + \u63DB\u5230\u4E0B\u4E00\u884C\uFF0C\u7E2E\u6392
java.other.string.wrap.plusString           = \u5C07 + \u63DB\u5230\u5B57\u4E32\u7684\u8D77\u59CB\u8655
java.other.string.wrap.plusPreString        = \u5C07 + \u63DB\u5230\u5B57\u4E32\u7684\u8D77\u59CB\u8655\u524D

java.other.annotation                       = JSR-175 \u8A3B\u89E3
java.other.annotation.spaceBeforeParen      = \u62EC\u865F\u524D\u7A7A\u683C
java.other.annotation.spaceInsideParens     = \u62EC\u865F\u5167\u7A7A\u683C
java.other.annotation.spaceEmptyParens      = \u7A7A\u62EC\u865F\u5167\u7A7A\u683C
java.other.annotation.spaceBeforeEqual      = \u7B49\u865F\u524D\u7A7A\u683C
java.other.annotation.spaceAfterEqual       = \u7B49\u865F\u5F8C\u7A7A\u683C
java.other.annotation.parameters            = \u53C3\u6578\u63DB\u884C
java.other.annotation.wrap.none             = \u4FDD\u7559\u5728\u4E00\u884C\u4E2D
java.other.annotation.wrap.params           = \u5728\u7B2C\u4E00\u500B\u53C3\u6578\u4E0B\u5C0D\u9F4A
java.other.annotation.wrap.indent           = \u5C0D\u9F4A\u53C3\u6578\u7E2E\u6392
java.other.annotation.parenLine             = \u5C07\u6700\u5F8C\u7684\u62EC\u865F\u63DB\u5230\u5C08\u5C6C\u4E00\u884C\u3002

java.other.imports                          = \u532F\u5165
java.other.imports.sorted                   = \u7C21\u77ED\u6309\u5B57\u6BCD\u9806\u5E8F
java.other.imports.grouped                  = \u5C07\u6700\u4E0A\u5C64\u5957\u4EF6\u7D44\u5728\u4E00\u8D77
java.other.imports.star3                    = \u5728 3 \u500B\u5BE6\u9AD4\u5F8C\u4F7F\u7528\u842C\u7528\u5B57\u5143


# Because there is no generic text language, the text formatting options are
# piggybacking on java for message resources.  The following resource keys
# should mirror those found in ITextFormattingOptions.java.  They use the
# following convention:
# text.<option page>.<option group>.<specific option>
#
# Note that for every fully qualified (2+ parts) option key, each hierarchical
# parent must also be defined.  That is because the option groups and option
# pages draw their names from this list as well.

text                                = \u6587\u5B57
text.general.use_tabs               = \u4F7F\u7528 tab
text.general.tab_columns            = Tab \u8CC7\u6599\u6B04
text.general.indent_columns         = \u7E2E\u6392\u8CC7\u6599\u6B04
text.general.right_margin_columns   = \u53F3\u908A\u754C\u8CC7\u6599\u6B04
