#
# Generated by hk2-metadata-generator
#

[weblogic.cluster.ClusterConfigurationValidatorImpl]S
contract={weblogic.cluster.ClusterConfigurationValidator}

[weblogic.cluster.ClusterService]S
contract={weblogic.cluster.ClusterServices,weblogic.server.ActivatedService}

[weblogic.cluster.ClusterServiceActivator]
contract={weblogic.cluster.ClusterServicesActivator,weblogic.server.ServerService}
name=ClusterServiceActivator
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.cluster.ClusterServicesInvocationContextImpl]S
contract={weblogic.cluster.ClusterServicesInvocationContext}

[weblogic.cluster.InboundService]
contract={weblogic.cluster.InboundListener,weblogic.server.ServerService}
name=InboundService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={15}

[weblogic.cluster.MANRemoteClusterMemberManager]S
contract={weblogic.cluster.RemoteClusterMemberManager}
name=RemoteManSite

[weblogic.cluster.OutboundService]
contract={weblogic.server.ServerService}
name=OutboundService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={20}

[weblogic.cluster.PartitionPostStateTracker]S
contract={org.aopalliance.intercept.MethodInterceptor}
qualifier={org.glassfish.hk2.extras.interception.Interceptor}

[weblogic.cluster.PartitionStateTracker]S
contract={org.aopalliance.intercept.MethodInterceptor}
qualifier={org.glassfish.hk2.extras.interception.Interceptor}

[weblogic.cluster.RemoteClusterHealthCheckerImpl]S

[weblogic.cluster.RemoteClusterMemberManagerImpl]S
contract={weblogic.cluster.RemoteClusterMemberManager}
name=LocalSite

[weblogic.cluster.ServiceAdvertiserImpl]S
contract={weblogic.cluster.ServiceAdvertiser}

[weblogic.cluster.leasing.databaseless.ClusterLeaderService]
contract={weblogic.server.ServerService}
name=ClusterLeaderService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={15}

[weblogic.cluster.leasing.databaseless.DatabaseLessLeasingService]
contract={weblogic.cluster.singleton.ConsensusLeasing,weblogic.server.ServerService}
name=DatabaseLessLeasingService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.cluster.leasing.databaseless.PrimordialClusterLeaderService]
contract={weblogic.server.ServerService}
name=PrimordialClusterLeaderService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.cluster.migration.JTAMigrationHandlerImpl]S
contract={weblogic.cluster.migration.JTAMigrationHandler}

[weblogic.cluster.migration.MigratableTargetValidatorImpl]S
contract={weblogic.cluster.migration.MigratableTargetValidator}

[weblogic.cluster.migration.MigrationManagerService]
contract={weblogic.cluster.migration.MigrationManager,weblogic.server.ServerService}
name=MigrationManagerService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.cluster.migration.MigrationService]
contract={weblogic.server.ServerService}
name=MigrationService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.cluster.migration.rmiservice.MigratableRMIService]
contract={weblogic.management.internal.DeploymentHandler,weblogic.server.ServerService}
name=MigratableRMIService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.cluster.replication.AsyncReplicationManager]S
contract={weblogic.cluster.replication.ReplicationServices}

[weblogic.cluster.replication.LocalSecondarySelector]S
contract={weblogic.cluster.replication.SecondarySelector}
name=LocalClusterSecondarySelector

[weblogic.cluster.replication.MANAsyncReplicationManager]S
contract={weblogic.cluster.replication.ReplicationServices}

[weblogic.cluster.replication.MANRemoteClusterSecondarySelector]S
contract={weblogic.cluster.replication.SecondarySelector}
name=RemoteMANClusterSecondarySelector

[weblogic.cluster.replication.MANReplicationManager]S
contract={weblogic.cluster.replication.ReplicationServices}

[weblogic.cluster.replication.QueueManagerFactoryImpl]S
contract={weblogic.cluster.replication.QueueManagerFactory}

[weblogic.cluster.replication.ReplicationManager]S
contract={weblogic.cluster.replication.ReplicationServices}

[weblogic.cluster.replication.ReplicationService]
contract={weblogic.server.ServerService}
name=ReplicationService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={20}

[weblogic.cluster.replication.ReplicationServiceLocator]S

[weblogic.cluster.replication.ReplicationServicesFactoryImpl]S
contract={weblogic.cluster.replication.ReplicationServicesFactory}

[weblogic.cluster.replication.WroManager]S

[weblogic.cluster.singleton.ClusterMasterDiscovererImpl]S
contract={weblogic.cluster.singleton.ClusterMasterDiscoverer}

[weblogic.cluster.singleton.LeaseManagerFactory]S
contract={weblogic.cluster.singleton.LeasingFactory}

[weblogic.cluster.singleton.MigratableServerService]
contract={weblogic.cluster.singleton.MigratableServer,weblogic.server.ServerService}
name=MigratableServerService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.cluster.singleton.PostAdminSingletonServicesService]
contract={weblogic.server.ServerService}
name=PostAdminSingletonServicesService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={20}

[weblogic.cluster.singleton.PreAdminSingletonServicesService]
contract={weblogic.server.ServerService}
name=PreAdminSingletonServicesService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={15}

[weblogic.cluster.singleton.SingletonServicesBatchManager]
contract={weblogic.server.ServerService}
name=SingletonServicesBatchManager
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={20}

[weblogic.cluster.singleton.SingletonServicesManagerService]S
contract={weblogic.cluster.singleton.SingletonServicesManager}

