version=1.0
L10nPackage=weblogic.security
I18nPackage=weblogic.security
subsystem=Security
prefix=WL

090000=Unsupported circular group definition, {0}.
090001=Failed to broadcast LoginFailureRecord to the other cluster servers, {0}.
090002=Failed to broadcast unlock user {0} to the other clustered servers.\n{1}
090004=Problem closing enumeration: {0}.
090010=ACL {0} contains non-existent principal {1} - ignoring principal.
090020=User lockout expired, unlocking user {0}.
090022=Explicitly unlocked, user {0}.
090034=Not listening for SSL, {0}.
090038=Checking User {0} for Permission {1} {2}.
090039=Access failed (Thread = {0}), caused {1}.
090040=The File realm contains more users than the specified maximum. Maximum = {0}, currently have {1}.
090041=The File realm contains more groups than the specified maximum. Maximum = {0}, currently have {1}.
090042=The File realm contains more ACLs than the specified maximum. Maximum = {0}, currently have {1}.
090043=Group {0} should exist but does not.
090044=Principal {0} does not exist and therefore cannot be added to group {1}.
090045=Permission {0} does not exist.
090046=ACL {0} does not exist.
090047=Principal {0} does not exist thus cannot be added to ACL {1}.
090048=Made an in-memory only change to the File realm.
090049=System user {0} does not exist, creating it.
090051=Error creating security runtime management.
090052=Server installed as Windows NT service with incorrect password for user {0}. The password may have been changed since the server was installed as a Windows NT Service. Contact the Windows NT system administrator.
090055=The LDAP realm V1 is deprecated. Please use the LDAP realm V2.
090056=User {0} had{1,choice,1# one invalid login attempt|2# {1,number} invalid login attempts}, locking account for {2} minutes.
090060=The AccessDecision class "{0}" returned an error: {1}
090063=The DeployableRoleMapper "{0}" returned an error: {1}
090064=The DeployableAuthorizer "{0}" returned an error: {1}
090065=Getting boot identity from user.
090066=Problem handling boot identity. The following exception was generated: {0}
090067=User lockout expired, unlocking user {0} in security realm {1}.
090070=Failed to broadcast unlock user {0} in security realm {1} to the other cluster servers, {2}.
090072=Boot problem with filter rules. The reason was: {0}. The problem is in the rules for the connection filter.
090073=Problem with updating filter rules. The reason was: {0}. The problem is in the rules for the connection filter. The rules will not be updated in the repository.
090074=Initializing {0} provider using LDIF template file {1}.
090075=The {0} provider has had its LDIF information loaded from: {1}.
090076=A failure occurred while attempting to load LDIF for provider {0} from file {1}.
090077=A failure occurred while attempting to create {1} for the {0} provider had been loaded. The exception is {2}.
090078=User {0} in security realm {1} has had {2,choice,1# one invalid login attempt|2# {2,number} invalid login attempts}, locking account for {3} minutes.
090079=Failed to broadcast LoginFailureRecord for security realm {0} to the other cluster servers, {1}.
090080=The Server Private Key for server {0} was found in SSL.ServerKeyFileName.
090082=Security initialized using administrative security realm: {0}
090083=Storing boot identity in the file: {0}.
090087=Server failed to bind to the configured administrator port. The port may already be in use by another process.
090088=Private Key keystore alias is not specified in the SSL configuration of server {0}, security realm {1}. Assuming 6.x private key configuration. Loading the private key from a file.
090089=SSL did not find the passphrase for the private key of the server on server {0} for security realm {1}. This may cause an error when SSL attempts to load the private key of the server.
090091=SSL was unable to get a required Security Service.
090093=No pre-WLS 8.1 Keystore providers are configured for server {0} for security realm {1}.
090095=SSL cannot instantiate the keystore {1} on server {0}.
090097=The KeyManager class for private keys server {0} for security realm {1} could not be instantiated.
090101=A keystore exception was returned when the server {1} attempted to load trusted CAs from the keystore file {0}.
090108=The server was unable to retrieve the private key aliased by {2} from the configured keystore on server {0} for security realm {1}. Private key password might be invalid.
090109=The server was unable to find the configured private key on server {0} in the file specified by the SSL Server Key File Name attribute.
090110=The server was unable to find the configured certificate on server {0} in the file specified by the Server Certificate File Name attribute {1}.
090112=SSL is configured to require clients to present their certificates, however, no trusted certificates have been loaded. The trusted certificates are necessary for validating client certificates.
090113=Loaded {0} client trusted CAs from keystore.
090116=The server {0} is using the private key it retrieved from keystore aliased by {1}.
090118=LDIF template file {1} was empty. The WebLogic provider {0} has been bootstrapped but has not been initialized with any LDIF data.
090119=LDIF template file {1} not found. The WebLogic Server provider {0} has been bootstrapped but has not been initialized with any LDIF data.
090120=Cannot find the file specified by SSL.TrustedCAFileName {0} on server {1}.
090121=Loaded {0} client root CAs from TrustedCA File.
090122=Loaded {0} client root CAs from Default Key Store file {1}
090123=Cannot access specified trusted CA file {0} on server {1}.
090124=Cannot read certificates from the trusted CA file {0} on server {1}.
090125=Loaded {0} trusted certificates from keystore file specified on the command line: {1}.
090126=Unable to read a valid version number for property {0} from file {1}. Received exception {2}.
090127=Encountered a {2} exception while attempting to read from file {1} for WebLogic {0} provider.
090129=Updating {0} provider to version {2} using LDIF update template file {1}.
090130=Failure {3} while attempting to update the LDIF to version {2} in file {1} for WebLogic {0} provider.
090131=Could not create a {0} JDK keystore instance. Exception: {1}
090132=Could not open the keystore file {0} for read access. Exception: {1}
090133=Could not load a {1} keystore from the file {0}. Exception: {2}
090134=Could not load a {1} keystore from the file {0}. Exception: {2}
090135=Could not load a {1} keystore from the file {0}. Exception: {2}
090136=Could not open the keystore file {0} for write access. Exception {1}
090137=Could not store a {1} keystore in the file {0}. Exception: {2}
090138=Could not store a {1} keystore in the file {0}. Exception: {2}
090139=Could not store a {1} keystore in the file {0}. Exception: {2}
090140=Could not store a {1} keystore in the file {0}. Exception: {2}
090141=The WebLogic keystore provider {1} in security realm {0} cannot be used for private keys because its private key keystore was not configured.
090142=The WebLogic keystore provider {1} in security realm {0} cannot be used for trusted (root) CAs because its trusted (root) CA keystore was not configured.
090143=The WebLogic keystore provider {1} in security realm {0} cannot be used for private keys because its configured private key keystore file {2} does not exist.
090144=The WebLogic keystore provider {1} in security realm {0} cannot be used for trusted (root) CAs because its configured trusted (root) CA keystore file {2} does not exist.
090145=The WebLogic keystore provider {1} in security realm {0} cannot be used for private keys because its private key {3} keystore could not be loaded from the file {2}.
090146=The WebLogic keystore provider {1} in security realm {0} cannot be used for trusted CAs because its trusted CA {3} keystore could not be loaded from the file {2}.
090152=Demo trusted CA certificate is being used in production mode: {0}. The system is vulnerable to security attacks, since it trusts certificates signed by the demo trusted CA.
090153=Demo identity certificate is used in production mode: {0} The system is vulnerable to security attacks, since the server private key is available to the public.
090154=Identity certificate has expired: {0}.
090155=Identity certificate is not yet valid: {0}.
090156=Invalid identity certificate signature: {0}
090157=Unable to verify certificate signature: {0}.
090158=The server was unable to find the private key with alias {0} at location {1} on server {2}, security realm {3}. Ensure that the keystore exists and contains the key entry under the specified alias.
090160=Cannot find default trusted CA keystore file {0} on server {1}.
090161=A failure occurred while attempting to save LDIF for security provider {0} using file {1}.
090162=The {0} provider has had its LDIF information saved in: {1}.
090163=The {0} provider did not import a duplicate LDAP entry: {1}
090164=Failed to load trusted certificates from keystore {0} of type {1}
090165=Cannot find identity keystore file {1} on server {0}
090166=Failed to load identity keystore of type {2} from file {1} on server {0}
090167=Cannot retrieve identity certificate and private key on server {0}, because the keystore entry alias is not specified.
090168=No identity key/certificate entry was found under alias {2} in keystore {1} on server {0}.
090169=Loading trusted certificates from the {1} keystore file {0}.
090171=Loading the identity certificate and private key stored under the alias {2} from the {1} keystore file {0}.
090172=No trusted certificates have been loaded. Server will not trust to any certificate it receives.
090173=The server''s trust keystore configuration (specified on the command line or in boot.properties) is incorrect.
090174=The trust keystore configuration specified on the command line or in boot.properties does not match the trust keystore configuration specified in config.xml.
090175=Unrecognized Callback
090176=Illegal null Subject passed as a parameter.
090177=Invalid Message Digest requested, only MD5, SHA, and MD2 are supported.
090178=null Class
090179=Null action
090180=Could not convert AS to AU: {0}.
090181=Attempting to modify a sealed subject.
090182={0} is not a java.security.Principal.
090183=Got a NullPointerException in AuthenticatedUser.hashCode() with actual type {0}.
090184=invalid constraints
090185=No CallbackHandler was specified.
090186=Error: Callback {0} is not available.
090187={0} (Unable to delete)
090188=Cannot update a read-only PermissionCollection.
090190=Error creating {0}
090191=Error writing realm contents to {0}.
090192=Could not create temporary file for {0}, .new, {1}.
090193=Could not create temporary file for {0}, .old, {1}.
090194=Could not clear temporary file {0}.
090195=Could not rename {0} to {1}.
090196=Could not delete {0}.
090197=Cannot find permission {0}.
090198=No appropriate constructor for {0}
090199=Cannot instantiate abstract class {0}.
090200=No permission to instantiate constructor for {0}
090201=Incorrect argument for constructor for {0}
090202=Exception in constructor for {0}
090203=Trailing text after grant string
090204=Unexpected end of string in grant statement
090205=Expected "{0}" but found "{1}".
090206=Expected a guote (") but found "{0}".
090207=Version mismatch, have {0}, expected {1}.
090208=Corrupt {0}
090209=Could not close stream: {0}.
090210=Error opening {0}
090218=decoding error: {0}
090219=Error decrypting Secret Key {0}
090220=rule {0}
090221=Connection filter internal WebLogic Server error!
090222=unknown protocol "{0}"
090223=bad netmask: "{0}"
090224=bad netmask: "{0}"
090225=bad netmask: "{0}"
090226=bad netmask: "{0}"
090227=bad action "{0}"
090228=null filter
090229=Attempt to set connection filter more than once
090230=Zero length PEMInputStream
090231=Security already configured
090232=salt is not set
090233=problem with connection filter rules
090238=could not create User Name Mapper
090239=Identity Assertion type cannot be null
090240=Identity Assertion token cannot be null
090241=Identity Assertion type of {0} is not a configured active type.
090242=Client principal {0} is not trusted to assert identity.
090243=user Name Mapper class not configured - cannot assert identity
090244=Unknown Identity Assertion type {0}
090245=No mapping for Identity User Name
090246=Token not of type {0}
090247=Unable to verify {0}
090248=Unrecognized Callback
090249=Cursor is null
090250=Cursor not found {0}
090251=haveCurrent error for cursor name {0}
090252=advance error for cursor name {0}
090253=close error for cursor name {0}
090258=max cannot be < 0
090259=Group {0}
090261=Wildcard cannot be null.
090262=Error listing groups {0}
090263=parent group cannot be null
090264=member cannot be null
090265=member cannot be parent group
090266=group name cannot be null
090271=Member {0}
090278=Error listing member groups {0}
090279=Error listing users {0}
090281=user name cannot be null
090283=User {0}
090287=User {0}
090294=could not get connection
090296=invalid URL {0}
090297=No CallbackHandler specified
090298=No Delegate specified
090299=Username not supplied.
090300=Identity assertion failed: User {0} does not exist.
090301=Password not supplied.
090302=Authentication failed: User {0} denied.
090305=Authentication failed getting groups for User {0} {1}.
090307=DefaultAuthenticatorImpl constructor failed: {0}
090309=null subject
090310=Failed to create resource.
090311=Failed to set resource expression.
090313=policy removal error
090314=Entitlement Engine unable to connect to the embedded LDAP server\n{0}
090315=DefaultAuthorizerImpl init failed: {0}
090316=null helper
090318=DefaultRoleMapperImpl init failed: {0}
090319=Unknown resource type: {0}
090320=Failed to create role
090321=Failed to set role expression
090322=role removal error
090323=Map cannot be modified.
090330=DefaultCredentialMapperImpl.getCurrentMappingWLSUsername failed: No such resource maps list cursor available
090344=A valid security realm name must be specified when initializing.
090347=Auditor not yet initialized
090348=No AuthorizerMBeans and no AdjudicatorMBean provided.
090349=Need at least one AuthorizerMBean
090350=The RoleManager must be initialized prior to initializing an Authorization Manager.
090357=Calling isProtectedResource before the AuthorizationManager is initialized.
090358=Required parameter not supplied to isAccessAllowed.
090359=Required parameter not supplied to isProtectedResource.
090361=Exception: CredentialManager.initialize, Invalid or missing CredentialMapperMBean Mbean
090364=Exception: CredentialManager.getCredentials, credentialsType = null
090365=LoginModule error: loginModuleName {0}
090366=LoginModule error: null delegateLoginModuleName
090370=Invalid configuration, no AuthenticationProviderMBean passed to initialize.
090372=No CallbackHandler Supplied
090375=Null TokenType parameter
090376=Null Token parameter
090384=No Provider MBeans
090389=RoleManager not yet initialized.
090391=Null user identity
090392=SecurityServiceManager not yet initialized.
090393=Security service not yet initialized: {0}.
090394=Must specify a Security realm.
090395=Must specify a SecurityService.ServiceType.
090396=Security Realm {0} does not exist.
090397=Principal set does not contain a RealmAdapterUser.
090398=Invalid Subject: {0}
090399=Security services unavailable
090402=Authentication denied: Boot identity not valid. The user name or password or both from the boot identity file (boot.properties) is not valid. The boot identity may have been changed since the boot identity file was created. Please edit and update the boot identity file with the proper values of username and password. The first time the updated boot identity file is used to start the server, these new values are encrypted.
090403=Authentication for user {0} denied.
090404=User {0} is not permitted to start the server. The server policy may have changed in such a way that the user is no longer able to start the server. Restart the server with the administrative user account or contact the system administrator to update the server policy definitions.
090405=Can only initialize the SecurityService once.
090407=Invalid security configuration, no default security realm found.
090408=Security configuration is unavailable.
090409=Security credential is unavailable, a credential value must be supplied for the Security configuration.
090410=Invalid security realm name: {0}
090411=Security Realm [{0}] is improperly configured.
090412=Failed to initialize realm: {0}.
090413=No Realm MBean found. Bad configuration, unable to initialize Security.
090414=Need to configure at least one RoleMapperMBean.
090415=Need to configure at least one AuthorizerMBean.
090416=Cannot configure the Keystore providers : {0}
090419=Subject "{0}" is not the kernel identity.
090420=Security provider error: providerClassName {0} creation exception.
090421=Security provider error: providerClassName {0} not found.
090423=The Server {0} was unable to find the server certificate file {1} specified by the SSL ServerCertificateFileName attribute.
090424=Cannot find the private key with alias {0} in the keystore at location {1}.
090425=Cannot read private key file {0}. Exception is {1}
090426=Cannot read private key from file {0}. Ensure that the password specified in environment property {1} is valid. Exception is {2}
090427=The server {0} was unable to find private key in the file {1} specified by the SSL ServerKeyFileName attribute.
090428=Cannot call setJava2SecurityMode more than once.
090431=Received a null user name.
090433=Inconsistent InvalidLogin record
090434=Enumerator returned a null element for a key.
090435=Subject {0} does not have permission to unlock user {1} in security realm {2}.
090436=Inconsistent hashtable, key exists but not value.
090437=Security service is unavailable.
090438=Invalid parameter
090439=Invalid file parameter {0} specified for adminstrator account creation.
090440=Encryption error
090442=location null or empty
090443=null file
090444=null keystore
090445=null or empty passphrase
090446=Invalid base template
090447=invalid flag value {0}
090448=Invalid Format: {0}
090449=Invalid constraints
090450=Invalid name supplied
090451=Unable to read file: {0}
090452=Import is only available on the Administration Server.
090453=Import file error
090454=No base data to export
090455=Export File Error
090456=Three arguments are required.
090457=Type must be {0} or {1} value is {2}.
090458=Signature type cannot be null.
090459=Signed by cannot be null.
090461=Class not Found {0}
090462=Illegal access on context wrapper class {0}
090463=Instantiation exception on context wrapper class {0}
090464=Problem accessing private key
090465=Problem with certificate chain {0}
090466=Assertion: illegal keystores value: {0}
090467=problem with connection filter
090468=Set the AuditProviderClassName attribute to a valid value
090469=Invalid file format
090470=Inconsistent security configuration, the {0} security realm has been configured to use security data in deployment descriptors but no {1} has been configured with deployment enabled.
090473=DefaultAuthorizerImpl search failed: {0}
090474=Unable to create temporary file: {0}
090475=Plaintext data for protocol {0} was received from peer {1} instead of an SSL handshake.
090476=Invalid/unknown SSL header was received from peer {0} during SSL handshake.
090477=Certificate chain received from {0} was not trusted causing SSL handshake failure.
090478=Certificate chain received from {0} was not signed properly causing SSL handshake failure.
090479=Certificate chain received from {0} failed date validity checks.
090480=SSL alert ({1}) received from {0}. Check the peer SSL configuration, or enable SSL debug tracing on the peer.
090481=NO_CERTIFICATE alert was received from {0}. Verify that the SSL configuration has a proper SSL certificate chain and private key specified.
090482=BAD_CERTIFICATE alert was received from {0}. Check the peer to determine why it rejected the certificate chain (trusted CA configuration, hostname verification). SSL debug tracing may be required to determine the exact reason for which the certificate was rejected.
090483=CERTIFICATE_REVOKED alert was received from {0}. The certificate chain sent to the peer was rejected because it was revoked by the certificate authority.
090484=CERTIFICATE_EXPIRED alert was received from {0}. A certificate in the certificate chain expired or is not yet valid, or the peer and local machine have a date/time mismatch.
090485=CERTIFICATE_UNKNOWN alert was received from {0}. The peer has an unspecified issue with the certificate. SSL debug tracing should be enabled on the peer to determine what the issue is.
090486=UNSUPPORTED_CERTIFICATE alert was received from {0}. The peer rejected a certificate in the chain because it was an unsupported type. Verify all certificates in the chain are valid X.509 RSA certificates.
090487=UNKNOWN_CA alert received from {0}. The peer is rejecting the certificate chain as being untrusted or incomplete.
090488=PROTOCOL_VERSION alert received from {0}. Check that the peer supports the same level of the SSL/TLS protocol being used (SSL V3.0 and TLS V1.0).
090489=NO_RENEGOTIATION alert was received from {0}. The peer does not support renegotiation.
090490=ACCESS_DENIED alert received from {0}. The peer recognizes the certificate chain but a higher-level access control is rejecting it.
090491=INSUFFICIENT_SECURITY alert received from {0}. The peer requires stronger ciphers to be supported.
090492=UNEXPECTED_MESSAGE alert received from {0}.
090493=BAD_RECORD_MAC alert received from {0}. The peer indicated it received a record with an invalid MAC.
090494=DECRYPTION_FAILED alert received from {0}. The peer detected errors when decrypting.
090495=RECORD_OVERFLOW alert received from {0}. The peer received an invalid record with a length greater than allowed.
090496=DECOMPRESSION_FAILURE alert received from {0}. The peer was unable to decompress data.
090497=HANDSHAKE_FAILURE alert received from {0}. Check both sides of the SSL configuration for mismatches in supported ciphers, supported protocol versions, trusted CAs, and hostname verification settings.
090498=ILLEGAL_PARAMETER alert received from {0}.
090499=DECODE_ERROR alert received from {0}.
090500=DECRYPT_ERROR alert received from {0}. A decryption error occurred during the SSL handshake.
090501=EXPORT_RESTRICTION alert received from {0}.
090502=INTERNAL_ERROR alert received from {0}. Check for unrelated failures such as insufficient resources.
090503=The public key from the configured server certificate and the configured server private key do not match.
090504=Certificate chain received from {0} failed hostname verification check. Certificate contained {1} but check expected {2}
090505=No certificate chain was received from {0}, hostname verification check failed.
090506=Unspecified exception occurred handling hostname verification for {0}.
090508=Certificate chain received from {0} was incomplete.
090509=The SSL ListenPort attribute {0} cannot be the same as the non-secure ListenPort for the server.
090510=Error: username not specified.
090511=The following exception has occurred: \n
090513=ServerIdentity {0} failed validation, downgrading to anonymous.
090514=The server certificate chain has settings that might cause it to be rejected by peers during SSL handshaking. No action is required unless peers are rejecting the certificate chain.
090515=The certificate chain could not be completely checked for issues that could cause it to be rejected by a peer during SSL handshaking. No action is required unless peers are rejecting the certificate chain.
090516=The {0} provider has pre-existing LDAP data.
090518=Could not decrypt the {1} attribute value of {2} from the file {0}. If an encrypted attribute was copied from boot.properties from another domain into {0}, change the encrypted attribute to its clear text value, and then restart the server. The attribute will be encrypted again. Otherwise, change all encrypted attributes to their clear text values, then restart the server. All encryptable attributes will be encrypted again. The decryption failed with the exception {3}.
090519=The realm {0} is not properly configured. Follow the directions in subsequent errors to correctly configure the realm.
090520=The realm {0} does not have an authenticator configured. To correct the problem, configure an authenticator.
090521=The realm {0} does not have a role mapper configured. To correct the problem, configure a role mapper.
090522=The realm {0} does not have a deployable role mapper configured. To correct the problem, configure a deployable role mapper.
090523=None of the deployable role mappers in realm {0} have deployments enabled. To correct the problem, enable deployments in one of the deployable role mappers.
090524=The realm {0} does not have an authorizer configured. To correct the problem, configure an authorizer.
090525=The realm {0} does not have a deployable authorizer configured. To correct the problem, configure a deployable authorizer.
090526=None of the deployable authorizers in realm {0} have deployments enabled. To correct the problem, enable deployments in one of the deployable authorizers.
090527=The realm {0} does not have a credential mapper configured. To correct the problem, configure a credential mapper.
090530=The realm {0} has more than one identity asserter configured with the token type {1} selected as an active type. To correct the problem, decide which of the identity asserters should handle this token type. Set it as an active type in that identity asserter, and unset it as an active type for all the other identity asserters.
090531=The realm {0} has multiple authorizers but no adjudicator. To correct the problem, configure an adjudicator.
090532=The realm {0} has a realm adapter adjudicator but no realm adapter authorizer. To correct the problem, configure a realm adapter authorizer.
090533=The realm {0} has a realm adapter adjudicator but no default authorizer. To correct the problem, configure a default authorizer.
090534=The realm {0} has a realm adapter adjudicator but multiple default authorizers. To correct the problem, remove all the default authorizers except one.
090535=The realm {0} has a realm adapter adjudicator but is using an authorizer that is neither a realm adapter authorizer nor a default authorizer. To correct the problem, remove all authorizers except the realm adapter authorizer and the default authorizer.
090536=The realm {0} has multiple realm adapter authorizers. To correct the problem, remove all the realm adapter authorizers except one.
090537=The realm {0} has multiple realm adapter authenticators. To correct the problem, remove all the realm adapter authenticators except one.
090538=The realm {0} has a realm adapter authorizer but no realm adapter authenticator. To correct the problem, configure a realm adapter authenticator.
090539=The realm {0} has keystore configured that is not a default keystore. To correct the problem, remove the non-default keystore.
090540=The realm {0} has more than one default keystore configured for trusted CAs. To correct the problem, ensure that only one default keystore provider has its root CA keystore location configured.
090541=The realm {0} has more than one default keystore configured for private keys. To correct the problem, ensure that only one default keystore provider has its private key keystore location configured.
090542=Certificate chain received from {0} was not trusted, causing SSL handshake failure. Check the certificate chain to determine whethr or not it should be trusted. If it should be trusted, then update the client trusted CA configuration to trust the CA certificate that signed the peer certificate chain. If you are connecting to a WebLogic Server instance that is using demo certificates (the default WebLogic Server behavior), and you want this client to trust demo certificates, then specify -Dweblogic.security.TrustKeyStore=DemoTrust on the command line for this client.
090543=Certificate chain received from {0} was incomplete. Check the peer certificate chain to determine if it should be trusted or not. If it should be trusted, then update the client trusted CA configuration to trust the CA that signed the certificate chain. If the chain was incomplete, correct the chain. If you are connecting to a WLS server that is using demo certificates (the default WLS server behavior), and you want this client to trust demo certificates, then specify -Dweblogic.security.TrustKeyStore=DemoTrust on the command line for this client.
090544=No search filter was supplied.
090545=DefaultRoleMapperImpl search failed: {0}.
090546=The server is configured to use custom identity and command line trust, but either demo trust or no trust was specified on the command line or in boot.properties.
090547=The certificate chain received from {0} contained a V3 CA certificate which had basic constraints that were not marked critical. This is being rejected due to the strict enforcement of basic constraints.
090548=The certificate chain received from {0} contained a V3 CA certificate that was missing the basic constraints extension
090549=The certificate chain received from {0} contained a V3 CA certificate that did not indicate it really is a CA.
090550=The certificate chain received from {0} contained a V3 CA certificate that indicated a certificate chain path length in the basic constraints that was exceeded.
090551=The certificate chain received from {0} contained a V3 CA certificate that could not be converted to be checked for basic constraints.
090552=The public and private key could not be checked for consistency.
090554=Set the RealmClassName attribute of the BasicRealm {0} used by the CachingRealm to a valid value.
090560=Could not load the {0} class named {1}. The exception was {3}. The class was specified via the {2} system property value.
090561=Could not instantiate a {0} of class {1}. The exception received is {3}. The class was specified via the {2} system property value.
090562=Could not create a {0} of class {1} because it is not assignable as a {2}. The class was specified via the {3} system property value.
090563=Cannot create instance of Hostname Verifier {0}.
090564=Specified HostnameVerifier class {0} is invalid. It does not implement weblogic.security.SSL.HostnameVerifier interface.
090565=The server SSL identity key algorithm {0} is not supported.
090566=The certificate chain received from {0} contained a V3 certificate with unrecognized critical extension: {1}.
090567=The certificate chain received from {0} contained a V3 certificate for which key usage constraints forbid its key use by the key agreement algorithm.
090568=Cannot check key usage constraints of certificate received from {0} because of the failure to determine the key agreement algorithm.
090569=The certificate chain received from {0} contained a V3 CA certificate for which key usage constraints indicate its key cannot be used to sign certificates.
090571=Successfully loaded the JACC Policy object using {0}.
090572=The javax.security.jacc.policy.provider property points to a non-existant {0} class.
090573={1} exception occurred while attempting to access {0}.
090574={1} exception occurred while attempting to instantiate {0}.
090575=The {0} class is not an instance of java.security.Policy.
090576=A PolicyConfigurationFactory could not be obtained successfully.
090577=Successfully obtained a {0} PolicyConfigurationFactory.
090578=The JACC provider returned a {0}.
090579=The javax.security.jacc.PolicyConfigurationFactory.provider property points to a non-existant class {0}.
090580=The CertPathBuilderParameters constructor was passed an illegal realm name.
090581=The CertPathBuilderParameters constructor was passed an illegal CertPathSelector.
090582=The CertPathValidatorParameters constructor was passed an illegal realm name.
090589=The WLSJDKCertPathBuilder was passed an illegal CertPathParameters.
090590=The WLSJDKCertPathValidator was passed an illegal CertPathParameters.
090591=The realm {0} does not have any Certification Path providers configured. To correct the problem, configure at least one Certification Path provider.
090592=The realm {0} does not have a Certification Path builder configured. To correct the problem, select one of the realm"s Certification Path providers as the realm"s Certification Path builder.
090593=The realm {0} has an illegal Certification Path builder configured. To correct the problem, select one of the realm"s Certification Path providers as the realm"s Certification Path builder.
090598=Unable to update the domain controller list
090599=Unable to initialize the domain controller list
090600=Failed to retrieve the local machine name.
090601=Cannot access domain controller {0}.
090602=The java and native library versions do not match for the WindowsNTAuthenticator.
090615=A CertPathBuilderParameters or CertPathValidatorParameters object was constructed with a list of trusted CAs that includes a null trusted CA.
090623=Failed to get the default trusted CAs for this server.
090625=Policy context {0} not in open state.
090626=Received a {0} when attempting to delete Policy Directory {1}.
090627=Cannot link a PolicyConfiguration to itself.
090628=Cannot have circular policy configuration links.
090629=Received a {0} when attempting to use the passed role to principal map for PolicyConfiguration with a ContextID of {1}.
090631=Unable to create the PolicyWriter directory {0}.
090632=Cannot create {0}. Non directory file already exists with the same name. Please remove it.
090633=Cannot open policy file {0}. Received exception {1}.
090634=Cannot write to policy file {0}. Received exception {1}.
090635=No results
090636=No results
090637=No role name was supplied.
090638=No resource data
090639=No resource type
090640=No resource identifier
090641=No resource keys were found.
090642=Invalid data type for {0} resource key value
090643=Invalid resource type: "{0}"
090644=Expected resource type: {0}
090645=Expected resource key: {0}
090646=Unknown resource key: {0}
090647=Invalid application name
090648=Invalid component name
090649=Illegal application search name
090650=Illegal component search name
090651=No component type
090652=Invalid component type: "{0}"
090653=Empty array value found
090654=Unexpected resource identifier data: "{0}"
090655=Unexpected resource key array value: "{0}"
090658=Unable to convert file {0} to URL. Got exception {1}.
090660=Certificate chain received from {0} was not validated by the custom trust manager {1} causing SSL handshake failure.
090661=Certificate chain received from {0} was not validated by the custom trust manager {1} causing SSL handshake failure. Check the certificate chain to determine if it should be trusted or not. If it should be trusted, then update the custom trust manager to trust the certificate chain.
090662=The DeployableAuthorizer "{0}" implements the deprecated {1} interface.
090663=The DeployableRoleMapper "{0}" implements the deprecated {1} interface.
090666=Deployment handle was not supplied.
090667=Application information was not supplied.
090668=Ignored deployment of role "{0}" for resource "{1}".
090669=Ignored deployment of policy for resource "{0}".
090670=Unable to verify user name token for user {0}
090672=Identity assertion object for token type {0} was of type {1} instead of expected type of {2}.
090673=Digest data source {0} was not found. Disabling digest authentication.
090674=Digest data source {0} was not initialized due to an exception. Disabling digest authentication. The exception text is {1}.
090675=An SQL connection could not be obtained from a digest data source {0} due to an exception. Disabling digest authentication. The exception text is {1}.
090676=The SQL statement {0} could not be prepared due to an exception. Disabling digest authentication. The exception text is {1}.
090677=The {0} table could not be created due to an exception. Disabling digest authentication. The exception text is {1}.
090678=Authentication failed with digest {0} due to an exception that occurred while detecting the replay attack. The exception text is {1}.
090679=Authentication failed due to detection of a replay attack for nonce {0} and digest {1}.
090680=Unable to verify the digest authentication for user {0} since the created time is not within the expiration time period.
090681=Digest authentication for user {0} has been disabled due to a previous fatal error in initializing replay detection
090682=Problem handling security deployment validation: {0}
090700=There is a problem with the class {0} pointed to by the weblogic.security.jacc.RoleMapperFactory.provider property.
090701=Unable to successfully obtain a RoleMapperFactory.
090705=The PolicyConfigurationFactory, Policy, RoleMapperFactory class names are not specified or not compatible with each other.
090707=Successfully obtained a {0} RoleMapperFactory.
090709=Inconsistent security configuration.
090714=The certificate chain from the peer could not be validated. Chain : {0}. Reason : {1}.
090716=Failed to retrieve identity key/certificate from keystore {1} under alias {2} on server {0}.
090717=Invalid server {0} SSL configuration
090718=Security initializing using java security manager.
090719=Security initializing using JACC for EJB and Servlet authorization.
090720=The Managed Server could not start because the NodeManager''s encryption service data was not found.
090721=The Managed Server could not start because it could not read the NodeManager''s encryption service data.
090724=Challenge identity assertion has not completed, subject is not available yet.
090725=Challenge identity assertion has completed, challenge token is not available.
090764=The ApplicationVersioner "{0}" for application "{1}" returned an error: {2}.
090765=Failed to create policies for application version {0}.
090766=Failed to create roles for application version {0}.
090772=The security realm {0} does not support application versioning. Unable to deploy the application {1}.
090773=Failure in creating security application version information for the application {0}.
090774=This method requires an encrypted argument but the argument passed to it was in clear text.
090777=Exception when trying to sign a SAML assertion: {0}
090779=Identity {0} failed validation, downgrading to anonymous.
090780=The values specified by -Dweblogic.security.URLResourceCaseMapping({0}) and WebAppFilesCaseInsensitive Attribute on SecurityConfiguraitonMBean({1}) do not match.
090782=Server is running in Production Mode and the System Console to read the password securely from the command line was not found. The System Console is not present if stdin, stdout, or stderr is redirected when starting WebLogic Server.
090783=Server is running in Development Mode and the System Console to read the password securely from the command line was not found. The System Console is not present if stdin, stdout, or stderr is redirected when starting WebLogic Server.
090787=A null data source name was specified.
090788=Problem with data source or connection pool configuration, verify that data source name {0} is correct and pool configurations are correct.
090812=Could not create a {0} keystore instance for provider {1}. Exception: {2}
090814=Security shutting down the security realm: {0}
090817=These configuration changes cannot be activated because a default realm is not configured for the domain.
090818=These configuration changes cannot be activated because the domain does not have a properly configured default realm.
090819=The JACC property {0} is not set.
090820=The internal variable {0} is null and it should not be.
090823=Could not register the WebLogic Server X509CertificateFactory as the default X509CertificateFactory for this JVM.
090827=LDIF template file {1} was empty. The WebLogic provider {0} has been bootstrapped but has not been initialized with any LDIF data.
090838=The required WebLogic JACC RoleMapperFactory was not specified. Please specify the factory class using the weblogic.security.jacc.RoleMapperFactory.provider system property.
090839=Unexpected exception while registering SAML {0} service in application context {1}.
090840=Registered SAML service {0} at URI {1} in application context {2}.
090846={0} provider initialization failed: Invalid {1} attribute "{2}".
090847={0} provider initialization failed: Missing {1} attribute.
090859=The realm {0} does not have a certification path validator configured. To correct the problem, configure a cert path provider that supports cert path validation.
090861=Certificate policies extension processing failed. PolicyId: {0} does not exist in the allowed list.
090862=Certificate policies extension processing failed. PolicyQualifierID: {0} is not CPS.
090865=The realm {0} is not configured to handle MBean authorization. To correct the problem, configure an authorization provider that supports MBean authorization.
090866=The deployment of an unchecked policy for the resource "{0}" has been ignored. Unchecked policy is the default policy for URL and EJB resources. An unchecked policy can result if a deployment descriptor specifies a transport guarantee without the use of an authorization constraint.
090868=The realm {0} has an invalid SAML configuration. To correct the problem, ensure that there is only one of each SAML provider type and that the version of the SAML providers are the same.
090869=The PolicyConsumer "{0}" returned an error: {1}.
090870=The realm "{0}" failed to be loaded: {1}.
090871=The RoleConsumer "{0}" returned an error: {1}.
090872=The {0} service can not be found for {1}.
090873=Expected a {0} object but did not get one.
090874={0} returned a null {1}.
090875=Null parameter supplied to method {0}.
090876={0} Consumer not configured.
090877=Service {0} unavailable, see exception text: {1}
090878=Unknown token type: {0}
090880=Could not load JAAS configuration file for JVM.
090882=SSL has established a session that uses a Null cipher.
090883=Resource name is null or empty.
090884=User name is null or empty.
090885=Remote user name is null or empty.
090886=List number should not be negative.
090888=The SSL client running within the server does not have a certificate. It will use the server's certificate.
090889=The SSL client running within the server could not obtain the server''s certificate.
090892=Failure checking for OPSS Java Security Policy provider due to an exception. See the exception stack trace or the server log file for the root cause. Error message: {1}
090893=The OPSS Java Security Policy provider conflicts with the JACC Policy provider. Only one of these Java Security Policy providers can be enabled.
090896=The SSL ListenPort attribute {0} cannot be the same as the Administration Port for the server.
090897=A failure occurred while attempting to update XACML global policies for security provider {0}.
090898=Ignoring the trusted CA certificate "{0}". Loading of the trusted certificate list raised a certificate parsing exception {1}.
090899=User attribute name cannot be null.
090900=User attribute name is not supported for the specified operation.
090901=Invalid group name: {0}. Cannot contain {1}.
090902=The certificate chain received from {0} contained a V1 certificate which cannot be a CA.
090905=Disabling the CryptoJ JCE Provider self-integrity check for better startup performance. To enable this check, specify -D{0}=true.
090906=Changing the default Random Number Generator in RSA CryptoJ from {1} to {2}. To disable this change, specify -D{0}=true.
090907=Invalid user name: {0}. Cannot contain {1}.
090908=Using the default WebLogic SSL Wildcard Hostname Verifier implementation.
090909=Using the configured custom SSL Hostname Verifier implementation: {0}.
090910=Grant statement has invalid syntax: {0}
090911=Permission found in grant statement has invalid syntax: {0}
090912=Attempting to check revocation status for certificate with subject: {0}
090913=Unknown revocation status not causing failure for certificate with subject: {0}
090914=Certificate revocation status: {0}
090915=Nonce was ignored by the OCSP responder, forcing certificate revocation status to be ignored and considered unknown: {0}.
090916=Unknown revocation status causing failure for certificate with subject: {0}.
090917=Revoked certificate causing validation failure, certificate with subject: {0}.
090918=Non-revoked certificate with subject: {0}.
090919=The configured SSL minimum protocol version {0} is invalid or not supported. The minimum has been changed to {1}.
090920=Certicom SSL is available, however JSSE is being used for SSL, since JSSE has been selected by system property {0}, either explicitly or by default.
090921=JSSE has not been selected by system property {0}, however Certicom SSL is not available, so JSSE is being used for SSL.
090922=Certicom SSL is available, however JSSE is being used for SSL, since JSSE has been selected by the SSLMBean.JSSEEnabled attribute, either explicitly or by default.
090923=JSSE has not been selected by the SSLMBean.JSSEEnabled attribute, however Certicom SSL is not available, so JSSE is being used for SSL.
090924=JSSE has been selected by default, since the SSLMBean is not available.
090925=JSSE has been selected by default, since the system property {0} has the invalid value "{1}".
090926=Illegal key store source value [keyStoreType="{0}", source="{1}", exception="{2}", message="{3}"]
090927=Illegal or unknown key store type value [keyStoreType="{0}", source="{1}"]
090928=Unable to instantiate key store [keyStoreType="{0}", provider="{1}", exception="{2}", message="{3}"]
090929=Unable to load key store [keyStoreType="{0}", source="{1}", exception="{2}", message="{3}"]
090930=One of the Custom Identity Key Store attributes is not set on the channel override (NetworkAccessPointMBean). If any of the following attributes are set, then all of these attributes must be set: CustomIdentityKeyStoreFileName, CustomIdentityKeyStoreType, and either CustomIdentityKeyStorePassPhrase or CustomIdentityKeyStorePassPhraseEncrypted.
090931=When overriding Custom Identity Key Store attributes, ChannelIdentityCustomized must be enabled.
090932=When overriding Custom Identity Key Store attributes, CustomPrivateKeyAlias must be set on the channel override (NetworkAccessPointMBean).
090933=Unable to obtain private key with alias {2} from {1} keystore file : {0}
090934=Loading certificates and private key from {1} keystore file {0} caused an Exception :{2}
090935=Could not load a {1} keystore from the file {0}. Exception: {2}
090936=Security restarting security realm: {0}
090937=Security completed restarting security realm: {0}
090938=Authentication failure: The specified user failed to log in.
090939=The JWTToken is invalid.
090940=JWTIdentityAsserter received unknown token data, data should by byte[].
090941=The JWT token cannot pass the sign validation.
090942=Partitions require a realm with updated default role mapper and authorizations policies. The realm {0} does not contain the correct default policies. Create a new realm and reapply any custom policies.
090943=The provider {1} in realm {0} does not support identity domains via the IdentityDomainAwareProviderMBean interface. If identity domains are configured in the domain, then all role mapper, authorization, credential mapper, and audit providers must support this interface.
090944=Inconsistent security configuration, the provider {1} in security realm {0} does not support identity domains via the IdentityDomainAwareProviderMBean interface. If identity domains are configured in the domain, then all role mapper, authorization, credential mapper, and audit providers must support this interface.
090945=Security shutting down retired instance of security realm: {0}
090946=Security pre-initializing using security realm: {0}
090947=Security post-initializing using security realm: {0}
090948=Security starting security realm: {0}
090949=Security completed starting security realm: {0}
090950=The realm "{0}" failed during shut down: {1}.
090951=Failed operation using security realm: {0}
090952=Provider configured for identity domain(s) "{0}" but login was supplied identity domain {1}
090953=These configuration changes cannot be activated because the Administrative Identity Domain must be set on the Security Configuration when Identity Domains are in use.
090954=These configuration changes cannot be activated because the Primary Identity Domain must be set on Partition {0} when Identity Domains are in use.
090955=These configuration changes cannot be activated because there is no authenticator configured to support the "{0}" Identity Domain value.
090956=Both permissions.xml and a deployment descriptor grant were found.
090957=One or more of the declared permissions in permissions.xml are not allowed.
090958=Security permissions declared in the "{0}" deployment descriptor are not allowed due to the server''s configuration.
090959=Java EE packaged permissions are not allowed due to the server''s configuration.
090960=The server''s SSL configuration is not available. There will potentially be SSL handshake failures.
090961=These configuration changes cannot be activated because the realm "{0}" already exists.
090962=These configuration changes cannot be activated because the realm "{0}" is not valid.
090963=The {0} provider imports a modified entry: {1}
090964=The connection to the datasource using "{0}" could not be established due to the following error: {1}.
090965=Unable to create policy with type {0}. Got exception {1}.
090966=A failure has occurred checking for WebLogic Kernel Permission: {0}
090967=LDAP test connection failed: {0} not configured.
090968=Error processing test connection parameters {0}: {1}
090969=Identity Assertion type cannot be null
090970=Identity Assertion token cannot be null
090971=Identity Assertion type of {0} is not a valid token type for the OpenID Connect Identity Assertion provider.
090972=Resource type already registered: "{0}"
090973=Ldap request wait exceeds time limit {0} milliseconds, try number count {1}
090974=File does not exist {0}
090975=The connection between the WebLogic servers cannot be authorized since the nonce value has expired. Verify that clock skew has not occurred between the servers in the domain.
090976=Secure Mode is enabled but no auditing provider is configured in realm: {0}.
090977=Secure Mode is enabled but the Default Auditor logging level does not include WARNING, ERROR, and FAILURE audit records in realm: {0}.
090978=Secure Mode is enabled but user lockout settings are not secure in realm: {0}, i.e. LockoutThreshold should not be greater than 5, LockoutDuration should not be less than 30.
090979=Secure Mode is enabled but unencrypted password is used in command line, i.e. system property weblogic.management.password is set.
090980=Secure Mode is enabled but no password validator is configured in realm: {0}.
090981=Secure Mode is enabled but the Security Manager is not enabled.
090982=Secure Mode is enabled but PostBind is not enabled for machine : {0} when unix machine is configured and port {1} < 1024 is used.
090983=Secure Mode is enabled but the the administration port is not enabled.
090984=Secure Mode is enabled but the fie or directory {0} owner {1} does not match the domain directory owner {2}.
090985=Secure Mode is enabled but the the file or directory {0} is insecure since its permission is not a minimum of umask 027.
090986=Secure Mode requires a realm with updated default authorizations policies. The realm {0} does not contain the correct default policies. Create a new realm and reapply any custom policies.
090987=SSLv3 is enabled by the system property {0} in secure mode. SSLv3 is vulnerable and should not be enabled.
090988=Basic Constraints extension validation is turned off by the system property {0}=off in secure mode.
090989=SSL hostname verification is disabled by the system property {0} in secure mode.
090990=SSL hostname verification is disabled by the SSL configuration of server {0} in secure mode.
090991=SSL hostname verification is disabled by the SSL configuration of server channel {0} in secure mode.
090992=SSLv3 is enabled as the minimum TLS protocol version by the system property {0} in secure mode.
090993=SSLv3 is enabled as the minimum TLS protocol version by the SSL configuration of server {0} in secure mode.
090994=SSLv3 is enabled as the minimum TLS protocol version by the SSL configuration of server channel {0} in secure mode.
090995=Null cipher suites are allowed by the system property {0} in secure mode.
090996=Null cipher suites are allowed by the SSL configuration of server {0} in secure mode.
090997=Null cipher suites are allowed by the SSL configuration of server channel {0} in secure mode.
090998=Anonymous cipher suites are allowed by the system property {0} in secure mode.
090999=TLS client initiated secure renegotation is enabled by the SSL configuration of server {0} in secure mode.
091000=TLS client initiated secure renegotation is enabled by the SSL configuration of server channel {0} in secure mode.
091001=Insecure cipher suites are configured by the SSL configuration of server {0} in secure mode: {1}
091002=Insecure cipher suites are configured by the SSL configuration of server channel {0} in secure mode: {1}.
091003=Secure Mode requires that users in the Administrators group do not have obvious user names. Change the user name "{0}" so it is not a commonly used administrator name.
091004=Secure Mode requires that the samples are not installed in the WebLogic installation directory.
091005=Boot authentication attempt failed. Retry attempt {0} of {1}
091006=The WLS SSL-ALPN jars are not found in java.endorsed.dirs directory. The HTTP/2 over SSL (h2) protocol will not be supported.
091007=The Oracle Identity Cloud Service returned {0} HTTP 429 status code responses (Too Many Requests) in the last {1} seconds.
091008=The Oracle Identity Cloud Service returned {0} service unavailable or network timeout responses in the last {1} seconds.
091009=The WlsSecurityContextImpl of the request '{0}' initiated successfully.
091010=An IllegalArgumentException occurred during WlsSecurityContextImpl authenticate. '{0}'
091011=The Auditor of WlsSecurityContextImpl realm['{0}'] initiated successfully.
091012=The arguments of WlsSecurityContextImpl's hasAccessToWebResource should not be null. The current arguments are: resource={0}, methods={1}.
091013=The WlsCallerDetailsResolver's {0} method gets a null currentSubject from the SecurityServiceManager.
091014=The caller is in role [{0}] with {1}.
091015=The Oracle Identity Cloud Integrator provider retried {0} requests in the last {1} seconds due to getting HTTP 429 responses (Too Many Requests) from the Oracle Identity Cloud Service.
091016=The Oracle Identity Cloud Integrator provider performed {0} backoff attempts in the last {3} seconds due to getting HTTP 429 responses (Too Many Requests) from the Oracle Identity Cloud Service. Of these attempts, {1} succeeded and {2} failed when the backoff ended.
091017=The {0} security provider is deprecated and will be removed in a future release. Please migrate to the {1} security provider.

