prefix=WL
messagedetail100000=The user code has invoked a deprecated method.
cause100000=The method was deprecated in the latest servlet specification.
action100000=Check the specification for an alternative. If not corrected, unpredictable behavior might occur.
messagedetail100005=Session removal failed.
cause100005=An unexpected error occurred while removing the session.
action100005=Check the exception text for the exact error message.
severity100006=64
messagedetail100006=HTTP session file persistence: storing sessions in directory: {0}. This is the directory to which HTTP sessions will be written.
cause100006=This is an informational message.
action100006=Ensure that the directory stores the sessions per the PeristentStoreDir session parameter (weblogic.xml).
severity100007=64
messagedetail100007=Erasing the directory tree for persistent HTTP sessions: {0} for file based persistent sessions. This will remove the directory tree from the disk.
cause100007=The storage directory is being deleted as a result of session invalidation.
action100007=Ensure that deletion is occurring while removing sessions.
messagedetail100008=Unable to delete file persistent store directory "{0}".
cause100008=The storage directory failed to be deleted.
action100008=Ensure that the permissions on this directory are correct and that the file and directory are not in use by another process.
severity100010=128
messagedetail100010=Session stored to persistent store.
cause100010=The container persists the modified session onto the disk after the request is served.
action100010=Make sure the path is consistent with the session parameter, PersistentStoreDir (weblogic.xml).
messagedetail100011=Serialization of the session attributes failed.
cause100011=This might be due to a change in the class definition or serialVersionUID.
action100011=Check the exception text for the exact error message and take appropriate action.
severity100013=64
messagedetail100013={0} not invalidated. The session that was serialized into the file system does not exist.
cause100013=The session was not found and does not exist.
action100013=This session might have been deleted by a trigger in another server, which is pointing to the same storage location.
severity100015=64
messagedetail100015=Deleted file-based session persistent store file: {0}.
cause100015=This is an informational message indicating that the storage file is being deleted.
action100015=Ensure that the deletion is consistent with the path defined in the PersistentStoreDir (weblogic.xml)
messagedetail100016=Session expiration check failed for: {0}. Invalidating the session expiration check.
cause100016=An unexpected error occurred while checking the session for expiration.
action100016=The session will be removed from the persistent store. Check the exception text for the exact error message.
messagedetail100018=Failed to load the session from the disk.
cause100018=An unexpected error occurred.
action100018=Check the exception text for the exact error message. The file could be corrupted.
severity100019=64
messagedetail100019=File-based persistent session ID: "{0}" was stored in file: "{1}". File exists: {2}.
cause100019=This is an informational message indicating that the session was stored in this path.
action100019=Ensure that the file-based persistent session storage is consistent with the PersistentStoreDir (weblogic.xml).
messagedetail100020=A problem occurred while parsing the cookie.
cause100020=The cookie could not be parsed properly.
action100020=Check the cookie format and the exception text for the exact problem.
severity100022=64
messagedetail100022=Session invalidation interval: {0}
cause100022=The session invalidation trigger is being created.
action100022=Ensure that the session invalidation interval is consistent with the InvalidationIntervalSecs (weblogic.xml).
messagedetail100025=An unexpected error occurred in the HTTP session timeout callback while deleting sessions.
cause100025=The invalidation trigger failed unexpectedly while deleting sessions.
action100025=Check the exception message for the probable cause.
messagedetail100026=An unexpected error occurred in the HTTP session timeout callback while checking session expiration.
cause100026=An unexpected error occurred while checking the sessions for expiration.
action100026=Check the exception text for the exact error message.
messagedetail100028=The session data could not be deserialized.
cause100028=The session data could not be deserialized.
action100028=Ensure that the object being put into the session is serializable and that the non-transient objects it aggregates are also serializable. If any of the non-transient objects in the entire object graph are not serializable, this error message will occur.
severity100030=64
messagedetail100030=HTTP session expired. Session ID: {0}
cause100030=This is an informational message indicating that the session with ID {0} has expired.
action100030=If the session expired sooner than expected, check the SessionTimeout parameter in the weblogic.xml file.
messagedetail100031=This runtime MBean is used to monitor statistics for the HTTP sessions.
cause100031=This MBean could not be removed.
action100031=Check the exception text for the exact error message.
messagedetail100032=This runtime MBean is used to monitor statistics for the HTTP sessions.
cause100032=This MBean could not be created.
action100032=Check the exception text for the exact error message.
stack100033=false
messagedetail100033=The sessions will not be replicated to other servers in the cluster.
cause100033=The license was not valid to support replicated sessions.
action100033=Check the license. An upgrade to a clustering and replication license may be desired. Alternatively, file and JDBC persistence can be used for session store reliability.
severity100035=64
stack100035=false
messagedetail100035=The timer invalidated session ID: {0}, Web application: {1}, because it expired.
cause100035=This message was logged by the Web application level timer, which periodically checks the sessions for expiration. The session expired.
action100035=If the session expired too soon, check the SessionTimeout in the weblogic.xml file.
severity100037=128
stack100037=false
messagedetail100037=Creating SessionContext of type: {0} for Web application: {1}.
cause100037=This message is logged on Web application deployment.
action100037=Make sure the SessionContext type is consistent with PersistentStoreType (weblogic.xml).
stack100038=false
messagedetail100038=Unknown persistent type: {0} for Web application: {1}. Valid types are: memory, file, replicated, JDBC, cookie, and replicated_if_clustered.
cause100038=The specified persistent store type for this Web application was not recognized.
action100038=Check the PersistentStoreType parameter in the weblogic.xml file. The valid values are: memory, file, replicated, cookie, JDBC, and replicated_if_clustered.
stack100039=false
messagedetail100039=Replicated HTTP sessions were specified for the Web application: {0}, but clustering was not enabled.
cause100039=The session replication mechanism relies on clustering, which was not been configured.
action100039=Set up clustering or change the PersistentStoreType in the weblogic.xml file to either memory, file, JDBC, or cookie.
severity100040=64
stack100040=false
messagedetail100040=The getAttribute(): {0} was a handle. Reconstructing the EJB object.
cause100040=This is an informational message indicating that the container is storing only the handle for the EJB object placed into the session.
action100040=No action is required.
severity100041=64
stack100041=false
messagedetail100041=The setAttribute(): {0} was an EJB object. Storing the handle into the session.
cause100041=The container found an EJB handle stored in the session. It will reconstruct the EJB object before returning it.
action100041=No action is required.
messagedetail100042=An error occurred while reconstructing the EJB object: {0}, which was put into the session.
cause100042=The container found an EJB handle stored in the session. However, it failed to reconstruct the EJB object using that handle.
action100042=Ensure that the handle is still valid. Check the exception text for the exact error message.
messagedetail100043=An error occurred while finding the handle for the EJB object: {0}.
cause100043=The container stores only the handle for an EJB object put into the session. However, in this case, it failed to find the handle.
action100043=Check the RemoteException for the exact error message details.
severity100044=64
stack100044=false
messagedetail100044=Found WLCookie cookie {0}={1}.
cause100044=The cookie persistence mechanism relies on setting the cookie header.
action100044=No action is required.
messagedetail100045=Malformed WLCookie. Value: {0} will be ignored.
cause100045=The cookie persistence mechanism relies on setting the cookie header.
action100045=The cookie was found to be malformed. Only strings are supported for cookie-based persistence. Ensure that there are no characters in the attribute names and values, which can break the cookie syntax.
severity100046=64
stack100046=false
messagedetail100046=Creating new session with ID: {0} for Web application: {1}.
cause100046=A new session was created.
action100046=Ensure that the length is equal to the IDLen parameter in the weblogic.xml file.
severity100047=64
stack100047=false
messagedetail100047=Performing the database operation: {0} with ID: {1} and Web application: {2}.
cause100047=This is an informational message for JDBC-based persistence. It is meant for debugging purposes only.
action100047=No action is required.
severity100048=64
stack100048=false
messagedetail100048=Looked up ROID: {0} from host {1}:{2} for ID: {3}.
cause100048=The replicated session ID was not found in the current server, perhaps because this server is not the primary or secondary server. Another attempt to retrieve the session from the assigned secondary server will be made if it is alive.
action100048=No action is required.
severity100050=64
stack100050=false
messagedetail100050=The current server is becoming the primary server for replicated session ID: {0}.
cause100050=The current server is taking the role of the primary server for the given session.
action100050=No action is required.
severity100051=64
stack100051=false
messagedetail100051=The current server is becoming the secondary server for replicated session ID: {0}.
cause100051=The current server is taking the role of the secondary server for the given session.
action100051=No action is required.
severity100052=64
stack100052=false
messagedetail100052=Unregistering replicated session ID: {0}.
cause100052=The current server will unregister the given session.
action100052=The session was invalidated. No action is required.
severity100053=16
messagedetail100053=Failed to update the secondary server for HTTP session ID: {0}.
cause100053=Failed to update the secondary server for the modification that occurred in the current request.
action100053=Verify that the secondary server is alive, and ensure that the objects put into the session are all serializable. Also, check the exception text for the exact error message.
severity100054=16
messagedetail100054=Failed to find the secondary server for HTTP session ID: {0}.
cause100054=The secondary server could not be found for the replicated session.
action100054=Verify that the clustering is configured properly and that there is more than one server in the cluster.
severity100055=64
stack100055=false
messagedetail100055=The generated session ID: {0} contains a reserved keyword and is regenerating.
cause100055=On Windows 32-bit systems, if the session ID contains a reserved keyword, the file-based persistence fails. This is because it relies upon successful creation of subdirectories. The reserved keywords are: "CON", "PRN", "AUX", "NUL" "COM1", "COM2", "COM3", " COM4", "COM5", "COM6", "COM7", " COM8", "COM9", "LPT1", "LPT2", " LPT3", "LPT4", "LPT5", "LPT6", " LPT7", "LPT8", "LPT9", "CLOCK$"
action100055=No action is required. The session ID will be regenerated.
stack100056=false
messagedetail100056=For {0}: The session with ID: {1} was invalidated before the session creation and registration could complete.
cause100056=This is a past-release problem.
action100056=Contact My Oracle Support.
stack100057=false
messagedetail100057=This server does not have deployment for the Web application with context path: {0}. The callback: {1} failed while replicating the session. Check the configuration; only uniform configurations in a cluster are supported.
cause100057=WebLogic Server clustering relies on uniform Web application deployment across the cluster. It seems the Web application was not deployed on all the servers.
action100057=Redeploy the Web application, and ensure that it targets the cluster and all members in the cluster.
stack100058=false
messagedetail100058=The PersistentStoreType for the Web application with context path: {0} is not replicated. The callback: {1} failed while replicating the session. Check the configuration; only uniform configurations in a cluster are supported.
cause100058=WebLogic Server clustering relies on uniform Web application deployment across the cluster. It seems the Web application was not deployed on all the servers with uniform configuration.
action100058=Redeploy the Web application, and ensure that it targets the cluster and all members in the cluster. Also, the PersistentStoreType should be set to "replicated" for all cluster members.
messagedetail100059=An unexpected error occurred while cleaning up sessions during undeployment of Web application: {0}.
cause100059=The trigger failed to clean up the expired session.
action100059=Check the exception text for the exact error message. When using JDBC-based HTTP session persistence, ensure that the database is set up properly. For file-based persistence, ensure that the permissions on the storage directory are appropriately set.
messagedetail100060=An unexpected error occurred while retrieving the session for Web application: {0}.
cause100060=The session from persistent store could not be retrieved.
action100060=Check the configuration, and check the exception text for the exact error message. Also, check the WebLogic Server documentation for more details about how to configure session persistence for Web applications.
severity100061=16
messagedetail100061=Web application: {0} tried to place a non-serializable attribute: {1} into the session: {2}. This attribute will be lost upon redeployment. This message is logged only once per session.
cause100061=The session.setAttribute(name, value) was invoked with a non-serializable value for memory-based sessions.
action100061=If the session data should survive redeployment, ensure that all attributes are serializable. Otherwise, the non-serializable data will be lost upon redeployment.
severity100062=16
messagedetail100062=Web application: {0} tried to place a non-serializable attribute: {1} into the session: {2}. This attribute will be lost upon redeployment or session failover. Also, such attributes will be scoped to the current server only and will not be replicated to the secondary server. This message is logged only once per session.
cause100062=The session.setAttribute(name, value) was invoked with a non-serializable value for a replicated session.
action100062=If the session data should survive redeployment and session failovers, ensure that all attributes are serializable. Otherwise, the non-serializable data will be lost upon failover and redeployment.
severity100063=16
messagedetail100063=Web application: {0} tried to place a non-serializable attribute: {1} into the session: {2}. This attribute will be lost upon redeployment or session failover. Also, such attributes will be scoped to the current server only and will not be persisted to the disk. This message is logged only once per session.
cause100063=The session.setAttribute(name, value) was invoked with a non-serializable value for a file-based persistent session.
action100063=If the session data should survive redeployment and session failovers, ensure that all the attributes are serializable. Otherwise, the non-serializable data will be lost upon failover and redeployment.
severity100064=16
messagedetail100064=Web application: {0} tried to place a non-serializable attribute: {1} into the session: {2}. The attribute will be lost upon redeployment or session failover. Also, such attributes will be scoped to the current server only and will not be persisted to the database. This message is logged only once per session.
cause100064=The session.setAttribute(name, value) attribute was invoked with a non-serializable value for a JDBC-based persistent session.
action100064=If the session data should survive redeployment and session failovers, ensure that all the attributes are serializable. Otherwise, the non-serializable data will be lost upon failover and redeployment.
messagedetail100065={0}. Failed to remove attributes for HTTP session ID: {1}.
cause100065=An unexpected error occurred during HTTP session invalidation.
action100065=Check the error message for the exact cause.
messagedetail100066=Failed to look up the replicated session object for Web application: {0}, session ID: {1}.
cause100066=The ReplicationManager returned the NotFoundException.
action100066=This happens if the object has been cleaned up underneath or the version number does not match with the secondary object. This should not happen normally. Unwanted failovers at the front end can cause unnecessary session failovers in the back end, which could result in this error in certain situations. Check the error message for more information.
messagedetail100067=Failed to look up the secondary information for Web application: {0} session ID: {1}.
cause100067=The ReplicationManager returned the NotFoundException. This happens if the object has been cleaned up underneath or the version number does not match with the secondary object. This should not happen normally. Unwanted failovers at the front end can cause unnecessary session failovers in the back end, which could result in this error in certain situations.
action100067=Check the error message for more information.
messagedetail100068=Failed to look up the secondary information for Web application: {0} session ID: {1}.
cause100068=The ReplicationManager failed to look up the secondary information for a valid session.
action100068=This is an unexpected error. Check the error message for details.
severity100069=64
stack100069=false
messagedetail100069=The getAttribute(): {0} was a HomeHandle, reconstructing the EJBHome.
cause100069=This is an informational message indicating that the container is storing only the handle for the EJBHome placed into the session.
action100069=No action is required.
messagedetail100070=Error reconstructing the EJBHome put into session for name: {0}
cause100070=The container found an EJBHome handle stored in the session. However, it failed to reconstruct the EJBHome using that EJBHome handle.
action100070=Ensure that the HomeHandle is still valid. Check the exception text for the exact error message.
severity100071=64
stack100071=false
messagedetail100071=The setAttribute(): {0} was an EJBHome, storing the HomeHandle into the session.
cause100071=The container found an EJBHome handle stored in the session. It will reconstruct the EJBHome object before returning.
action100071=No action is required.
messagedetail100072=Error in finding the HomeHandle for the EJBHome: {0}.
cause100072=The container stores only the handle for an EJBHome put into the session. However, in this case, it failed to find the HomeHandle.
action100072=Check the RemoteException for the exact error message details.
messagedetail100073=Exception while serializing session object: {0}.
cause100073=The session object failed to serialize.
action100073=Check the exception text for the exact error message details.
severity100088=128
messagedetail100088=HTTPSession attribute: "{0}" is not serializable.
cause100088=The session attribute {0} is not serializable. Session attributes should either implement java.io.Serializable, java.io.Externalizable or java.rmi.Remote.
action100088=Objects in session should be serializable if you wish to persist HTTPSession state on disk/memory.
severity100077=128
stack100077=false
messagedetail100077=HTTPSession attribute: "{0}" is of size {1} bytes.
cause100077=Informational message.
action100077=No action required.
severity100078=128
stack100078=false
messagedetail100078=HTTPSession with id: "{0}" is of size {1} bytes.
cause100078=Informational message.
action100078=No action required.
stack100079=false
messagedetail100079=In order to failover sessions across the cluster, the backup cluster address or the JDBCTxDataSource must be specified to store session state. For futher information, refer to the WebLogic Server documentation.
cause100079=The JDBCTxDataSource or the backup cluster address was not properly configured.
action100079=Set the JDBCTxDataSource or the backup cluster address to store session state.
stack100081=false
messagedetail100081=Persistent store settings cannot be changed between versions. The persistent store settings for application {0} is different from the settings for previous versions.
cause100081=The persistent store settings of the new version were different from previous versions.
action100081=Ensure that the persistent store settings are not changed when deploying a new version of an application.
stack100082=false
messagedetail100082=Failed to deploy {0} because the JDBC data source was missing. Target a JDBC data source to the cluster.
cause100082=The configuration was incomplete.
action100082=Target a JDBC data source to the cluster. Refer to the cluster documentation for more information.
messagedetail100083=The Web application: {0} in application: {1} has its PersistenceStoreType set to: {2} for HTTP sessions. However, the target list does not contain all members of cluster: {3}. Non-homogeneous deployment for replicated sessions is not allowed.
cause100083=Non-homogeneous deployment for replicated sessions is not allowed. The target list must be a cluster or a virtual host which is targeted to a cluster.
action100083=Fix the targets for this Web application. Specify a cluster or virtual host as the target.
messagedetail100084=The Web application: {0} in application: {1} has its PersistenceStoreType set to: {2} for HTTP sessions. However, the target list contains virtual host: {3}, for which the target list does not contain all members of cluster: {4}. Non-homogeneous deployment for replicated sessions is not allowed.
cause100084=Non-homogeneous deployment for replicated sessions is not allowed. The target list must be a cluster or a virtual host which is targeted to a cluster.
action100084=Fix the targets for this Web application.Specify a cluster or virtual host as the target.
messagedetail100087=The JDBC session data for session ID: {0} has been modified by another server in the cluster.
cause100087=The front-end Web server failed to maintain server affinity.
action100087=Ensure that the front-end Web server or load balancer has been properly configured.
severity100089=16
messagedetail100089=The session id: {0} has been accessed from {1}, a server that is neither the primary ({2}) nor the secondary ({3}). Repeated occurrences of this can cause memory problems and performance degradation, as sessions are loaded into memory on more than two servers at a time.
cause100089=The most likely cause is a configuration error on a front end hardware loadbalancer or webserver plugin. They should be configured to respect the values of primary/secondary in the cookie (i.e., stickiness), when possible.
action100089=Please ensure that the front end webserver or load-balancer has been properly configured.
messagedetail100090=An unexpected error occurred during a batched update of the last accessed time attribute of the updated sessions in application {0}.
cause100090=Check the exception message for details.
action100090=Check the exception message for details.
severity100091=128
messagedetail100091=\n{0}\n Context Path\t: {1}\n HttpSession ID\t: {2}\n Attribute Name\t: {3}\n Previous Value\t: {4}\n Current Value\t: {5}\n
cause100091=debug info.
action100091=debug info.
severity100092=128
messagedetail100092=Dumping session:\n{0}\n
cause100092=debug info.
action100092=debug info.
severity100093=128
messagedetail100093=\n{0}\n Context Path\t: {1}\n HttpSession ID\t: {2}\n
cause100093=debug info.
action100093=debug info.
severity100094=16
messagedetail100094=The session ID: {0} has been accessed from {1}, a server that is not the primary ({2}). Repeated occurrences of this can cause memory problems and performance degradation, as sessions are loaded into memory on more than two servers at a time.
cause100094=The most likely cause is a configuration error on a front-end hardware load balancer or Web server plug-in. These should be configured to respect the values of the primary or secondary in the cookie (for example, stickiness), when possible.
action100094=Ensure that the front-end Web server or load balancer has been properly configured.
messagedetail100095=persistent-data-source-jndi-name is required for an async-jdbc session.
cause100095=persistent-data-source-jndi-name was not used to specify the data source JNDI name for the JDBC connection, but persistent-store-type is async-jdbc.
action100095=Use persistent-data-source-jndi-name to specify the data source JNDI name for the JDBC connection.
severity100096=16
messagedetail100096=persistent-data-source-jndi-name will take effect and persistent-store-pool will be ignored for async-jdbc session in application {0}.
cause100096=This is debug information.
action100096=No action is required.
severity100097=16
messagedetail100097=The IDLength {0} is too short. It is not secure. A short length of SessionID is guessable. To avoid a security issue, WebLogic Server will increase the length to {1}.
cause100097=The IDLength of Session Descriptor is smaller than {1}.
action100097=Mofify the Weblgoic deployment descriptor. Ensure that the IDLength of Session Descriptor is equal to or greater than {1}.
messagedetail100098=persistent-data-source-jndi-name or persistent-store-pool is required when persistent-store-type is jdbc.
cause100098=persistent-data-source-jndi-name or persistent-store-pool was not used to configure the database connection, but persistent-store-type is jdbc.
action100098=Use persistent-data-source-jndi-name or persistent-store-pool to configure the database connection.
messagedetail100099=An error occurred while looking up the session with ID:{0} from primary server:{1} and secondary server:{2}, and the session refresh failed.
cause100099=A RemoteException occurred when looking up the session from the secondary server.
action100099=Check if the secondary server is down. Note that it is not recommended to stop both the primary and secondary server at the same time. Because replication happens lazily, upon request, if the secondary server needs to end, give sufficient time so that the active end users hit their sessions and get replicated.
messagedetail100100=Replication services could not be found for remote object {1} in application context {0} during session cleanup.
cause100100=This error can occur during clustered application undeployment or redeployment, particularly when the server where it occurs is configured for managed server independent deployment (MSI-D). It is typically transient in those situations, and should only occur during redeployment in those scenarios.
action100100=If the error persists, check the server log files for more details. Contact Oracle support if necessary.

