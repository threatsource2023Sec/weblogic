version=1.0
L10nPackage=weblogic.ejb.container.compliance
I18nPackage=weblogic.ejb.container.compliance
subsystem=EJB Compliance

WARNING=WARNING: Warning from ejbc:
ERROR=ERROR: Error from ejbc:
LOG_WRITE_ERROR=Unable to log an error. The exception received was:\n{1}\nThe message being logged was:\n{0}
ERROR_MESSAGE=Fatal error detected. Cannot proceed. No output files were generated.
PUBLIC_EJBCREATE=In EJB {0}, the ejbCreate method(s) must be declared as public.
FINAL_EJBCREATE=In EJB {0}, the ejbCreate method(s) must not be declared as final.
STATIC_EJBCREATE=In EJB {0}, the ejbCreate method(s) must not be declared as static.
ENTITY_IMPLEMENT_SESSIONSYNCHRONIZATION=In EJB {0}, entity beans cannot implement javax.ejb.SessionSynchronization.
STATELESS_IMPLEMENT_SESSIONSYNCHRONIZATION=In EJB {0}, stateless session beans cannot implement javax.ejb.SessionSynchronization.
SINGLETON_METHOD_CANNOT_USE_SESSIONSYNCHRONIZATION_ANNOTATION=Singleton session bean method {0} in EJB {1}, cannot use session synchronization annotation.
WRONG_ACCESS_TIMEOUT_VALUE=Access timeout value of method {0} in EJB {1} shouldn't lower than -1.
WRONG_STATEFUL_TIMEOUT_VALUE=Stateful timeout value of EJB {0} shouldn't lower than -1.
STATEFUL_SESSION_BEAN_MUST_NOT_HAVE_LOCKING_METADATA=Method {0} in stateful session bean {1} has locking metadata, which is not permitted.
SINGLETON_IMPLEMENT_SESSIONSYNCHRONIZATION=In EJB {0}, singleton session beans cannot implement javax.ejb.SessionSynchronization.
BEAN_MANAGED_IMPLEMENT_SESSIONSYNCHRONIZATION=In EJB {0}, stateful session beans with bean-managed transactions cannot implement javax.ejb.SessionSynchronization.
PUBLIC_BEAN_CLASS=In EJB {0}, the bean class must be defined as public.
FINAL_BEAN_CLASS=In EJB {0}, the bean class must NOT be final.
PUBLIC_NOARG_BEAN_CTOR=In EJB {0}, the bean class must have a public constructor that takes no parameters.
NO_FINALIZE_IN_BEAN=In EJB {0}, the bean class must NOT define finalize().
NO_SYNCHRONIZED_METHODS=In EJB {0}, Enterprise Bean methods must not use thread synchronization primitives. The method named {1} is synchronized.
BEAN_MUST_NOT_THROW_REMOTE_EXCEPTION=In EJB {0}, the bean method {1} throws a subclass of java.rmi.RemoteException. RemoteExceptions are reserved for system exceptions.
BEAN_MUST_NOT_THROW_RUNTIME_EXCEPTION=In EJB {0}, the bean method {1} throws a subclass of java.lang.RuntimeException. RuntimeExceptions are reserved for system exceptions.
NOT_ALL_BEANS_USE_SAME_PERSISTENCE=In EJB {0}, all entity beans in the same JAR must use the same persistence type.
ABSTRACT_SCHEMA_NAME_NOT_UNIQUE=In EJB {0}, in ejb-jar.xml, the <abstract-schema-name> element must have a unique value among all 2.0 CMP beans in the JAR file.
ABSTRACT_BEAN_CLASS=In EJB {0}, the bean class must NOT be abstract.
ISMODIFIED_NOT_EXIST=In EJB {0}, the is-modified-method-name {1} either does not exist in your bean class, or its signature is incorrect. The method should be defined as public boolean {1}.
ISMODIFIED_RETURNS_BOOL=In EJB {0}, the is-modified-method-name {1} does not have a return type of boolean.
CMP_FIELDS_MUST_BE_BEAN_FIELDS=In EJB {0}, the bean class does not have a field named {1}, or this field is not public.
CMP_FIELDS_MUST_BE_PUBLIC=In EJB {0}, the container managed field {1} is declared as private. Container managed fields must be public.
CMP_FIELDS_MUST_NOT_BE_STATIC=In EJB {0}, the container managed field {1} is declared as static. Container managed fields must not be static.
PK_FIELD_MUST_EXIST=In EJB {0}, the primkey-field element "{1}" in ejb-jar.xml refers to a non-existent field in the bean. NOTE: if Primary Key class is provided, remove the primkey-field tag.
PK_FIELD_WRONG_TYPE=In EJB {0}, the value of primkey-field ({1}) in the ejb-jar.xml refers to a bean class field of type {2}; it should refer to a field of the primary key class type ({2}). NOTE: if Primary Key class is provided, remove the primkey-field tag.
CMP11_CANNOT_USE_OPTIMISTIC_CONCURRENCY=The EJB {0} is a version 1.x CMP bean. It cannot use Optimistic concurrency. Optimistic concurrency is a CMP2.0 feature.
CM_FIELD_MUST_START_WITH_LOWERCASE=In EJB {0}, all cmp/cmr fields must start with a lower case letter, field: ''{1}'' does not.
DEFINE_CMP_ACCESSOR_METHOD_20=In EJB {0}, Abstract get and set methods must be defined for each CMP field. method: ''{1}'' is missing.
SETTER_DOES_NOT_RETURN_VOID=In EJB {0}, setters for a cmp/cmr-fields must return void. At least one of them does not.
CMP_ACCESSOR_NOT_PUBLIC=In EJB {0}, method ''{1}'' must be declared with public access.
SETTER_DOES_NOT_HAVE_SINGLE_PARAM=In EJB {0}, setXXX method ''{1}'' does not take a single parameter.
SETTER_PARAM_DOES_NOT_MATCH_GETTER_RETURN=In EJB {0}, the parameter type of method ''{1}'' must match the return type of the corresponding getXXX method for this cmp field.
DO_NOT_DEFINE_CMFIELD_20=In EJB {0}, CMP fields must NOT be defined in the BeanClass.
EJB_SELECT_CANNOT_RETURN_ENUMERATION=In EJB {0}, ejbSelect methods cannot return java.util.Enumeration. Examine the ejbSelect method: {1}.
EJB_SELECT_MUST_THROW=In EJB {0}, ejbSelect methods must throw javax.ejb.FinderException. Examine the ejbSelect method: {1}.
MISSING_ENTITY_BEAN_METHOD=In EJB {0}, the bean class is missing the method: {1}. This is defined in the javax.ejb.EntityBean interface.
PRIMKEY_CLASS_DOES_NOT_MATCH_ACCESSOR_FOR_GETTER=In EJB {0}, in ejb-jar.xml, the <prim-key-class> is {2} and <primkey-field> is {1}. However, the corresponding getXXX() method in the bean class does not return {2}. These types must match.
PRIMKEY_CLASS_DOES_NOT_MATCH_ACCESSOR_FOR_SETTER=In EJB {0}, in ejb-jar.xml, the <prim-key-class> is {2} and <primkey-field> is {1}. However, the corresponding setXXX() method in the bean class does not have {2} as parameter. The parameter type should match with the pk class.
BEAN_PK_CLASS_DOES_NOT_MATCH_PKFIELD_FOR_GETTER=In EJB {0}, {1} is declared as {3} in the pk class, but the corresponding getXXX() method in the bean class returns {2}. These types must match.
BEAN_PK_CLASS_DOES_NOT_MATCH_PKFIELD_FOR_SETTER=In EJB {0}, {1} is declared as {3} in the pk class, but the corresponding setXXX() method in the bean class has {2} as set as the parameter. These types must match.
BMP_CANNOT_USE_OPTIMISTIC_CONCURRENCY=The EJB {0} is using bean managed persistence. It cannot use Optimistic concurrency. Optimistic concurrency is a CMP2.0 feature.
jarFileMissing=ERROR: EJB-JAR file: {0} does not exist.
checkingJarFile=EJB compliance checker checking.....{0}
jarFileIsDirectory=ERROR: EJB-JAR file: {0} is a directory.
usage=Usage: java weblogic.EJBComplianceChecker<ejb-jar-file>...
compliant={0} is compliant.
notValid=EJB Jar file: {0} is not valid {1}.
failedToParse=Failed to parse {0}. {1}
failedToLoad=Failed to load {0}. {1}
complianceError=EJB Compliance Error: {0}
loadFailure=Unable to load a class required by your EJB: {0}
addingErrorExtraHomeMethod=Adding error EXTRA_HOME_METHOD
entityHomeClassCheckerMessage=***<EntityHomeClassChecker>
EO_IMPLEMENTS_EJBOBJECT=In EJB {0}, the remote interface must extend the javax.ejb.EJBObject interface.
ELO_IMPLEMENTS_EJB_LOCAL_OBJECT=In EJB {0}, the local interface must extend the javax.ejb.EJBLocalObject interface.
EO_THROWS_REMOTE_EXCEPTION=In EJB {0}, method {1} defined in the remote interface must include java.rmi.RemoteException in its throws clause.
ELO_THROWS_REMOTE_EXCEPTION=In EJB {0}, method {1} defined in the local interface must not include java.rmi.RemoteException in its throws clause.
EO_RETURN_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the return type for method {1} in the remote interface does not match the return type in the bean class.
ELO_RETURN_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the return type for method {1} in the local interface does not match the return type in the bean class.
EO_METHOD_DOESNT_EXIST_IN_BEAN=In EJB {0}, method {1} defined in the remote interface either does not exist in the bean class, or it is not a public method. Each method in the remote interface must have a corresponding public method in the bean class.
ELO_METHOD_DOESNT_EXIST_IN_BEAN=In EJB {0}, method {1} defined in the local interface either does not exist in the bean class, or it is not a public method. Each method in the local interface must have a corresponding public method in the bean class.
EO_EXCEPTION_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the throws clause for method {1} in the bean class contains exceptions that are NOT in the throws clause of the remote interface.
ELO_EXCEPTION_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the throws clause for method {1} in the bean class contains exceptions that are NOT in the throws clause of the corresponding local interface method.
INVALID_APPLICATION_EXCEPTION=In EJB {0}, method {1} on component interface {2} throws an application exception, {3}, that is not a subclass (direct or indirect) of java.lang.Exception. The EJB specification requires application exceptions to be a subclass of java.lang.Exception.
INVALID_APPLICATION_EXCEPTION_ON_HOME=In EJB {0}, method {1} on home interface {2} throws an application exception, {3}, that is not a subclass (direct or indirect) of java.lang.Exception. The EJB specification requires application exceptions to be a subclass of java.lang.Exception.
CANNOT_EXPOSE_RELATIONSHIP_ACCESSOR_IN_REMOTE=IN EJB: ''{0}'' Remote Interface: ''{1}'' method: ''{2}''. A relationship getter or setter declared in the abstract Bean class of a CMP2.0 Entity Bean may not be exposed through the remote interface of the bean. See EJB2.0 Spec: 10.3.10.1
CREATES_MATCH_POSTCREATE=In EJB {0}, the ejbCreate method {1} has no matching ejbPostCreate method.
EXTRA_POSTCREATE=In EJB {0}, there is an ejbPostCreate method {1} that has no matching ejbCreate method.
MUST_IMPLEMENT_ENTITYBEAN=In EJB {0}, the bean class must implement directly or indirectly the javax.ejb.EntityBean interface.
EJBCREATE_RETURNS_PK=In EJB {0}, the ejbCreate method: {1} must return the primary key type.
EJBPOSTCREATE_MUST_BE_PUBLIC=In EJB {0}, the ejbPostCreate method {1} must be public.
EJBPOSTCREATE_MUST_NOT_BE_FINAL=In EJB {0}, the ejbPostCreate method {1} must not be final.
EJBPOSTCREATE_MUST_NOT_BE_STATIC=In EJB {0}, the ejbPostCreate method {1} must not be static.
EJBPOSTCREATE_MUST_RETURN_VOID=In EJB {0}, the return type for the ejbPostCreate method {1} must be void.
FINDER_IN_CMP_BEAN=In EJB {0}, the finder method {1} was defined in a container-managed persistence entity bean. Finders may not be defined in the bean class for container-managed persistence entity beans.
BEAN_MISSING_PERSISTENCE_USE=In EJB {0}, the persistence-use element was not specified or could not be associated with a corresponding persistence-type element for a CMP entity bean in the weblogic-ejb-jar.xml descriptor file.
CMP_FIELD_CLASS_NOT_SUPPORTED_IN_CMP11=In EJB {0}, cmp-field: {1} is declared to be of Class: {2}, which is not supported in WebLogic EJB CMP 1.1
PRIMKEY_FIELD_MUST_BE_CMP_FIELD=In EJB {0}, the primkey-field element specified in the ejb-jar.xml must refer to the field-name of one of the declared cmp-fields.
PK_FIELDS_MUST_BE_CMP_FIELDS=In EJB {0}, the primary key field named {1} is not a CMP managed field.
CACHE_BETWEEN_TRANS_MUST_BE_FALSE_FOR_CONCURRENCY_DB=In EJB {0}, cache-between-transactions (formerly db-is-shared) must be disabled, because the concurrency-strategy is database.
HOME_MUST_HAVE_FIND_PK=In EJB {0}, the home interface must define the findByPrimaryKey method.
LOCAL_HOME_MUST_HAVE_FIND_PK=In EJB {0}, the local home interface must define the findByPrimaryKey method.
FIND_BY_PK_RETURNS_REMOTE_INTF=In EJB {0}, the home interface findByPrimaryKey method must return the remote interface type of the entity bean.
FIND_BY_PK_RETURNS_LOCAL_INTF=In EJB {0}, the local home interface findByPrimaryKey method must return the local interface type of the entity bean.
HOME_FIND_PK_CORRECT_PARAMETERS=In EJB {0}, the home interface findByPrimaryKey method parameter must be the primary key type or java.lang.Object: {1}
LOCAL_HOME_FIND_PK_CORRECT_PARAMETERS=In EJB {0}, the local home interface findByPrimaryKey method parameter must be the primary key type or java.lang.Object: {1}
FINDER_MUST_THROW_FE=In EJB {0}, the throws clause of the home finder method {1} must include the javax.ejb.FinderException.
LOCAL_FINDER_MUST_THROW_FE=In EJB {0}, the throws clause of the local home finder method {1} must include the javax.ejb.FinderException.
FINDER_RETURNS_BAD_TYPE=In EJB {0}, the return type for the home finder method {1} must be (for a single-object finder) the remote interface type of the entity bean, or (for a multi-object finder) java.util.Enumeration or java.util.Collection. NOTE: EJB2.0 CMP finders may not return a java.util.Enumeration Class.
LOCAL_FINDER_RETURNS_BAD_TYPE=In EJB {0}, the return type for the local home finder method {1} must be (for a single-object finder) the local interface type of the entity bean, or (for a moult-object finder) java.util.Enumeration or java.util.Collection. NOTE: EJB2.0 CMP finders may not return a java.util.Enumeration Class.
SCALAR_FINDER_DOESNT_RETURN_REMOTE_INTF=In EJB {0}, the scalar finder {1} returns the primary key class in the bean class, but does NOT return the remote interface in the home interface.
SCALAR_FINDER_DOESNT_RETURN_LOCAL_INTF=In EJB {0}, the local scalar finder {1} returns the primary key class in the bean class, but does NOT return the local interface in the home interface.
ENUM_FINDER_DOESNT_RETURN_REMOTE_INTF=In EJB {0}, the finder {1} returns java.util.Enumeration in the bean class, but does NOT return java.util.Enumeration in the home interface.
COLL_FINDER_DOESNT_RETURN_COLL=In EJB {0}, the finder {1} returns java.util.Collection in the bean class, but does NOT return java.util.Collection in the home interface.
LOCAL_COLL_FINDER_DOESNT_RETURN_COLL=In EJB {0}, the finder {1} returns java.util.Collection in the bean class, but does NOT return java.util.Collection in the local home interface.
UNEXPECTED_FINDER_RETURN_TYPE=In EJB {0}, the finder {1} returned an unexpected type. Finders in the bean class must return the primary key type, java.util.Collection, or java.util.Enumeration
FIND_METHOD_DOESNT_EXIST_IN_BEAN=In EJB {0}, the find method {1} did not have a corresponding ejbFind method in the bean class.
FIND_EXCEPTION_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the throws clause for ejbFind method {1} contains exceptions that are NOT in the throws clause of the home interface.
LOCAL_FIND_EXCEPTION_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the throws clause for ejbFind method {1} contains exceptions that are NOT in the throws clause of the local home interface.
POST_CREATE_METHOD_DOESNT_EXIST_IN_BEAN=In EJB {0}, the create method {1} did not have a corresponding ejbPostCreate method in the bean class.
POST_CREATE_EXCEPTION_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the throws clause for ejbPostCreate method {1} contains exceptions that are NOT in the throws clause of the home interface.
EXTRA_HOME_METHOD_20=In EJB {0}, the home method {1} was defined in the home interface, but a matching {2} method was not found on the bean class.
EXTRA_LOCAL_HOME_METHOD_20=In EJB {0}, the home method {1} was defined in the local home interface, but a matching {2} method was not found on the bean class.
HOME_METHOD_NAME_IN_BEAN_CLASS_LOWER_CASE_20=In the bean class {0}, a Home method with the name {1} was found. The first letter after ''ejbHome'' must be a capital letter as in {2}. A lower case letter was found instead.
HOME_METHOD_NAME_IN_BEAN_CLASS_INCOMPLETE_20=In the bean class {0}, ''ejbHome'' is not a valid home method name. There must an additional name appended to the end of ''ejbHome''.
DUPLICATE_CMR_FIELD=In relation to {0}, a cmr-field for a CMP entity bean or dependent object is being used in multiple relationships. A particular cmr-field may only be used by a single relationship.
HOME_EXTENDS_EJBHOME=In EJB {0}, the home interface {1} must extend the javax.ejb.EJBHome interface.
LOCAL_HOME_EXTENDS_EJBLOCALHOME=In EJB {0}, the local home interface {1} must extend the javax.ejb.EJBLocalHome interface.
NOT_RMIIIOP_LEGAL_TYPE_20=In EJB {0}, a non-transient field in the bean {0} is not a legal RMI-IIOP type.
HOME_METHOD_NOT_THROW_REMOTE_EXCEPTION=In EJB {0}, method {1} on the home interface does not throw java.rmi.RemoteException. This is a required exception.
LOCAL_HOME_METHOD_THROW_REMOTE_EXCEPTION=In EJB {0}, method {1} on the local home interface throws java.rmi.RemoteException. Methods on the local home interface must not throw java.rmi.RemoteException.
CREATE_METHOD_RETURNS_COMPONENT_INTERFACE=In EJB {0}, the return type for the home create method {1} must be the remote interface type of the bean.
CREATE_METHOD_RETURNS_LOCAL_COMPONENT_INTERFACE=In EJB {0}, the return type for the local home create method {1} must be the local interface type of the bean.
CREATE_METHOD_THROWS_CREATE_EXCEPTION=In EJB {0}, the throws clause for the home create method {1} must include javax.ejb.CreateException.
LOCAL_CREATE_METHOD_THROWS_CREATE_EXCEPTION=In EJB {0}, the throws clause for the local home create method {1} must include javax.ejb.CreateException.
CREATE_METHOD_DOESNT_EXIST_IN_BEAN=In EJB {0}, the home create method {1} did not have a corresponding ejbCreate method in the bean class, or the ejbCreate method in the bean class was not public.
LOCAL_CREATE_METHOD_DOESNT_EXIST_IN_BEAN=In EJB {0}, the local home create method {1} did not have a corresponding ejbCreate method in the bean class, or the ejbCreate method in the bean class was not public.
CREATE_EXCEPTION_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the throws clause for ejbCreate method {1} contains exceptions that are NOT in the throws clause of the corresponding home interface method.
LOCAL_CREATE_EXCEPTION_TYPE_DOESNT_MATCH_BEAN=In EJB {0}, the throws clause for ejbCreate method {1} contains exceptions that are NOT in the throws clause of the corresponding local home interface method.
BEAN_CLASS_IMPLEMENTS_MESSAGE_DRIVEN=In EJB {0}, the message-driven bean class must implement the javax.ejb.MessageDrivenBean interface.
BEAN_CLASS_IMPLEMENTS_MESSAGE_LISTENER=In EJB {0}, the bean class must implement {1}.
PUBLIC_ONMESSAGE=In EJB {0}, the onMessage method must be declared public.
FINAL_ONMESSAGE=In EJB {0}, the onMessage method must NOT be declared final.
STATIC_ONMESSAGE=In EJB {0}, the onMessage method must NOT be declared static.
SINGLE_ONMESSAGE_REQUIRED=In EJB {0}, there must be a single onMessage method defined in a message-driven bean class.
ONMESSAGE_TAKES_MESSAGE=In EJB {0}, the onMessage method must have a single parameter of type javax.jms.Message.
ONMESSAGE_RETURNS_VOID=In EJB {0}, the onMessage method must return void.
ONMESSAGE_THROWS_APP_EXCEPTION=In EJB {0}, the onMessage method must NOT define any application exceptions.
BEAN_MUST_HAVE_ONMESSAGE=In EJB {0}, a Message-driven bean class must define an onMessage method.
MT_METHOD_DOESNT_EXIST_IN_BEAN=In EJB {0}, method {1} defined in the messaging type interface either does not exist in the bean class, or it is not a public method. Each method in the messaging type interface must have a corresponding public method in the bean class.
EJBCREATE_RETURNS_VOID=In EJB {0}, the ejbCreate method(s) must return void.
MESSAGE_NOARG_EJBCREATE=In EJB {0}, the ejbCreate method of a Message-driven bean must take no parameters.
MESSAGE_EJBCREATE_THROWS_APP_EXCEPTION=In EJB {0}, the ejbCreate method of a Message-driven bean can NOT throw an application exception.
MESSAGE_DEFINES_EJBCREATE=In EJB {0}, a Message-driven EJB must define an ejbCreate method that takes no parameters.
PUBLIC_EJBREMOVE=In EJB {0}, the ejbRemove method of a Message-driven bean must be public.
FINAL_EJBREMOVE=In EJB {0}, the ejbRemove method of a Message-driven bean must NOT be final.
STATIC_EJBREMOVE=In EJB {0}, the ejbRemove method of a Message-driven bean must NOT be static.
EJBREMOVE_RETURNS_VOID=In EJB {0}, the ejbRemove method of a Message-driven bean must return void.
MESSAGE_NOARG_EJBREMOVE=In EJB {0}, the ejbRemove method of a Message-driven bean must take no parameters.
MESSAGE_EJBREMOVE_THROWS_APP_EXCEPTION=In EJB {0}, the ejbRemove method of a Message-driven bean may not throw an application exception.
MESSAGE_DEFINES_EJBREMOVE=In EJB {0}, a Message-driven EJB must define an ejbRemove method that takes no parameters.
MESSAGE_BAD_TX_ATTRIBUTE=In EJB {0}, Illegal transaction attribute for the onMessage() method: only Required or NotSupported can be used.
PK_MUST_IMPLEMENT_HASHCODE=In EJB {0}, the primary key class must implement the method public int hashCode().
PK_MUST_IMPLEMENT_EQUALS=In EJB {0}, the primary key class must implement the method boolean equals(Object other).
CMP_PK_MUST_IMPLEMENT_SERIALIZABLE=In EJB {0}, the primary key class or its base class must implements java.io.Serializable.
CMP_PK_CANNOT_BE_JAVA_LANG_OBJECT=In EJB {0}, an ''Unknown Primary Key Class'' ( <prim-key-class> == java.lang.Object ) MUST be specified at deployment time (as something other than java.lang.Object).
CMP_PK_MUST_BE_PUBLIC=In EJB {0}, the primary key class {1} must be declared public.
CMP_PK_MUST_HAVE_NOARG_CONSTRUCTOR=In EJB {0}, the primary key class {1} must have a default, public no-argument constructor.
PK_FIELDS_MUST_BE_PUBLIC=In EJB {0}, the primary key class {1} has a field named {2} that is not public. All fields in the primary key class must be public.
PK_FIELDS_MUST_NOT_BE_STATIC=In EJB {0}, the primary key class {1} has a field named {2} that is static. No field in the primary key class may be static.
N1_RELATION_HAS_DUP_FIELD_FOR_SAME_BEAN=In relation {0}, in a one-to-many relationship on the same Bean, the <cmr-field> for each role must be distinct.
BOTH_ROLES_REMOTE=In relation {0}, both of the entity beans in a relationship cannot be remote.
NON_EXISTENT_BEAN_IN_ROLE=In relation {1}, relationship-role-source contains an invalid ejb-name element ''{0}''. No bean could be found with that name.
NON_ENTITY_BEAN_IN_ROLE=In relation {0}, relationship-role-source contains an invalid ejb-name element. The bean is not an entity bean.
BM_BEAN_IN_ROLE=In relation {0}, relationship-role-source contains an invalid ejb-name element. The bean is using bean managed persistence, but it must use EJB 2.0 container managed persistence.
CMP11_BEAN_IN_ROLE=In relation {0}, relationship-role-source contains an invalid ejb-name element. The bean is using EJB 1.1 container managed persistence, but it must use EJB 2.0 container managed persistence.
FIELD_NOT_DEFINED_FOR_ROLE=In relation {0}, at least one cmr-field must be defined for the relationship.
COLLECTION_FIELD_HAS_NO_TYPE=In relation {0}, a collection valued cmr-field does not declare a cmr-field-type. The type must be either java.util.Collection or java.util.Set.
SINGLETON_FIELD_HAS_TYPE=In relation {0}, a cmr-field element contains a cmr-field-type element when it should not. The related role has a multiplicity of ''one'' which prevents the cmr-field from having a collection-valued type.u
GET_METHOD_NOT_DEFINED_FOR_ROLE=In relation {2}, bean: {0} method: {1} for a cmr-field is not defined on the bean class, or the parameter types are incorrect.
GET_METHOD_HAS_WRONG_RETURN_TYPE=In bean {0}, the cmr getXXX method, {1}, defined for relationship, {2}, has the wrong return type. The return type must be the local interface type of the related bean if the related bean has a local interface.
GET_METHOD_IS_NOT_ABSTRACT=In relation {2}, bean: {0} method: {1} defined on a bean that participates in this relationship is not an abstract method. It must be declared abstract.
GET_METHOD_IS_NOT_PUBLIC=In relation {2}, bean: {0} method: {1} defined on a bean that participates in this relationship is not public. It must be declared with public access.
SET_METHOD_NOT_DEFINED_FOR_ROLE=In bean {0}, the cmr setXXX method, {1}, defined for relationship, {2}, is not defined on the bean class, or the parameter type is incorrect. The parameter type must be the local interface type of the related bean if the related bean has a local interface.
SET_METHOD_HAS_WRONG_RETURN_TYPE=In relation {2}, bean: {0} method: {1} defined on a bean that participates in this relationship has an incorrect return type.
SET_METHOD_IS_NOT_ABSTRACT=In relation {2}, bean: {0} method: {1} defined on a bean that participates in this relationship is not an abstract method. It must be declared abstract.
SET_METHOD_IS_NOT_PUBLIC=In relation {2}, bean: {0} method: {1} defined on a bean that participates in this relationship is not public. It must be declared with public access.
CMR_FIELD_SAME_AS_CMP_FIELD=In relation {0}, a cmr-field and a cmp-field on the bean are using the same name. The names of cmr and cmp fields must be unique.
CASCADE_DELETE_CANNOT_BE_SPECIFIED={0}: <cascade-delete> in ejb-jar.xml can only be specified for an <ejb-relationship-role> contained in an <ejb-relationship> if the other <ejb-relationship-role> in the <ejb-relationship> specifies a <multiplicity> of One.
EJBCONTEXT_IS_TRANSIENT=In EJB {0}, references to javax.ejb.EJBContext, javax.ejb.SessionContext, or javax.ejb.EntityContext must not be transient.
BEAN_IMPLEMENT_SESSIONBEAN=In EJB {0}, the bean class must implement directly or indirectly the javax.ejb.SessionBean interface.
STATELESS_NOARG_EJBCREATE=In EJB {0}, the stateless session bean class must define a single ejbCreate method that takes no parameters.
STATEFUL_DEFINE_EJBCREATE=In EJB {0}, the stateful session bean class must define one or more ejbCreate(...) methods.
STATEFUL_HOME_CREATE=In EJB {0}, the home interface of a stateful session bean must define one or more create(...) methods.
STATEFUL_LOCAL_HOME_CREATE=In EJB {0}, the local home interface of a stateful session bean must define one or more create(...) methods.
STATELESS_HOME_NOARG_CREATE=In EJB {0}, the home interface of a stateless session bean must have one create method that takes no arguments.
STATELESS_LOCAL_HOME_NOARG_CREATE=In EJB {0}, the home interface of a stateless session bean must have one create method that takes no arguments.
HOME_METHODS_NOT_ALLOWED_ON_SESSION_20=Home methods are not allowed on session beans: {0}.{1}
NO_MATCHING_BEAN={0}: Each bean <entity> in ejb-jar.xml must have a corresponding bean <weblogic-rdbms-bean> in weblogic-cmp-rdbms-jar.xml.
OVERLOADED_ABSTRACT_METHOD={0}: {1}: Abstract getXXX and setXXX methods for container managed fields may not be overloaded.
EXTRA_ABSTRACT_METHOD=In bean {0}, the abstract method, {1}, does not correspond to any container-managed field and is not implemented in the bean class or any of its superclasses.
NO_MATCHING_FIELD_MAP={0}: {1}: Each <cmp-field> in ejb-jar.xml must have a corresponding <field-map> in weblogic-cmp-rdbms-jar.xml.
FIELDCLASSTYPE_MUST_BE_STRING_FOR_ORACLECLOB_COLUMNTYPE={0}: {1} is declared as {2} in the bean class but defined as OracleClob in weblogic-cmp-rdbms-jar.xml. This is a type mismatch. OracleClob only maps to java.lang.String. Either change {2} to java.lang.String, or change OracleClob to OracleBlob.
NO_MATCHING_CMP_FIELD={0}: {1}: There is no matching <cmp-field> in ejb-jar.xml for a field-map element in the RDBMS CMP descriptor.
GROUP_CONTAINS_UNDEFINED_CMP_FIELD=In RDBMS CMP bean ''{0}'', a field-group element contains a cmp-field that is not defined on the bean. The ''{1}'' group contains invalid field ''{2}''.
GROUP_CONTAINS_UNDEFINED_CMR_FIELD=In RDBMS CMP bean ''{0}'', a field-group element contains a cmr-field that is not defined for the bean. The ''{1}'' group contains invalid field ''{2}''.
RELATIONSHIP_CACHING_CANNOT_BE_SPECIFIED=In the RDBMS CMP bean ''{0}'', a <relationship-caching> element ''{1}'' is specified. Beans ''{0}'' and ''{2}'' have a many-to-many relationship. <relationship-caching> cannot be specified between beans have a many-to-many relationship.
RELATIONSHIP_CACHING_CONTAINS_UNDEFINED_CMR_FIELD=In the RDBMS CMP bean ''{0}'', a <relationship-caching> element ''{1}'' contains a cmr-field ''{2}'', which is not defined in the bean ''{0}''.
RELATIONSHIP_CACHING_CONTAINS_UNDEFINED_GROUP_NAME=In RDBMS CMP bean ''{0}'', a <relationship-caching> element ''{1}'' contains a group-name ''{3}'', which is not defined in the bean ''{2}''.
RELATIONSHIP_CACHING_INCONSISTENT_CONCURRENCY_STRATEGY=In the RDBMS CMP bean ''{0}'', a <relationship-caching> element ''{1}'' is specified. Beans must have a compatible <concurrency-strategy>. Bean ''{0}'' has Optimistic as its <concurrency-strategy>, ''{2}'' must have either Optimistic or ReadOnly as its <concurrency-strategy>.
RELATIONSHIP_CACHING_REQUIRE_DATABASETYPE=In the RDBMS CMP bean ''{0}'', a relationship-caching element is specified. The <database-type > tag is required if relationship caching is enabled.
DelayDatabaseInsertUntilConflictEnableBatchOperations=In the RDBMS CMP bean ''{0}'', the <delay-updates-until-end-of-tx> tag is set to ''false''. This conflicts with the default setting ''true'' for tag <enable-batch-operations> and tag <order-database-operations>. Either set <delay-updates-until-end-of-tx> to ''true'', or set the other two tags to ''false''.
GROUP_CONTAINS_PK_SUBSET=In the RDBMS CMP bean ''{0}'', the ''{1}'' group contains a subset of the primary key fields for the bean. A group must contain either none or all of the primary key fields.
QUERY_CONTAINS_UNDEFINED_GROUP=In the RDBMS CMP bean ''{0}'', a weblogic-query element specifies a group-name that is not defined on the bean. The invalid group-name is ''{1}''.
QUERY_CONTAINS_UNDEFINED_CACHING_NAME=In the RDBMS CMP bean ''{0}'', a weblogic-query element specifies a caching-name that is not defined on the bean. The invalid caching-name is ''{1}''. You should define a <relationship-caching> element in weblogic-cmp-rdbms-jar.xml that contains <caching-name>{1}</caching-name>.
GENKEY_PK_IS_INTEGER=In the RDBMS CMP bean ''{0}'', when Automatic Key Generation is enabled, the Primary Key class must be java.lang.Integer.
GENKEY_PK_SEQUENCE_WITH_UNSUPPORTED_DB=Not all databases support the automatic primary key generator type ''Sequence''. The RDBMS CMP bean, ''{0}'', specifies the generator type ''Sequence'', but this generator type is not supported with the database type {1}.
GENKEY_PK_IDENTITY_WITH_UNSUPPORTED_DB=Not all databases support the automatic primary key generator type ''Identity''. The RDBMS CMP bean, ''{0}'', specifies the generator type ''Identity'', but this generator type is not supported with the database type {1}.
GENKEY_PK_IS_INTEGER_OR_LONG=In the RDBMS CMP bean ''{0}'', when Automatic Key Generation is enabled, the Primary Key class must be java.lang.Integer or java.lang.Long.
AUTO_PK_KEY_CACHE_SIZE_NOT_SPECIFIED=In the RDBMS CMP bean ''{0}'', a Sequence or SequenceTable is being used to generate primary key values for the bean, but a positive integer value has not been specified for the key-cache-size element in the CMP deployment descriptor.
VERSION_FIELD_WRONG_TYPE=In the RDBMS CMP bean ''{0}'', cmp-field ''{1}'' is mapped to version column ''{3}'' of table ''{2}'', so its type must be java.lang.Long. Instead the type is ''{4}''.
TIMESTAMP_FIELD_WRONG_TYPE=In the RDBMS CMP bean ''{0}'', cmp-field ''{1}'' is mapped to timestamp column ''{3}'' of table ''{2}'', so its type must be java.sql.Timestamp. Instead the type is ''{4}''.
MISSING_VERIFY_COLUMNS=In the RDBMS CMP bean ''{0}'', the table-map element for table ''{1}'' does not specify a verify-columns element. An RDBMS CMP bean that uses the ''Optimistic'' concurrency strategy must specify a verify-columns value for each DBMS table to which it is mapped.
ILLEGAL_VERIFY_COLUMNS=In the CMP bean ''{0}'', the table-map element for table ''{1}'' does not specify a valid verify-columns element. An RDBMS CMP bean that uses the ''Optimistic'' concurrency strategy must specify a verify-columns value of ''read'', ''modified'', ''version'', or ''timestamp'' for each table, but ''{2}'' was specified instead.
MISSING_OPTIMISTIC_COLUMN=In the RDBMS CMP bean ''{0}'', the table-map element for table ''{1}'' does not declare an optimistic-column. An optimistic-column must be declared for each table that is mapped to the bean when the verify-fields element has a value of ''{2}''.
ILLEGAL_VERIFY_ROWS=In the CMP bean ''{0}'', the table-map element for table ''{1}'' does not specify a valid verify-rows element. An RDBMS CMP bean that uses the ''Optimistic'' concurrency strategy may specify a verify-rows value of ''read'' or ''modified'' for each table, but ''{2}'' was specified instead.
ILLEGAL_VERIFY_READ_MODIFIED=In the CMP bean ''{0}'', the verify-rows element for table ''{1}'' has a value of ''read'' and the verify-columns element has a value of ''modified''. This combination of values is not allowed since it would not provide any optimistic checking of rows that are read, but not modified (updated or deleted) during a transaction. If you only want the EJB container to check modified rows, specify a value of ''modified'' for verify-rows instead.
NoSqlSelectDistinctWithBlobClobField=In the RDBMS CMP bean ''{0}'', a weblogic-query ''{1}'' has sql-select-distinct enabled and a field-group containing a Blob/Clob column. This will result in a SQLException at runtime. Disable sql-select-distinct, or choose a field-group that does not contain an Blob/Clob column.
BLOB_CLOB_WITH_UNKNOWN_DB=The RDBMS deployment descriptor for the CMP bean ''{0}'', contains a cmp field mapping with a dbms-column-type of Blob or Clob. However, no database-type was specified in the deployment descriptor. If an EJB uses a Blob/Clob, the CMP descriptor for the EJB must contain a database-type tag indicating what type of database is being used.
BLOB_CLOB_WITH_UNSUPPORTED_DB=The RDBMS deployment descriptor for the CMP bean ''{0}'', contains a cmp field mapping with a dbms-column-type of Blob or Clob. However, Blobs/Clobs are not supported with the database-type ''{1}''.
DEPENDENT_OBJECTS_NOT_SUPPORTED=Dependent object classes are not supported in this release of WebLogic RDBMS CMP. Instead, use a dependent value class or entity bean.
NO_MATCHING_CMP_BEAN={0}: Each <weblogic-rdbms-bean> element in an RDBMS CMP descriptor file must have a corresponding <entity> element in ejb-jar.xml .
NO_MATCHING_EJB_RELATION={0}: Each <weblogic-rdbms-relation> in weblogic-cmp-rdbms-jar.xml must have a corresponding <ejb-relation> in ejb-jar.xml.
NO_MATCHING_EJB_RELATION_IN_EJB_DD=The <weblogic-rdbms-relation> ''{0}'' in weblogic-cmp-rdbms-jar.xml must have a corresponding <ejb-relation> in ejb-jar.xml. The ejb-jar.xml file is missing an <ejb-relation> element for this relation ''{0}''.
MISSING_RELATION_FOR_BEAN=Bean ''{0}'' listed in the RDBMS CMP deployment descriptor participates in relationship ''{1}'', but there is no entry for the relationship in the RDBMS CMP deployment descriptor. Related beans and the relationships between them must be described in the same RDBMS CMP descriptor file.
MISSING_BEAN_FOR_BEAN={0}: {1}: a bean listed in the RDBMS CMP deployment descriptor is related to another bean that has no entry in the descriptor file. All related beans and the relationships between them must be described in the same RDBMS CMP descriptor file.
NO_MATCHING_WL_RELATIONSHIP_ROLE=In relationship {0}, the <ejb-relationship-role>, {1}, defined in ejb-jar.xml must have a corresponding <weblogic-relationship-role> in the RDBMS CMP deployment descriptor file with the same name.
MANY_SIDE_OF_M_1_MUST_HAVE_FOREIGN_KEY_MAP={0}: In a many-to-one relationship, the Many Role in weblogic-cmp-rdbms-jar.xml must contain a <column-map> for the <foreign-key-column>.
ONE_SIDE_OF_M_1_MUST_NOT_HAVE_FOREIGN_KEY_MAP={0}: In a one-to-many relationship, the One Role in weblogic-cmp-rdbms-jar.xml must not contain a <column-map> element.
ROLE_MAY_NOT_REFER_TO_DEPENDT_OBJ=In relation ''{0}'', a role may not refer to a dependent object. Dependent objects are not supported in this release of WebLogic RDBMS CMP.
NO_MATCHING_WL_RELATION={0}: Each <ejb-relation> in ejb-jar.xml must have a corresponding <weblogic-rdbms-relation> in weblogic-cmp-rdbms-jar.xml .
NO_MATCHING_EJB_RELATIONSHIP_ROLE=There is an entry for relationship role ''{1}'' of relationship ''{0}'' in the RDBMS CMP descriptor file, but there is no matching entry for the role in the ejb-jar.xml descriptor. Each <weblogic-relationship-role> element must have a corresponding <ejb-relationship-role> element in the ejb-jar.xml descriptor.
MANY_TO_MANY_RELATIONSHIP_MUST_HAVE_BOTH_WL_ROLES={0}: In a many-to-many relationship, both Roles are required in weblogic-cmp-rdbms-jar.xml.
MANY_TO_MANY_RELATIONSHIP_MISSING_TABLE_NAME={0}: In a many-to-many relationship, a JOIN table name must be specified in the <table-name> element of weblogic-cmp-rdbms-jar.xml.
RELATIONSHIP_ROLE_HAS_INVALID_GROUP=In relationship ''{0}'', a weblogic-relationship-role element contains a group name that is not defined. The group must be defined on the bean that is associated with the role. The undefined group name is ''{1}''.
ROLE_HAS_WRONG_NUMBER_OF_COLUMNS_IN_MAP=In relationship ''{0}'', role ''{1}'', a weblogic-relationship-role element contains the wrong number of column mappings. A single column mapping must be given for each primary key column in the bean referenced by the mapping.
ONE_ONE_MISSING_COLUMN_MAP=In relationship ''{0}'', neither weblogic-relationship-role element contains a column-map in the CMP deployment descriptor. At least one of the weblogic-relationship-role elements must specify a foreign key to primary key mapping that is used by the one-to-one relationship.
MANY_MANY_MISSING_COLUMN_MAP=In relationship ''{0}'', a weblogic-relationship-role element is missing a column-map in the CMP deployment descriptor. Both of the weblogic-relationship-role elements must specify a foreign key to primary key mapping that is used by the Many-Many relationship.
ROLE_HAS_INVALID_KEY_COLUMN_IN_MAP=In relationship ''{0}'', role ''{1}'', invalid column ''{2}'', a column-map element contains an invalid key-column. The key-column is not defined in the related bean or it is not recognized due to case mismatch.
ROLE_HAS_INVALID_KEY_COLUMN_IN_MAP2=Role ''{1}'' of relationship ''{0}'' contains an invalid key-column value of ''{2}''. The key-column must specify a primary key column in the related bean. However, there is no primary key column named ''{2}'' defined in the related bean ''{3}'' or else ''{2}'' is not being recognized due to case mismatch.
FKCOLUMNS_MIX_OF_PK_NONPK_COLUMNS=In relationship ''{0}'', role ''{1}'', the foreign key columns used to implement a cmr-field may not be a mix of primary key columns and non-primary key columns.
INVALID_FOREIGN_KEY_FIELD_CLASS=The CMP field ''{1}'' in EJB ''{0}'' does not have a type that is assignment compatible with the primary key field ''{3}'' in EJB ''{2}''. Field ''{1}'' is mapped to a foreign-key column that references the primary-key field ''{3}'' in EJB ''{2}'', so the types must be compatible.
CASCADE_DELETE_MUST_SPECIFIED_IF_DB_CASCADE_DELETE_SPECIFIED={0}: <cascade-delete> must be specified in ejb-jar.xml because <db-cascade-delete> is specified in RDBMS CMP deployment descriptor.
CASCADE_DELETE_MUST_HAVE_FOREIGN_KEY_MAP={0}: When <db-cascade-delete> is specified, it must have a corresponding foreign key in the RDBMS CMP deployment descriptor.
ENTITYBEANINFOIMPL_INIT=Unable to load Primary Key class: ''{0}''. Possible causes: 1: The Primary Key class is a Java Language Primitive; this is not allowed. 2: If the Primary Key is a Compound Key, the Compound Primary Key class is not in the JAR file being compiled. 3: The classpath is incorrect.
EO_METHOD_SIGNATURE_DOES_NOT_MATCH_BEAN=In EJB {0}, method {1} defined in the remote interface does not match with the signature of the method in the bean class.
ELO_METHOD_SIGNATURE_DOES_NOT_MATCH_BEAN=In EJB {0}, method {1} defined in the local interface does not match with the signature of the method in the bean class.
DUPLICATE_MAPPING_FOR_DBMS_COLUMN=A duplicate mapping for dbms-column ''{2}'' was found in the RDBMS CMP deployment descriptor ''{0}'' while reading information for ''{1}''.
DUPLICATE_MAPPING_FOR_CMP_FIELD=A duplicate mapping for cmp-field ''{2}'' was found in the RDBMS CMP deployment descriptor ''{0}'' while reading information for ''{1}''.
ILLEGAL_VALUE_FOR_CHECK_EXISTS=An illegal value ''{2}'' for element ''check-exists-on-method'' was found in the RDBMS CMP deployment descriptor ''{0}'' while reading information for EJB ''{1}''.
EMPTY_CLIENT_JAR_TAG=The ejb-jar.xml deployment descriptor includes an empty <ejb-client-jar></ejb-client-jar> tag. You must specify a file name within this tag to create an ejb client-jar.
PRIMARY_KEY_WITHOUT_PRIMKEY_FIELD=Ejb: {1} has a primary key class as: {0}, but no <primkey-field> has been set. You must either specify a <primkey-field> to indicate the primary key field, or create a compound primary key class where each field maps to a primary key field in the entity bean.
CANNOT_FIND_WL_DESCRIPTOR_FOR_EJB=Could not locate the bean with ejb-name ''{0}'' in weblogic-ejb-jar.xml.
CANNOT_FIND_CMP_DESCRIPTOR_FOR_EJB=Could not locate the bean with ejb-name ''{0}'' in weblogic-cmp-rdbms-jar.xml
MESSAGE_ILLEGAL_MAX_BEANS_IN_FREE_POOL=An illegal value for max-beans-in-free-pool was found in EJB ''{0}'' ({1}). The value must be > 0.
BEAN_MISSING_LREF_JNDI_NAME=In EJB {0}, the ejb-local-ref element in deployment descriptor or annotation, {1}, must be given a JNDI name in the weblogic-ejb-jar.xml descriptor file or corresponding annotation. An ejb-local-reference-description element or corresponding annotation with matching ''ejb-ref-name'' was not found.
BEAN_MISSING_REF_JNDI_NAME=In EJB {0}, the ejb-ref element in deployment descriptor or annotation, {1}, must be given a JNDI name in the weblogic-ejb-jar.xml descriptor file or corresponding annotation. An ejb-reference-description element or corresponding annotation with a matching ''ejb-ref-name'' was not found.
INCONSISTENT_REMOTE_VIEW=In EJB {0}, both the remote home and remote component interface must be specified. Currently, only one of them is specified.
INCONSISTENT_LOCAL_VIEW=In EJB {0}, both the local home and local component interface must be specified. Currently, only one of them is specified.
NULL_SECURITY_ROLE_REF_LINK=In ejb-jar.xml or annotation, the EJB {0} contains a security-role-ref {1} that does not have a role-link specified. This must be resolved before the EJB can be deployed.
INVALID_SECURITY_ROLE_REF_LINK=In ejb-jar.xml or annotation, the EJB {0} contains a security-role-ref {1} that has an invalid role-link. The role-link element must be the name of one of the security roles defined in the security-role elements.
ROLE_NOT_MAPPED_TO_PRINCIPALS=The security-role {0}, defined in ejb-jar.xml or corresponding annotation, is not correctly mapped to a security principal. Make sure the security-role has a corresponding security-role-assignment element in the weblogic-ejb-jar.xml descriptor or corresponding annotation.
NO_CLIENT_VIEW=In EJB {0}, no home or component interface is specified. A session or entity bean must provide a local or remote home and component interface.
MISSING_QUERY_IN_EJBJAR=In EJB {0}, The remote home interface, local home interface, or bean class defines a finder or ejbSelect method, {1}, but there is no corresponding <query> definition in the ejb-jar.xml file.
INVALID_QUERY_NAME=In EJB {0}, invalid name for query, {1}. The query name must start with either ''find'' or ''ejbSelect''.
QUERY_NOT_FOUND=In EJB {0}, for a query defined in the ejb-jar.xml file with a method signature, {1}, we failed to find a corresponding method in the remote home interface, local home interface, or bean class that matches this signature. Note that class parameters such as java.lang.String must be fully qualified, thus ''String'' would not match ''java.lang.String''.
INVALID_RESULT_TYPE_LOCAL=In EJB {0}, the ejbSelect method, {1}, specifies a result-type-mapping of ''Local'', but the target EJB, {2}, does not have a local component interface.
INVALID_RESULT_TYPE_REMOTE=In EJB {0}, the ejbSelect method, {1}, specifies a result-type-mapping of ''Remote'', but the target EJB, {2}, does not have a remote component interface.
INVALIDATION_TARGET_DOES_NOT_EXIST=In EJB {0}, an <invalidation-target> is specified for ejb-name: {1}. However, this ejb-name does not exist in this ejb-jar. The <invalidation-target> must refer to an ejb-name that exists in this ejb-jar.
INVALIDATION_TARGET_MUST_BE_RO_ENTITY=In EJB {0}, an <invalidation-target> is specified for ejb-name: {1}. However, this ejb-name is not a Read-Only Entity EJB. Please ensure that this ejb-name is an Entity EJB and that its <concurrency-strategy> is set to ReadOnly.
INVALIDATION_TARGET_CANNOT_BE_SET_FOR_RO_ENTITY=In EJB {0}, an <invalidation-target> is specified. However, EJB {0} is a Read-Only Entity EJB. An <invalidation-target> cannot be specified on a Read-Only Entity EJB.
INVALIDATION_TARGET_MUST_BE_SET_ON_CMP20=In EJB {0}, an <invalidation-target> is specified. However, EJB {0} is not an EJB 2.0 Container-Managed Persistence Entity EJB. The <invalidation-target> can only be used with an EJB 2.0 CMP Entity EJB.
COULD_NOT_DETERMINE_RUN_AS_PRINCIPAL_FROM_ROLE_ASSIGNMENT=In EJB ''{0}'' we could not determine a principal-name to use for the run-as role ''{1}''. The weblogic-ejb-jar deployment descriptor or corresponding annotation has no run-as-principal-name or run-as-identity-principal specified so an attempt was made to search the security-role-assignment corresponding to the role-name ''{1}'' with the intent of choosing a principal-name to use as the run-as principal-name but a principal-name corresponding to a user could not be found. You must specify a run-as-principal-name to use when running as the run-as role ''{1}''.
INVALID_RUN_AS_PRINCIPAL_FOR_EJB=The run-as security principal, ''{1}'', chosen for the EJB ''{0}'' is not a valid user principal in the current security realm. Please specify a valid user principal for the EJB to use.
BUS_METHOD_NOT_PUBLIC=In EJB {0}, method ''{1}'' must be declared with public access.
BUS_METHOD_MUST_NOT_FINAL=In EJB {0}, method ''{1}'' must not be declared as final.
BUS_METHOD_MUST_NOT_STATIC=In EJB {0}, method ''{1}'' must not be declared as static
PK_FIELD_CLASS_MUST_HAVE_ATLEAST_ONE_CMP_FIELD=There should be at least one non-static non-final field defined in the {1} class of EJB {0}.
EJB_REF_MUST_HAVE_EJB_LINK_OR_REF_DESC=In ejb-jar.xml or annotation, the EJB ''{0}'' contains an invalid ejb-ref ''{1}''. The ejb-ref must either have an ejb-link set or an ejb-reference-description must be added to the weblogic-ejb-jar.xml descriptor for this ejb-ref.
ILLEGAL_LOCAL_EJB_LINK_TO_MDB=In ejb-jar.xml or annotation, the EJB ''{0}'' contains an invalid ejb-local-ref ''{1}''. The ejb-local-ref has an ejb-link to a Message-Driven Bean. This is not allowed.
LOCAL_INTERFACE_TYPES_EXPOSE_THROUGH_REMOTE_INTERFACE=In EJB {0}, method {1} exposes local interface types or local home interface types through the remote interface of the bean. This is not allowed.
LOCAL_INTERFACE_TYPES_EXPOSE_THROUGH_HOME_INTERFACE=In EJB {0}, method {1} exposes local interface types or local home interface types through the remote home interface of the bean. This is not allowed.
DUPLICATE_JNDI_NAME=In EJB {0}, the JNDI name, ''{1}'', appears multiple times as the value of a jndi-name or local-jndi-name element in the weblogic-ejb-jar.xml descriptor or corresponding annotation. The JNDI name given for a home or local home must be unique.
EJB_HOME_METHOD_RETURN_TYPE_SHOULD_MATCH=In EJB ''{0}'', the {6} home interface ''{1}'' defines a home method ''{2}'' with return type ''{3}''. Corresponding ejbHome method in bean class ''{4}'' return type is ''{5}''. Return types should match.
METHOD_PERMISSION_ROLE_NAME_NOT_DECLARED=Invalid method-permission setting in ejb-jar.xml or annotation. The role-name ''{0}'' is specified in a method-permission element or corresponding annotation but no security-role with that role-name is declared.
NON_PK_CMP_FIELD_MAPPED_TO_MORE_THAN_ONE_TABLE=In ejb: ''{0}'', field-maps for the non-Primary Key cmp-field: ''{1}'' have been defined for {2} Tables: {3}. A given non-Primary Key cmp-field can only be mapped to 1 DBMS Table.
MISSING_MULTITABLE_PK_FIELD_MAP=In ejb: ''{0}'', Table: ''{1}'' is missing a field-map for the Primary Key cmp-field: ''{2}''. For a given Bean, each Table must contain a field-map for each Primary Key cmp-field.
ROLE_ON_MULTITABLE_BEAN_MUST_SPECIFY_FK_TABLE_NAME=In relation: ''{0}'' role: ''{1}'', when the relationship-role-source'' Bean is mapped to Multiple Tables, and that Bean owns the Foreign Keys for the Relationship, then the Table that contains the Foreign Key Columns for the Relationship must be specified in the weblogic-relationship-role''s foreign-key-table tag.
MISSING_FK_TABLE_NAME_FOR_MULTITABLE_BEAN=You must specify the <foreign-key-table>. \nIn <relation-name> ''{0}'', <relationship-role-name> ''{1}'', the <relationship-role-source> ''{2}'', is mapped to multiple tables. Because ''{2}'' is mapped to multiple tables, it is required that the <foreign-key-table> be specified in the <relationship-role-map> so that it can be known which of the tables mapped to ''{2}'''' contains the <foreign-key-column>(s) listed in the set of <column-map> elements in the <relationship-role-map> for the <relationship-role-name> ''{1}''.
ROLE_HAS_NO_COLUMN_MAP=In Relation: ''{0}'', the Role: ''{1}'' is missing a column-map. This is required to map Foreign Keys to Primary Keys for the Relation.
ROLE_11_SPECIFIES_INVALID_PK_TABLE_NAME=In one to one relation: ''{0}'', the role: ''{1}'' specifies a primary-key-table named ''{2}''. Neither EJB ''{3}'' nor EJB ''{4}'' list this table in any of their table-map elements. The primary-key-table must be a table-name in a table-map for the ejb-name ''{3}'' or ''{4}''.
ROLE_1N_SPECIFIES_INVALID_PK_TABLE_NAME=In one to many relation: ''{0}'', the role: ''{1}'' specifies a primary-key-table named ''{2}''. The EJB ''{3}'' does not list this table in any of its table-map elements. The primary-key-table must be a table-name in a table-map for the ejb-name ''{3}''.
ROLE_MN_SPECIFIES_INVALID_PK_TABLE_NAME=In many to many relation: ''{0}'', the role: ''{1}'' specifies a primary-key-table named ''{2}''. The EJB ''{3}'' does not list this table in any of its table-map elements. The primary-key-table must be a table-name in a table-map for the ejb-name ''{3}''.
ROLE_11_SPECIFIES_INVALID_FK_TABLE_NAME=In one to one relation: ''{0}'', the role: ''{1}'' specifies a foreign-key-table named ''{2}''. Neither EJB ''{3}'' nor EJB ''{4}'' list this table in any of their table-map elements. The foreign-key-table must be a table-name in a table-map for the ejb-name ''{3}'' or ''{4}''.
ROLE_1N_SPECIFIES_INVALID_FK_TABLE_NAME=In one to many relation: ''{0}'', the role: ''{1}'' specifies a foreign-key-table named ''{2}''. The EJB ''{3}'' does not list this table in any of its table-map elements. The foreign-key-table must be a table-name in a table-map for the ejb-name ''{3}''.
ROLE_MN_SPECIFIES_INVALID_FK_TABLE_NAME=In many to many relation: ''{0}'', the role: ''{1}'' specifies a foreign-key-table named ''{2}''. A foreign-key-table should not be specified for a many to many relation because the foreign key columns are held in the join table. The join table name is specified in the weblogic-rdbms-relation table-name element.
ROLE_11_SPECIFIES_FK_AND_PK_TABLE_NAMES_NOT_IN_DIFFERENT_ROLES=In one to one relation: ''{0}'', the role: ''{1}'' specifies a primary-key-table named ''{2}'' and a foreign-key-table named ''{3}''. In a weblogic-relationship-role, if both a primary-key-table and a foreign-key-table are specified then they are required to be associated with the two different roles participating in the relation. These two tables are associated with a single role associated with one side of the relation. This is not allowed.
RELATED_BEANS_MUST_SHARE_DATASOURCE=Related beans must use the same datasource. In relation ''{0}'' the ejb ''{2}'' in role ''{1}'' is using a DataSource named ''{3}'', but the ejb ''{5}'' in role ''{4}'' is using a DataSource named ''{6}''. The two beans do not use the same DataSource. This is an error.
EXPAND_JAR=Expanding jar {0} into output directory {1}
EXTRACT_DESC=Extracting descriptors from {0}
COMPILING_JAR=Compiling input jar {0}
CREATING_JAR=Creating output jar {0}
EJBC_SUCCESS=ejbc successful
PROCESS_DESC=Processing input descriptor
ERROR_PROCESS_DESC=\n ERROR: Error processing input descriptor
CHECK_COMPLIANCE=Checking Java EE compliance of beans
BEANS_COMPLIANT=Beans are Java EE compliant
ERROR_CHECKING_COMPLIANCE=\n ERROR: Error while checking Java EE compliance of beans
GEN_BEAN_SRC=Generated bean sources for {0}
ERROR_GEN_BEAN_SRC=\n ERROR: Error generating bean sources for {0}
GEN_PERS_SRC=Generated persistence sources for entity bean {0}
ERROR_GEN_PERS_SRC=\n ERROR: Error generating persistence sources for entity bean {0}
COMPILING_UNECESSARY=Recompilation determined unnecessary
RMI_COMPILING_UNECESSARY=RMI compilation determined unnecessary
CREATED_CLIENT_JAR=Created client jar {0}
ERROR_CREATING_CLIENT_JAR=\n ERROR: Error creating client jar {0}
COMPILING_EJB_SOURCES=Compiling EJB sources
ERROR_COMPILING_EJB_SOURCES=\n ERROR: Error compiling EJB sources
FINISH_COMPILING_EJB_SOURCES=Finished compiling EJB sources
CREATE_CHECKSUM=Created checksum in file {0}
ERROR_CREATING_CHECKSUM=\n ERROR: writing checksum to file {0}
FINDING_RMIC_CLASSES=Finding classes that need RMI compilation for bean {0}
NO_RMIC_CLASSES=No classes found for RMI compilation for bean {0}
COMPILING_RMIC=Compiling RMI sources
ERROR_COMPILING_RMIC=\n ERROR: Error compiling RMI sources
ILLEGAL_DATABASETYPE_VALUE=Illegal value ''{0}'' for element <database-type>, it must be one of the values: DB2,INFORMIX,ORACLE,SQL_SERVER,SYBASE,POINTBASE.
ILLEGAL_DATABASETYPE_VALUE_VER71=Problem, Illegal value ''{0}'' for element <database-type> \n\nAction, respecify the value of <database-type> to be one of the legal values: DB2,Informix,Oracle,SQLServer,Sybase,Pointbase.
ILLEGAL_AUTOKEY_GENERATOR_VALUE=Problem, Illegal value ''{2}'' for element <generator-type> found in RDBMS CMP deployment descriptor ''{0}'' while reading information for EJB ''{1}''. \n\nAction, respecify the value of <generator-type> to be one of the legal values: Oracle | SQLServer | NamedSequenceTable.
EJBQLCANNOTBENULL=The finder method {1} of ejb {0} cannot have a null ejb ql value. No alternate query was specified in the weblogic-cmp-jar.xml deployment descriptor.
ENV_VALUE_CANNOT_BE_NULL=The environment entry {0} cannot have a null value.
EJBANDWLQLCANNOTBENULL=The finder method {1} of ejb {0} cannot have both ejb-ql and wlql as null.
WLQL_CANNOT_OVERRIDE_FINDBYPK_QL=The findByPrimaryKey method of ejb {0} is overridden in the weblogic-cmp-rdbms-jar.xml weblogic-ql element with value ''{1}''. This is not allowed. The EJB QL for the findByPrimaryKey Method is generated by the WebLogic EJB Container and may not be overridden.
FIELDS_IN_PK_CLASS_SHOULD_BE_CMP_FIELDS=The field(s) defined in {1} of bean {0} should be declared as cmp fields in ejb-jar.xml
noDuplicateEjbRefNamesAllowed=Error: ejb-ref-name element values must be unique within an EJB. In the ejb-jar.xml descriptor or annotation, the EJB ''{0}'' has more than one ejb-ref or ejb-local-ref with the name ''{1}''.
noDuplicateServiceRefNamesAllowed=Error: service-ref-name element values must be unique within an EJB. In the ejb-jar.xml descriptor or annotation, the EJB ''{0}'' has more than one service-ref with the name ''{1}''.
noDuplicateServiceReferenceDescriptionNamesAllowed=Error: service-ref-name element values must be unique within an EJB. In the weblogic-ejb-jar.xml descriptor or annotation, the EJB ''{0}'' has more than one service-reference-description with the name ''{1}''.
noServiceRefForReferenceDescription=Error: The EJB "{0}" has an service-reference-description element in the weblogic-ejb-jar.xml descriptor or corresponding annotation with the service-ref-name "{1}", but no service-ref with that name was declared. You must either declare an service-ref with that name in the ejb-jar.xml deployment descriptor or remove the service-reference-description.
noMethodFoundForEJBDeploymentDescriptorSetting=Unable to set the {4} for method ''{0}'' on EJB ''{1}''. No matching method could be found. Please verify the method signature specified in the {3} file matches that of your {2}interface for this EJB.
vendorPersistenceTypeNotInstalled=Persistence type ''{0}'' with version ''{1}'' which is referenced in bean ''{2}'' is not installed. The installed persistence types are:
incompatibleCmpVersion=Error while deploying EJB ''{0}''. The bean is using container managed persistence version ''{1}'', but the bean''s persistence type is using version ''{2}''. The types must be the same.
incompatibleVendorPersistenceType=Error while deploying EJB ''{0}''. The bean is using a persistence type that is compatible with version ''{1}'' of WebLogic Server, but WebLogic version ''{2}'' is in use.
resourceRefNotMapped=Error: The resource-ref ''{1}'', declared for EJB ''{0}'', is not mapped to the resource it references. You must add a resource-description element to your weblogic-ejb-jar.xml file to map the resource-ref to the JNDI name of the resource being referenced.
resourceEnvRefNotMapped=Error: The resource-env-ref ''{1}'', declared for EJB ''{0}'', is not mapped to the resource it references. You must add a resource-env-description element to your weblogic-ejb-jar.xml file to map the resource-env-ref to the JNDI name of the resource being referenced.
noEJBRefForReferenceDescription=Error: The EJB "{0}" has an ejb-reference-description element in the weblogic-ejb-jar.xml descriptor or corresponding annotation with the ejb-ref-name "{1}", but no ejb-ref with that name was declared. You must either declare an ejb-ref with that name in the ejb-jar.xml deployment descriptor or corresponding annotation, or remove the ejb-reference-description.
noEJBLocalRefForReferenceDescription=Error: The EJB "{0}" has an ejb-local-reference-description element in the weblogic-ejb-jar.xml descriptor or corresponding annotation with the ejb-ref-name "{1}", but no ejb-local-ref with that name was declared. You must either declare an ejb-local-ref with that name in the ejb-jar.xml deployment descriptor or corresponding annotation, or remove the ejb-local-reference-description.
roleNotFound={0} : could not find the EjbRelationShip MANY ROLE in a 1-N Relationship.
cmpFileNotFound=Could not load the RDBMS deployment descriptor for EJB ''{0}'' from the file ''{1}''. The file was not found in the jar file ''{2}''.
destinationNotFound=Couldn''t find a destination name for bean ''{0}''. Please make sure your weblogic-ejb-jar.xml contains a message-driven-descriptor element or corresponding annotation is set.
missingRelationshipRoleMap=Error, the CMP relationship named ''{0}'' is missing a relationship-role-map element in the RDBMS deployment descriptor. Please fix this and try again.
COMMIT_OPTION_FOR_delayDatabaseInsertUntil_IGNORED=The ''commit'' option for <delay-database-insert-until> is ignored. EJB container will turn on batch operations automatically if the JDBC driver supports the batch functions. To turn off batch operations, set <enable-batch-operations> tag in <weblogic-rdbms-jar> to ''false''.
WRONG_VALUE_FOR_DBMS_TABLE=The value specified for <create-default-dbms-tables> is wrong. The value should be one of the following: ''CreateOnly'',''Disabled'',''DropAndCreate'', ''DropAndCreateAlways'',''AlterOrCreate''.
JNDI_NAME_MUST_HAVE_REMOTE_INTERFACE=<jndi-name> must be defined for a bean with remote interface. ''{0}'' does not have a remote interface.
LOCAL_JNDI_NAME_MUST_HAVE_LOCAL_INTERFACE=<local-jndi-name> must be defined for a bean with local interface. ''{0}'' does not have a local interface.
INCORRECT_JNDI_NAME=The jndi name ''{1}'' of ejb ''{0}'' is incorrect. The jndi name should not contain java:comp/env.
RESERVED_WORD_USED_FOR_COLUMN_OR_TABLE=The bean ''{0}'' uses the reserved word ''{1}'' as the value of a table or column name in its RDBMS deployment descriptor. Please change the name of this table or column to another value.
DUPLICATE_WEBLOGIC-QUERY_ELEMENTS_DETECTED=Duplicate weblogic-query elements corresponding to the finder ''{0}'', for EJB ''{1}'', were found in the deployment descriptor ''{2}''. Please ensure only one weblogic-query element exists for this finder.
DUPLICATE_RELATIONSHIP_ROLE_NAMES_DETECTED=In weblogic-rdbms-relation ''{0}'', multiple weblogic-relationship-roles were found with the relationship-role-name ''{1}''. The relationship-role-names inside of a weblogic-rdbms-relation must be unique
INVALID_INSTANCE_LOCK_ORDER=Invalid value of ''{2}'' specified for <instance-lock-order> for ejb ''{1}'' in deployment descriptor file ''{0}''. Valid values are ''AccessOrder'' and 'ValueOrder''
MESSAGE_DESTINATION_REF_NOT_LINKED=The message-destination-ref ''{0}'' declared in the ejb-jar.xml descriptor or corresponding annotation for EJB ''{1}'' is not linked to a message-destination. Ensure there is a message-destination declaration for the target destination and use the message-destination-link element or corresponding annotation to link the message-destination-ref.
DUPLICATE_SQL_CACHING_NAME=Duplicate sql-caching-name ''{2}'' found in CMP deployment descriptor ''{1}'' while reading information for ''{0}''.
EJB_TIMEOUT_BAD_TX_ATTRIBUTE=Illegal transaction attribute specified for the ejbTimeout(javax.ejb.Timer) method in EJB ''{0}''. The EJB specification only allows the RequiresNew or NotSupported transaction attributes to be specified for this method.
OptimisticWithReadTimeoutSecondsNoCacheBetweenTx=The ejb ''{0}'' uses an Optimistic concurrency strategy with a positive read-timeout-seconds value specified in the weblogic-ejb-jar.xml descriptor. Since this EJB does not have cache-between-transactions set to true, the read-timeout-seconds will be ignored.
SQL_SHAPE_DOES_NOT_EXIST=In ejb ''{0}'', {1} references an SqlShape element ''{2}'' that is not defined. The list of SqlShape elements that are defined for this EJB is: {3}.
SQL_QUERY_NOT_SPECIFIED=In ejb ''{0}'', the finder {1} does not specify any SQL.
UNKNOWN_PK_NEVER_ASSIGNED=The ejb, ''{0}'', has java.lang.Object declared as the primary key class in ejb-jar.xml. In this special case of an unknown primary key, a cmp-field must be designated as the primary key using the unknown-primary-key-field element of the RDBMS deployment descriptor. The designated primary key can be a new cmp-field or a cmp-field declared in ejb-jar.xml. If the cmp-field is new, automatic-key-generation must be enabled. The type of the new field will be java.lang.Long and the field must be mapped to a database column like other cmp-fields.
UNKNOWN_PK_WITHOUT_AUTO_KEY=The ejb, ''{0}'', has an unknown-primary-key-field mapping in its RDBMS deployment descriptor. This mapping specifies a cmp-field which is not declared in the ejb-jar.xml descriptor. In this case, the bean is required to have automatic-key-generation enabled. Please enable automatic-key-generation for this bean or change your primary-key designation to a cmp-field declared in ejb-jar.xml.
QUERY_CACHING_SUPPORTED_FOR_RO_BEANS_ONLY=In ejb ''{0}'', the finder ''{1}'' has <enable-query-caching> set to true. Ejb ''{0}'' is not a ReadOnly bean. Query-caching is supported only for ReadOnly beans. The <enable-query-caching> setting will be ignored.
QUERY_CACHING_UNNECESSARY_FOR_FIND_BY_PK=In ejb ''{0}'', the finder findByPrimaryKey has <enable-query-caching> set to true. Query-caching is redundant for such finders. The <enable-query-caching> setting will be ignored.
QUERY_CACHING_ENABLED_FOR_CMR_TO_RW_BEAN=In ejb ''{0}'', the <weblogic-relationship-role> ''{1}'' with ejb ''{2}'' has <enable-query-caching> set to true, but ejb ''{2}'' is not ReadOnly. The <enable-query-caching> setting will be ignored.
QUERY_CACHING_NOT_SUPPORTED_FOR_EJBSELECTS=In ejb ''{0}'', the finder ''{1}'' has <enable-query-caching> set to true. This finder is an ejbSelect finder. Query-caching is not supported for ejbSelects. The <enable-query-caching> setting will be ignored.
QUERY_CACHING_NOT_SUPPORTED_FOR_ENUMFINDERS=In ejb ''{0}'', the finder ''{1}'' has <enable-query-caching> set to true. This finder returns an Enumeration. Query-caching is not supported for such finders. The <enable-query-caching> setting will be ignored.
QUERY_CACHING_FINDER_HAS_RW_CACHING_ELEMENT_CMR_FIELD=In ejb ''{0}'', the finder ''{1}'' has <enable-query-caching> set to true. This finder has an associated caching-element, ''{2}'', that points to a read-write bean. Query-caching is not supported for such finders. The <enable-query-caching> setting will be ignored.
QUERY_CACHING_NOT_SUPORTED_FOR_PREPARED_QUERY_FINDER=In ejb ''{0}'', the finder ''{1}'' has <enable-query-caching> set to true. This finder uses prepared queries. Query-caching is not supported for such finders. The <enable-query-caching> setting will be ignored.
QUERY_CACHING_SQLFINDER_RETURNS_RW_BEAN=In ejb ''{0}'', the sql-finder ''{1}'' has <enable-query-caching> set to true. This finder returns at least one read-write bean, ''{2}''. Query-caching is supported for sql-finders only if all beans returned are read-only. The <enable-query-caching> setting will be ignored.
QUERY_CACHING_SQLFINDER_HAS_RW_RELATED_BEAN=In ejb ''{0}'', the sql-finder ''{1}'' has <enable-query-caching> set to true. This finder has a sql-shape associated with it called ''{2}'' which includes a related read-write bean ''{3}''. Query-caching is supported for sql-finders only if all beans returned are read-only. The <enable-query-caching> setting will be ignored.
NO_JNDI_NAME_DEFINED_FOR_REMOTE_VIEW=The ejb ''{0}'' has a Remote View. However, the <jndi-name> is not set.
EJB_TIMEOUT_METHOD_NOT_FOUND=The ejb ''{0}'' has a timeout-method configured, however, the timeout method ''{1}'' could not be found in the bean class. Please ensure the timeout-method name is correct and that the bean class method only takes a single argument of the type javax.ejb.Timer.
EXCEPTION_CANNOT_EXTEND_REMOTEEXCEPTION=The application exception {0} may not be a subclass of the java.rmi.RemoteException.The java.rmi.RemoteException and its subclasses are reserved for system exceptions.
LOCAL_INTERFACE_CANNOT_REMOTE=Local business interface {0} is also a remote business interface.
LOCAL_INTERFACE_NOT_FOUND_IN_BEAN=Method {0} in local business interface {1} has not corresponding matching in bean {2}
LOCAL_INTERFACE_CANNOT_EXTEND_EJBLocalObject=Local business interface {0} extends javax.ejb.EJBLocalObject.
BUSINESS_INTERFACE_WITHOUT_METHOD=Business interface {0} does not declare any methods
BEAN_CLASS_WITHOUT_METHOD=Bean class {0} does not declare any methods
TWO_ARROUNDINVOKE_METHOD=There are two AroundInvoke methods in {0}
ARROUNDINVOKE_METHOD_CANNOT_BUSINESS_METHOD=AroundInvoke or AroundTimeout method {0} in class {1} cannot be a business method
ARROUNDINVOKE_METHOD_CANNOT_BE_FINAL=AroundInvoke method {0} in class {1} must not be declared as final
ARROUNDINVOKE_METHOD_CANNOT_BE_STATIC=AroundInvoke method {0} in class {1} must not be declared as static
ARROUNDINVOKE_METHOD_IS_INVALID=AroundInvoke method {0} in class {1} must have the signature: ''Object <METHOD(InvocationContext)> throws Exception''
TEMOTE_INTERFACE_IS_LOCAL=Remote business interface {0} is also a local business interface.
REMOTE_INTERFACE_IS_LOCAL=Remote business interface {0} is also a local business interface.
REMOTE_METHOD_NOT_FOUND_IN_BEAN=Method {0} in remote business interface {1} has not corresponding matching in bean {2}
REMOTE_INTERFACE_EXTEND_EJBOBJECT=Remote business interface {0} extends javax.ejb.EJBObject.
REMOTE_BUSINESS_INTERFACE_NO_METHOD=Business interface {0} does not declare any methods
REMOTE_BUSINESS_INTERFACE_THROW_REMOTEEXCEPTION=Remote business interface methods should not throw RemoteException. The method {0} of interface {1} throws RemoteException
NO_INTERFACE_VIEW_METHOD_CANNOT_THROW_REMOTEEXCEPTION=No interface view methods should not throw RemoteException. The method {0} of ejb {1} throws RemoteException
ASYNC_METHOD_RETURN_ERROR_VALUE_TYPE=Return value of async method could only be void or subclass of Future<V>. The method {0} of class {1} returns {2}.
ASYNC_METHOD_CANNOT_IN_WEBSERVICE_CLIENT_VIEW=EJB {0} has asynchronous method {1} in webservice client view. But business methods exposed through the EJB 2.x Local , EJB 2.x Remote, and Web Service client views must not be designated as asynchronous.
ASYNC_METHOD_CANNOT_IN_EJB2X_CLIENT_VIEW=EJB {0} is 2.x local or 2.x remote and has asynchronous method {1}. But business methods exposed through the EJB 2.x Local , EJB 2.x Remote, and Web Service client views must not be designated as asynchronous.
ASYNC_METHOD_DECLARED_ERROR_EXCEPTION_TYPE=An asynchronous method with return type void must not declare any application exceptions. The method {0} of class {1} declared {2}.
REMOTE_INTERFACE_NOT_THROW_REMOTEEXCEPTION=If remote business interface extends java.rmi.Remote, all its methods should throw RemoteException. The method {0} of interface {1} doesn't throw RemoteException
MDB_PREDESTROY_NOT_APPLY_EJBREMOVE=MDB {0} implements MessageDrivenBean interface, but PreDestroy callback hasn''t been applied to the ejbRemove method
SESSION_BEAN_PREDESTROY_NOT_APPLY_EJBREMOVE=SessionBean {0} implements SessionBean interface, but PreDestroy callback hasn''t been applied to the ejbRemove method
SESSION_BEAN_POSTACTIVATE_NOT_APPLY_EJBACTIVE=SessionBean {0}implements SessionBean interface, but PostActivate callback hasn't been applied to the ejbActivate method
SESSION_BEAN_PREPASSIVATE_NOT_APPLY_EJBPASSIVATE=SessionBean {0} implements SessionBean interface, but PrePassivate callback hasn't been applied to the ejbPassivate method
METHOD_CANNOT_START_WITH_EJB=The method name of business method {0} in class {1} must not start with ''ejb''
BUSINESS_METHOD_MUST_BE_PUBLIC=Business method {0} in class {1} must be declared as public
BUSINESS_METHOD_MUST_NOT_BE_FINAL=Business method {0} in class {1} must not be declared as final
BUSINESS_METHOD_MUST_NOT_BE_STATIC=Business method {0} in class {1} must not be declared as static
REMOVE_METHOD_NOT_BE_BUSINESS_METHOD=Remove method {0} is not a business method in EJB {1}
INTERCEPTOR_CLASS_DECLARED_IN_DD=interceptor class {0} has been declared twice in the ejb-jar.xml or corresponding annotation.
INTERCEPTOR_CLASS_WITHOUT_NOARG_CONSTRUCTOR=Interceptor class {0} must have a public no-arg constructor
AROUNDINVOKE_METHOD_CANNOT_BE_FINAL=The AroundInvoke method can not be final, hence the interceptor class {0} can not be final, too.
AROUNDINVOKE_METHOD_WITH_INVALIDE_SIGNATURE=AroundInvoke method {0} in class {1} must have the signature: ''Object <METHOD>(InvocationContext) throws Exception''
BEAN_LIFECYCLE_METHOD_WITH_INVALIDE_SIGNATURE={0} method {1} in class {2} must have the signature: ''void <METHOD>()''
INTERCEPTOR_LIFECYCLE_METHOD_WITH_INVALIDE_SIGNATURE={0} method {1} in class {2} must have one of the following signatures: ''void <METHOD>(InvocationContext)'' or ''Object <METHOD>(InvocationContext) throws Exception''
LIFECYCLE_INTERCEPTOR_METHOD_NOT_BE_FINAL=Lifecycle callback interceptor method {0} in class {1} must not be declared as final
LIFECYCLE_INTERCEPTOR_METHOD_NOT_BE_STATIC=Lifecycle callback interceptor method {0} in class {1} must not be declared as static
LIFECYCLE_INTERCEPTOR_METHOD_WITH_INVALID_SIGNATURE=Lifecycle callback interceptor method {0} in class {1} must have the signature: ''{2}''
TWO_LIFECYCLE_INTERCEPTOR_METHOD_IN_BEAN=There are two {0} methods in {1}
BUSINESS_INTERFACE_NOT_FOUND_IN_SESSION_BEAN=No business interface, component interface or web service endpoint interface found for Session Bean {0}
COMPONENT_INTERFACE_NOT_FOUND_IN_SESSION_BEAN=No component interface found for Session Bean {0}
TIMEOUT_IN_DD_NOT_COMPATIBLE_WITH_ANNOTATION=The Timeout annotation is used or the bean implements the TimedObject interface, but the timeout-method deployment descriptor element is not used to refer to the same method"
BEAN_CAN_HAVE_ONE_TIMEOUT_METHOD=A bean can have at most one timeout method.
TIMEOUT_CAN_ONLY_SPECIFY_EJBTIMEOUT_METHOD={0} implements the TimedObject interface, the Timeout annotation or timeout-method deployment descriptor element can only be used to specify the ejbTimeout method.
STATEFULE_BEAN_CANNOT_IMPLEMENTS_TIMEOUT=Stateful session beans cannot be registered with the EJB Timer Service and therefore should not implement timeout callback methods
TIMEOUT_METHOD_CANNOT_BE_FINAL_OR_STATIC=Timeout method in EJB {0} must not be declared as final or static
TIMEOUT_METHOD_WITH_INVALID_SIGNATURE=The timeout method in EJB {0} must has such a signature:void METHOD(Timer timer)
INVALID_NUMBER_IN_SCHEDULE_EXPRESSION=The number ''{0}'' in schedule expression is not a valid number.
INVALID_ENUM_IN_SCHEDULE_EXPRESSION=The enum ''{0}'' in schedule expression is not valid.
TIMEOUT_METHOD_CANNOT_THROW_APPLICATION_EXCEPTION=The timeout method in EJB {0} must not throw application exceptions.
NO_EJBS_FOUND_IN_EJB_JAR=No EJBs found in the ejb-jar file ''{0}''. Please ensure the ejb-jar contains EJB declarations via an ejb-jar.xml deployment descriptor or at least one class annotated with the @Stateless, @Stateful, @Singleton or @MessageDriven EJB annotation.
NO_SESSION_BEAN_CLASS_FOUND_FOR_EJB=No bean class found for the EJB {0}. Please use the Stateless, or Stateful annotation, or the ejb-class element of the session deployment descriptor element to specify the fully-qualified name of the enterprise bean's class.
SESSION_BEAN_NO_SESSION_TYPE=the EJB {0} is specified as a Session Bean but the session type is not specified.Please use annotation or session-type element to declare whether it is stateful or stateless
NO_MDB_CLASS_FOUND_FOR_EJB=No bean class found for the EJB {0} Please use the Message-driven annotation, or the ejb-class element of the message-driven deployment descriptor element to specify the fully-qualified name of the enterprise bean's class.
MDB_POSTCONSTRUCT_NOT_APPLY_EJBCREATE=MDB {0} implements ejbCreate method, but PostConstruct callback hasn''t been applied to it
SLSB_POSTCONSTRUCT_NOT_APPLY_CREATE=Stateless session bean {0} implements ejbCreate method, but PostConstruct callback hasn''t been applied to the ejbCreate method
EJB_ANNOTATION_VALUE_IS_DUPLICATE=Duplicate ejb name ''{0}'' found: annotation ''{1}'' on bean class {2} and annoation ''{3}'' on bean class {4}
EJB_MAY_BE_MISSING_BRIDGE_METHOD=Problems definitively matching up the interface method {0} with a method in the bean class. Please modify your bean class to implement the interface {1}
WRONG_EJBNAME_IN_WEBLOGIC_EJB_JAR_XML=EJB name {0} is defined in weblogic-ejb-jar xml but the corresponding bean is missing. Please check that the name is accurate
TWO_ARROUNDTIMEOUT_METHOD=There are two AroundTimeout methods in {0}
TIMEOUT_METHOD_WITH_INVALID_SIGNATURE2=The timeout method in EJB {0} must have signature:void METHOD(Timer timer) or void METHOD()
EJB_COMPONENT_DEFINING_ANNOTATION_INVALID=Can not apply annotations ''{0}'' at the same time on bean class ''{1}''.
INVALID_AUTO_CREATED_CLUSTERED_TIMER_COUNT=Method {0} in bean class {1} has multiple auto created timers. Weblogic does not support multiple auto created clustered timers on one timeout method now.
WRONG_STATEFUL_LIFECYCLE_NONPASSIVATABLE=Stateful Session Bean {0} should not have postActivate/prePassivate lifecycle callback methods, if the passivationCapable element of the Stateful annotation is set to false or the passivation-capable element of the session deployment descriptor element is set to false.
WRONG_STATEFUL_REPLICATETYPE_NONPASSIVATABLE=Stateful Session Bean {0} should not set replication-type to InMemory, if the passivationCapable element of the Stateful annotation is set to false or the passivation-capable element of the session deployment descriptor element is set to false.
LIFECYCLE_TXATTRIBUTE_INCORRECT_SFSB=Methods {0} in bean class {1} have incorrect transaction attribute specified. PostConstruct, PreDestroy, PrePassivate, PostActivate callbacks of Stateful Session Beans with container-managed transaction demarcation are permitted only to have transaction attribute RequiresNew or NotSupported.
LIFECYCLE_TXATTRIBUTE_INCORRECT_SINGLETON=Methods {0} in bean class {1} have incorrect transaction attribute specified. PostConstruct, PreDestroy callbacks of Singleton Session Beans with container-managed transaction demarcation are permitted only to have transaction attribute Required, RequiresNew, or NotSupported.
STATEFUL_BEAN_CANNOT_REPLICATE_IN_MEMORY_STATE=The InMemory state replication feature for Stateful Session EJB {0} is configured, but the bean class of Stateful Session EJB {0} does not declare any fields.

