#
# Generated by hk2-metadata-generator
#

[weblogic.management.provider.internal.PartitionManagerDataLoaderInterceptor]S
contract={org.aopalliance.intercept.MethodInterceptor,weblogic.management.configuration.util.PartitionManagerInterceptorDataLoader}
qualifier={org.glassfish.hk2.extras.interception.Interceptor}
rank=2147483647

[weblogic.deployment.jms.JMSConnectionHelper$JMSConnectionHelperServiceGeneratorImpl]S
contract={weblogic.deployment.jms.JMSConnectionHelperServiceGenerator}

[weblogic.deployment.jms.PrimaryContextHelper$PrimaryContextHelperServiceGeneratorImpl]S
contract={weblogic.deployment.jms.PrimaryContextHelperServiceGenerator}

[weblogic.management.provider.internal.ActiveBeanUtilBaseImpl]S
contract={weblogic.management.utils.ActiveBeanUtilBase}

[weblogic.management.provider.internal.ActiveBeanUtilImpl]S
contract={weblogic.management.utils.ActiveBeanUtil,weblogic.management.utils.ActiveBeanUtilBase}

[weblogic.management.provider.internal.BeanInfoAccessService]
contract={weblogic.server.ServerService}
name=BeanInfoAccessService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={5},runLevelMode={0}

[weblogic.management.provider.internal.ConfigBackupService]
contract={weblogic.server.ServerService}
name=ConfigBackupService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={15}

[weblogic.management.provider.internal.ConfigImageSourceService]
contract={weblogic.server.ServerService}
name=ConfigImageSourceService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.management.provider.internal.DomainAccessImpl]S
contract={weblogic.management.provider.DomainAccess,weblogic.management.provider.RegistrationManager,weblogic.management.provider.DomainAccessSettable}
name=DomainAccessImpl
qualifier={weblogic.utils.annotation.Secure,javax.inject.Named}

[weblogic.management.provider.internal.DomainAccessService]
contract={weblogic.server.ServerService}
name=DomainAccessService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10},runLevelMode={0}

[weblogic.management.provider.internal.EditSessionConfigurationManagerService]
contract={weblogic.management.EditSessionConfigurationManager,weblogic.server.ServerService}
name=EditSessionConfigurationManagerService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.management.provider.internal.EditSessionToolService]S
contract={weblogic.management.EditSessionTool}
name=EditSessionToolService
qualifier={javax.inject.Named}

[weblogic.management.provider.internal.ForeignJNDIPartitionProcessor]S
contract={weblogic.management.provider.internal.ComponentPartitionProcessor}

[weblogic.management.provider.internal.JMSPartitionProcessor]S
contract={weblogic.management.provider.internal.ComponentPartitionSystemResourceProcessor,weblogic.management.provider.internal.ComponentPartitionProcessor}

[weblogic.management.provider.internal.MailPartitionProcessor]S
contract={weblogic.management.provider.internal.ComponentPartitionProcessor}

[weblogic.management.provider.internal.MessagingBridgePartitionProcessor]S
contract={weblogic.management.provider.internal.ComponentPartitionProcessor}

[weblogic.management.provider.internal.PartitionProcessor]S

[weblogic.management.provider.internal.PartitionResourceProcessorImpl]
contract={weblogic.descriptor.internal.PartitionResourceProcessor}

[weblogic.management.provider.internal.PartitionServerServiceInterceptorArranger]S
contract={org.glassfish.hk2.extras.interception.InterceptorOrderingService}

[weblogic.management.provider.internal.PathServicePartitionProcessor]S
contract={weblogic.management.provider.internal.ComponentPartitionProcessor}

[weblogic.management.provider.internal.RuntimeAccessDeploymentReceiverService]
contract={weblogic.server.ServerService}
name=RuntimeAccessDeploymentReceiverService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={5},runLevelMode={0}

[weblogic.management.provider.internal.RuntimeAccessImpl]S
contract={weblogic.management.provider.RuntimeAccess,weblogic.management.provider.RegistrationManager,weblogic.security.SecurityRuntimeAccess,weblogic.management.provider.RuntimeAccessSettable}
name=RuntimeAccessImpl
qualifier={weblogic.utils.annotation.Secure,javax.inject.Named}

[weblogic.management.provider.internal.RuntimeAccessService]
contract={weblogic.server.ServerService}
name=RuntimeAccessService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={5},runLevelMode={0}

[weblogic.management.provider.internal.RuntimeMBeanHelperImpl]S
contract={weblogic.management.runtime.RuntimeMBeanHelper}

[weblogic.management.provider.internal.SAFAgentPartitionProcessor]S
contract={weblogic.management.provider.internal.ComponentPartitionProcessor}

[weblogic.management.provider.internal.ServerServiceDependencyAnalyzer]S

[weblogic.management.provider.internal.ServerServiceInstanceRoster]S
contract={org.glassfish.hk2.api.InstanceLifecycleListener}

[weblogic.management.provider.internal.WorkManagerService]
contract={weblogic.server.ServerService}
name=WorkManagerService
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.management.provider.internal.situationalconfig.SituationalConfigManagerImpl]S
contract={weblogic.management.utils.situationalconfig.SituationalConfigManager,weblogic.management.provider.RuntimeAccessSettable,weblogic.server.ServerService}
name=SituationalConfigManagerImpl
qualifier={javax.inject.Named}

[weblogic.management.provider.internal.situationalconfig.SituationalPropertiesProcessorImpl]S
contract={weblogic.management.provider.internal.situationalconfig.SituationalPropertiesProcessor,weblogic.management.provider.RuntimeAccessSettable}
name=SituationalPropertiesProcessorImpl
qualifier={javax.inject.Named}

[weblogic.management.provider.internal.situationalconfig.SituationalServiceImpl]
contract={weblogic.management.provider.internal.situationalconfig.SituationalService}
name=SituationalServiceImpl
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={10}

[weblogic.management.workflow.WorkflowLifecycleManagerStarter]
contract={weblogic.server.ServerService}
name=WorkflowLifecycleManagerStarter
scope=org.glassfish.hk2.runlevel.RunLevel
qualifier={javax.inject.Named}
metadata=runLevelValue={15}

[weblogic.management.workflow.internal.DescriptorLockImpl]S
contract={weblogic.management.workflow.DescriptorLock}

