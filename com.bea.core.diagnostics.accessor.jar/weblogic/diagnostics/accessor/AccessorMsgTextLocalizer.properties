version=1.0
L10nPackage=weblogic.diagnostics.accessor
I18nPackage=weblogic.diagnostics.accessor
subsystem=Diagnostics

FAILED_TO_DISTRIBUTE_APP=Failed to distribute the application with status {0}
APP_DISTRIBUTION_COMPLETE=Completed the distribution of Application with status {0}
APP_DEPLOYMENT_COMPLETE=Completed the deployment of Application with status {0}
FAILED_TO_DEPLOY_APP=Failed to deploy the application with status {0}
FAILED_TO_UNDEPLOY_APP=Failed to undeploy the application with status {0}
FAILED_TO_UPDATE_APP=Failed to update the application with status {0}
FAILED_TO_START_APP=Failed to start the application with status {0}
FAILED_TO_STOP_APP=Failed to stop the application with status {0}
DISTRIBUTION_STARTED=Started the Distribution of Application. Please refer to the returned WLSTProgress object or variable LAST to track the status.
APPLICATION_STARTED=Started the Application. Please refer to the returned WLSTProgress object or variable LAST to track the status.
DEPLOYMENT_STARTED=Started the Deployment of Application. Please refer to the returned WLSTProgress object or variable LAST to track the status.
REDEPLOYMENT_STARTED=Started the Redeployment of Application. Please refer to the returned WLSTProgress object or variable LAST to track the status.
UNDEPLOYMENT_STARTED=Started the undeployment of Application. Please refer to the returned WLSTProgress object or variable LAST to track the status.
STOP_STARTED=Stopped the Application. Please refer to the returned WLSTProgress object or variable LAST to track the status.
UPDATE_STARTED=Updated the Application. Please refer to the returned WLSTProgress object or variable LAST to track the status.
Error_Distributing_App=Target exception thrown while distributing application: {0}
ERROR_DEPLOYING_APP=Target exception thrown while deploying application: {0}
EDIT_SESSION_IN_PROGRESS=You have an edit session in progress, hence WLST will not\n block for your {0} to complete.
APPLICATION_PATH_NOT_FOUND=No file or directory found at the specified application path: {0}
DeploymentFailed=Deployment Failed.
UnexpectedError=Unexpected Error: {0}
ActionTimedOut=The action you performed timed out after {0} milliseconds.
REDEPLOYING_APP=Redeploying application {0} ...
UNDEPLOYING_APP=Undeploying application {0} ...
UPDATING_APP=Updating application {0} ...
FAILED_TO_REDEPLOY_APP=Failed to redeploy the application with status {0}
COMPLETED_APP_REDEPLOY=Completed the redeployment of Application with status {0}
COMPLETED_APP_UPDATE=Completed the update of Application with status {0}
COMPLETED_APP_START=Completed the start of Application with status {0}
COMPLETED_APP_STOP=Completed the stop of Application with status {0}
COMPLETED_APP_UNDEPLOY=Completed the undeployment of Application with status {0}
Create_PlanTrue=createPlan is true and hence we will create a new plan.xml
Create_Plan_Macro_Error=Cannot create a plan because the plan path is a macro
Plan_Macro_Requires_Template_Error=Cannot use a macro for the plan path unless deploying to a resource group template
STARTING_APPLICATION=Starting application {0}.
STOPPING_APPLICATION=Stopping application {0}.
PLAN_PATH_NEEDED_TO_UPDATE=To update an application you will need to provide the \npath to the new deployment plan.
LOADING_CONFIGURATION=configToScript is loading configuration from {0} ...
CANNOT_LOCATE_CONFIG_Xml=Unable to locate the config.xml
IOExceptionLoadingConfig=IOException trying to load configuration.
Failed_ToLoad_Config_Xml=Failed to load configuration.
IOEXCEPTION_WRITING_DEPLOYMENT_SCRIPT=IOException while writing out deployment script: {0}
CONVERTING_RESOURCES=Completed configuration load, now converting resources to wlst script...
CONFIG_TO_SCRIPT_COMPLETE=configToScript completed successfully The WLST script is written to {0} and the properties file associated with this script is written to {1}
PASSWORD_DISCLAIMER=WLST found encrypted passwords in the domain configuration. \nThese passwords are stored encrypted in {0} \nand {1}. WLST will use these password values \nwhile the script is run.
BEAN_IS_A_CHILD=This bean {0} is a child.
BEAN_IS_DEFAULTED=This bean {0} is defaulted.
BEAN_IS_A_REFERENCE=This bean {0} is a reference.
EXCEPTION_WALKING_TREE=Exception occurred while walking the tree.
ContinueInBean=we are in a bean so continue
SCRIPT_ALREADY_EXISTS=A wlst script already exists at {0}
ERROR_FINDING_APP_BEAN=Error finding application MBean
ERROR_FINDING_PARENT=Error finding parent for {0}
ERROR_GETTING_BEAN_NAME=Error getting the name for bean {0}
ATTRIBUTE_SET=Attribute {0} is set for {1}
ERROR_MAKING_SET_BEANS=Error making set beans.
IOEXCEPTION_WRITING_FILE=Got IOException while writing {0}
FIND_BEAN_OF_TYPE=Finding MBean of type {0} in all the instances ...
NOW_FINDING=Now finding {0} in the MBean Types ...
FIND_BY_TYPE_RESULT_EMPTY=No results found in MBean Types
FIND_BY_INSTANCE_RESULT_EMPTY=No results found in MBean Instances
INVALID_USER_OR_PASSWORD=The username or password to connect to managed server are incorrect.
MALFORMED_MANAGED_SERVER_URL=The url for MS is malformed: {0}
NAMING_EXCEPTION=Got NamingException while looking up {0}
Current_Location_No_LongerE_xists=The ObjectName {0} for the current location {1} no longer exists. \nUse cd() to move to a different location.
Error_Retrieving_Attribute_Name_Value=Error while retrieving attribute names and values
ERROR_RETRIEVING_OPERATION_INFO=Error while retrieving the operation information.
AlreadyRecording=Already recording to {0}. \nIf you would like to start a new recording, stop the current recording.
OutputFileIsDir=The output file {0} is a directory. Please choose a file.
STARTED_RECORDING=Started recording to {0}
STOPPED_RECORDING=Stopped recording to {0}
NOT_RECORDING=There is no recording in progress.
ERROR_WHILE_RECORDING=Error while startRecording.
ERROR_WHILE_STOPPING_RECORDING=Error while stopping the recording.
ERROR_WRITING_COMMAND=Error while writing the command: {0}
WROTE_INI_FILE=The Ini file is successfully written to {0}
ERROR_WRITING_INI=Error while writing the wlst ini file.
NEED_WLS_OR_NM=You will need to be connected to a running WLS or Node Manager to execute this command
USERNAME_PASSWORD_STORED=The username and password that were used for this {0} connection are stored in {1} and {2}.
NoAttrDescription=No description available for attribute name {0}. \nThe attribute may not exist for the current cmo. \nUse ls(''a'') or ls(''o'') for available attributes and operations.
NoChildBeans=The MBean type {0} has no child MBeans.
UnsupportedCommand=The command {0} is not supported in this tree.
ErrorGettingMBeanInfo=Error retrieving MBeanInfo for {0}.
RequestedThreadDump=Requested Thread dump for the currently connected server
ThreadDumpNeedsConnection=\nCannot use threadDump on a server that you are \nnot currently connected to. You can only do this \nwhen you are connected to an Admin Server.\n
ThreadDumpServerNotRunning=Cannot get the Thread Dump for a server that is not running.\n
ThreadDumpHeader=\n####################################################### \nThread dump for the running server: {0} \nDumped this Thread at {1} \n#######################################################\n\n
ThreadDumpHeader2=Thread dump for the running server: {0}
ThreadDumpFooter=The Thread Dump for server {0} \nhas been successfully written to {1}
ThreadDumpFileError=IOException writing ThreadDump to file
CouldNotCreateParentDir=Unable to create parent directory for {0}.
OutputFileIsNull=Unable to start redirecting because no output file is provided.
AlreadyRedirecting=Cannot redirect output to {0}. \nWLST is already redirecting output to another file {1}.
RedirectFileNotFound=Could not find the file to redirect wlst output to: {0}
StopRedirect=WLST output will no longer be redirected to {0}.
NotRedirecting=Nothing to stop.
IOExceptionStoppingRedirect=IOException while closing the redirect file stream.
PathNotFound=WLST could not find the path to the MBean you specified.
ErrorGettingPath=Error getting the path.
LostConnection=WLST lost connection to the WebLogic Server that you were \nconnected to, this may happen if the server was shutdown or \npartitioned. You will have to re-connect to the server once the \nserver is available.
ConfigRuntimeServerNotEnabled=The Runtime MBeanServer is not enabled. You will need to enable it through the JMXMBean.
LocationChangedToConfigRuntime=Location changed to serverConfig tree. This is a read-only tree \nwith DomainMBean as the root. \nFor more help, use help(''serverConfig'')
AlreadyInConfigRuntime=Already in Config Runtime
ErrorTraversingToConfigRuntime=Error traversing to the Config Runtime Tree
RuntimeServerNotEnabled=Runtime Server is not enabled. You will need to enable it \nthrough the JMXMBean. To enable it, do the following, \nand re-boot your server \n cd(''/JMX/''+domainName) \n cmo.setRuntimeMBeanServerEnabled(1)
LocationChangedToServerRuntime=Location changed to serverRuntime tree. This is a read-only tree with ServerRuntimeMBean as the root. \nFor more help, use help(''serverRuntime'')
AlreadyInServerRuntime=Already in Server Runtime Tree
ErrorTraversingToServerRuntime=Error traversing to the Server Runtime Tree
DomainRuntimeNotAvailableOnMS=DomainRuntime MBeanServer is not enabled on a Managed Server.
DomainRuntimeServerNotEnabled=DomainRuntime Server is not enabled. You will need to enable it \nthrough the JMXMBean. To enable it, do the following, \nand re-boot your server \n cd(''/JMX/''+domainName) \n cmo.setDomainRuntimeMBeanServerEnabled(1)
LocationChangedToDomainConfig=Location changed to serverRuntime tree. This is a read-only tree with DomainMBean as the root. \nFor more help, use help(''domainConfig'')
LocationChangedToDomainRuntime=Location changed to domainRuntime tree. This is a read-only tree with DomainMBean as the root. \nFor more help, use help(''domainRuntime'')
AlreadyInDomainConfig=Already in Domain Config Tree
AlreadyInDomainRuntime=Already in Domain Runtime Tree
ErrorTraversingToDomainConfig=Error Traversing to the Domain Config Tree
ErrorTraversingToDomainRuntime=Error Traversing to the Domain Runtime Tree
EditNotAvailableOnMS=Edit MBeanServer is not enabled on a Managed Server.
EditServerNotEnabled=Edit Server is not enabled. You will need to enable it \nthrough the JMXMBean. To enable it, do the following, \nand re-boot your server \n cd(''/JMX/''+domainName) \n cmo.setEditMBeanServerEnabled(1)
LocationChangedToEdit=Location changed to edit tree. This is a writable tree with \nDomainMBean as the root. To make changes you will need to start \nan edit session via startEdit(). \n\nFor more help, use help(''edit'')
EditSessionInProgress=You already have an edit session in progress and hence WLST will \ncontinue with your edit session.
AlreadyInEdit=Already in Edit Tree
ErrorTraversingToEdit=Error Traversing to the Edit Tree
JSR77NotAvailableOnMS=JSR77 MBeanServer is not enabled on a Managed Server.
JSR77ServerNotEnabled=JSR77 Server is not enabled. You will need to enable it \nthrough the JMXMBean.
DefaultingNMUsername=Defaulting username to {0}
DefaultingNMPassword=Defaulting password to {0}
ConnectingToNodeManager=Connecting to Node Manager ...
ConnectedToNodeManager=Successfully Connected to Node Manager.
DisconnectedFromNodeManager=Successfully disconnected from Node Manager.
CouldNotConnectToNodeManager=Cannot connect to Node Manager.
CurrentlyConnectedNM=Currently connected to Node Manager to monitor the domain {0}.
NotConnectedNM=Not connected to Node Manager
NMVersion=The Node Manager version that you are currently connected to is {0}.
KillingServer=Killing server {0} ...
ErrorKillingServer=Error killing server {0}
KilledServer=Successfully killed server {0}
EnrollingMachineInDomain=Enrolling this machine with the domain directory at {0} ...
EnrolledMachineInDomain=Successfully enrolled this machine with the domain directory at {0}.
FailedToEnrolMachineInDomain=Problem enrolling the machine.
StartingServer=Starting server {0} ...
ErrorStartingServer=Error Starting server {0}: {1}
StartedServer=Successfully started server {0} ...
NullOrEmptyServerName=The provided server name is null or empty string.
NoServerOrCoherenceMBean=Could not lookup the ServerMBean or CoherenceServerMBean for {0}, the server with this name may not exist. Please verify.
GeneratedBootProperties=Successfully generated boot.properties at {0}.
ErrorSavingBootProperties=Error saving the startup.properties under nodemanager data directory.
GeneratedStartupProperties=Successfully generated startup.properties at {0}.
ErrorSavingStartupProperties=Error saving the startup.properties under nodemanager data directory.
ErrorGettingNMClient=Problem getting the NodeManagerClient.
ListenerAlreadyExists=Listener with name {0} already exists.
NoListenersConfigured=No listeners are configured.
NoPlanVariablesOverwritten=None of the plan variables have been over-written
PlanVariableOverwritten=The plan variable ''{0}'' has been set successfully to {1}
NoSuchPlanVariable=Could not find variable {0}
NoSuchModuleOverride=No ModuleOverride with name {0} available in the deployment plan.
NoModuleOverrides=No ModuleOverrides found in the current Deployment Plan
CreatingModuleDescriptor=Creating a ModuleDescriptor with uri {0} for ModuleOverride {1}.
CreatedModuleDescriptor=Created a ModuleDescriptor with uri {0} for ModuleOverride {1}.
DestroyedModuleOverride=Destroyed the ModuleOverride with name {0}.
CreatingVariableAssignment=Creating VariableAssignment for ModuleOverride {0} and ModuleDescriptor with URI {1}.
CreatedVariableAssignment=Created VariableAssignment with name {0} successfully.
ErrorCreatingVariableAssignment=Error creating VariableAssignment with name {0}
ErrorGetingVariableAssignment=Error getting VariableAssignment with name {0}
DestroyingVariableAssignment=Destroying VariableAssignment for ModuleOverride {0} and ModuleDescriptor with URI {1}.
CannotFindModuleDescriptor=Cannot find the ModuleDescriptor
DestroyedVariableAssignment=Destroyed VariableAssignment with name {0} successfully.
ErrorDestroyingVariableAssignment=Error destroying VariableAssignment with name {0}
ParentIsNotModuleOverride=Parent Bean is not a ModuleOverrideBean.
CouldNotGetDeployableObject=Could not get DeployableObject
CouldNotOpenDescriptorUri=Could not open {0}.
ErrorBuildingDConfigBean=Error Building DConfigBean: {0}
ModuleDescriptorBeanDoesNotExist=ModuleDescriptorBean does not exist for URI {0} and moduleOverride name {1}.
UnrecognizedOption=Warning: Unrecognized option {0} is being ignored
GROUP_OR_RES_NAME_NULL=The groupName or resourceBundleName must not be null
DUPLICATE_GROUP_NAME=Duplicate definition for group: {0}
ERROR_GETTING_RESOURCE_BUNDLE=Error getting resource bundle:
GROUP_NAME_NOT_EXIST=Group Name does not exist: {0}
DUPLICATE_COMMAND_NAME=Duplicate definition for command: {0}
NO_RESOURCE_FOUND_FOR_CMD=No resource found for {0}, key: {1}
NotConnectedAdminServer=Not connected to an Admin Server
PythonExecError=Error execing the Python script "{0}" caused an error "{1}"
PythonImportError=Error importing the Python script "{0}" caused an error "{1}"
UnsupportedServerType=Unsupported server type {0}
Inherited=Inherited
ErrorOccurred=Error occurred while performing {0} : {1}
ErrorOccurredUseDumpStack=Error occurred while performing {0} : {1} \nUse dumpStack() to view the full stacktrace :
UndoChanges=Sure you would like to undo your changes? (y/n)
StopChanges=Sure you would like to stop your edit session? (y/n)
CancelChanges=Sure you would like to cancel the edit session? (y/n)
UndoNotPerformed=undo is not performed
EditStopped=Edit session has been stopped successfully.
EditNotStopped=Your edit session is not stopped, you can continue your edits.
EditCancelled=Edit session is cancelled successfully.
LaunchingNodeManagerMessage=Launching NodeManager ...
NodeManagerAlreadyStarted=A Node Manager has already been started. \nCannot start another Node Manager process via WLST
LaunchedNodeManager=The Node Manager is launched. \nThe Node Manager process is running independent of the WLST process. \nExiting WLST will not stop the Node Manager process. Please refer to the Node Manager logs for more information. \nThe Node Manager logs will be under {0}
NotConfiguredWithDomain=The NodeManagerHome {0} from the startNodeManager() command is neither configured with a domain nor a valid nodemanager directory. Please note, if there is no NodeManagerHome parameter passed in to the startNodeManager() command, the NodeManagerHome is set to the current directory running WLST. Trying to start the Node Manager process using startNodeManager.sh|cmd script from the directory wlserver/server/bin.
CannotFindWLHOME=Unable to determine the directory wlserver/server/bin either from the system property weblogic.wlstHome or from the WLST classpath. Cannot start Node Manager.
WaitingForNodeManager=Waiting for Node Manager to start
ErrorStartingNodeManager=Problem starting Node Manager
ConnectionFailed=Connection Failed.
NodeManagerStarting=Launching Node Manager is completed.
NodeManagerStopped=Stopped Node Manager Process successfully
StopNodeManagerComplete=Stopping Node Manager process completed. For more details, check the Node Manager log under {0}
ErrorStoppingNodeManager=Cannnot stop Node Manager process
CanNotStopNodeManager=\nCannot stop the Node Manager unless you are connected to it.\n
ProblemStoppingNodeManager=Problem stopping the Node Manager.
RunningNMScriptMessage=Running {0} from the directory {1}
ExportedDiagnosticData=Exported diagnostic data to {0}
FormattedSystemResourceControlInfoHeader=External\tEnabled\t\tName \n--------\t-------\t\t------------------------------
FormattedSystemResourceControlInfo={1}\t\t{2}\t\t{0}
RetrievingImage=Retrieving {0} to local path {1}
RetrievingImageEntry=Retrieving entry {0} from {1} to local path {2}
CapturingImage=Capturing Image on the server
CapturedImage=Image Captured on the server
CaptureImageFromServer=Saving diagnostic image {0} from server {1} to {2}
CaptureImageEntryFromServer=Saving diagnostic image entry {0}/{1} from server {1} to {2}
CaptureImageFromServerPartition=Saving diagnostic image {0} from server {1} to {2} for partition {3}
CaptureImageEntryFromServerPartition=Saving diagnostic image entry {0}/{1} from server {1} to {2} for partition {3}
CaptureAndSaveImage=Capture and save diagnostics images
UnableToCreateDirectory=Unable to create directory {0}
AlreadyConnected=Already connected to a Node Manager
SystemComponentNotFound=Cannot find system-component entry for the domain "{0}"
ComponentNotFound=Cannot find System Component "{0}"
MachineNotFound=Cannot find machine for System Component "{0}"
ComponentTypeNotFound=Cannot find component type for the machine "{0}" for the System Component "{0}"
ThereIsNoCompConfDefined=There is no System Component Configuration defined with name "{0}"
StartingComponentInCompConf=\nStarting the following components in System Component Configuration "{0}" : {1}
ProblemStartingComponentConfiguration=Problem starting System Component Configuration "{0}"
CouldNotStartSystemComponent=Could not start System Component "{0}"
UnableStartSomeComps=Unable to start some of the components in the System Component Configuration "{0}".
NoComponentInComponentConfigurationStarted=None of the components in the System Component Configuration "{0}" could be started. Please check if the Node Manager is up and running. It could also be possible that the components are already running. Check the state of the components or System Component Configuration by using the state command.
AllCompsStartedSuccessfully=\nAll components in the System Component Configuration "{0}" are started successfully.
NoComponentConfigurationConfigured=No System Component Configuration with name "{0}" configured in the domain
CompsInConfiguration=\nThere are {0} component(s) in System Component Configuration "{1}"
StateOfComponents=\nStates of the components are
NotActiveComponents=\nThe other component(s) in the System Component Configuration that are not active are: \n {0}
getShutdownComponentConfiguration=Shutting down the System Component Configuration with name "{0}" ...
ShutdownCompConfRequiresName=Name required to shutdown a System Component Configuration
ErrorShuttingDownCompConf=Error while shutting down the System Component Configuration
CompConfShutdownIssued=Shutdown of System Component Configuration "{0}" has been issued, please \nrefer to the logs to check if the System Component Configuration shutdown is successful. \n Use the state(component-name) or state(component-configuration-name,''SystemComponentConfiguration'') \n to check the status of the component or component configuration
SoftRestartingComponentInCompConf=\nRestarting the following components in System Component Configuration "{0}" : {1}
ProblemSoftRestartingComponentConfiguration=Problem restarting System Component Configuration "{0}"
CouldNotSoftRestartSystemComponent=Could not restart System Component "{0}"
UnableSoftRestartSomeComps=Unable to restart some of the components in the System Component Configuration "{0}".
NoComponentInComponentConfigurationSoftRestarted=None of the components in the System Component Configuration "{0}" could be restarted. Please check if the Node Manager is up and running. It could also be possible that the components are already running. Check the state of the components or System Component Configuration by using the state command.
AllCompsSoftRestartedSuccessfully=\nAll components in the System Component Configuration "{0} "are restarted successfully.
ComponentConfigurationStartStatus=\nYou can call the getStatus(), getError(), getDescription() or isRunning() \nmethods on this variable to determine the status of your system component configuration start\n
SecurityConfigurationNotFound=Cannot find security-configuration for the domain "{0}";
AddressAndPortNotFound=Cannot find listen address and port for the Node Manager
UsernameAndPasswordNotFound=Cannot find username and password for the Node Manager
NMTypeNotFound=Cannot find NMType for the Node Manager
CanNotLoadProperties=Cannot use loadProperties while using wlst as a module
ImageCreated=Image created on the server {0}
ImageCaptureFailed=Image Capture Failed {0}
FindingNameInRegisteredInstances=Finding "{0}" in all registered MBean instances ...
FindingNameInMBeanTypes=\nNow finding "{0}" in all MBean Types that can be instantiated ...
NoResultsFound=No results found in MBean Types
ErrorRunningProcess=Error running the WLST process {0}
KillingProcess=Killing process {0}
ErrorGettingProcess=Error getting the process {0}
CurrentStatus=Current Status of your Deployment:
DeploymentCommandType=Deployment command type: {0}
DeploymentState=Deployment State : {0}
DeploymentNoMsg=Deployment Message : no message
DeploymentMsg=Deployment Message : {0}
FailedToGetValue=Error: Failed to get value from Standard Input: {0}
StartingServersInCluster=\nStarting the following servers in Cluster, {0} : {1}
AllServersStartedSuccessfully=\nAll servers in the cluster {0} are started successfully.
ServerStartStatusTask=\nThe server start status task for server {0} is assigned to variable {1}
ClusterStartStatus=\nYou can call the getStatus(), getError(), getDescription() or isRunning() \nmethods on these variables to determine the status of your cluster start\n
ServerNameStarted=\nServer with name {0} started successfully
ServerStartStatus=\nYou can call the getStatus(), getError(), getDescription() or isRunning() \nmethods on this variable to determine the status of your server start\n
NoUserOrPasswordBlocking=Username or password has not been specified. Without that information, \nWLST can not connect to the server to check for success. Instead, WLST will just block until the configured timeout of {0} minutes ...
UnexpectedExceptionRetrying=Unexpected Exception, retrying in 2 seconds
CouldNotConnectToServer=Could not connect to the server to verify that it has started. The error returned is: {0}
AttributeNamesAndValues=Attribute Names and Values\n--------------------------
OperationsOnThisMBean=------------------------\nOperations on this MBean\n------------------------
ErrorViewingTheMBean=Error viewing the MBean
ListenerFileNotLocated=File could not be located for listener {0}
CurrentStateOfServer=Current state of "{0}" : {1}
ErrorGettingServerState=Error getting the server state
NoServerWithName=No Server with name "{0}" configured in the domain
ShouldBeConnectedToAdminServer=You should be connected to an Administration Server to perform this action.
ServersInCluster=\nThere are {0} server(s) in cluster: {1}
StateOfServers=\nStates of the servers are
NotActiveServers=\nThe other server(s) in the cluster that are not active are: \n {0}
ServerResumedSuccessfully=Server {0} resumed successfully.\n
FailedToResume=Failed to resume the server {0} due to:\n {1}
ServerResumeTask=\nThe server resume task for server {0} \nis assigned to variable {1}
CallResumeStatus=\nYou can call the getStatus() or isRunning() or getError() \nmethods on this variable to determine the status \nof your server resume\n
ServerSuspendedSuccessfully=Server {0} suspended successfully.\n
FailedToSuspendServer=Failed to suspend the server {0} due to:\n {1}
ServerSuspendTask=\nThe server suspend task for server {0} \nis assigned to variable {1}
CallSuspendStatus=\nYou can call the getStatus(), getError(), getDescription() \nor isRunning() methods on this variable to determine \nthe status of your server suspend\n
StartingWLSServer=Starting weblogic server ...
ServerStartedSuccessfully=Server started successfully.
CheckServerOutput=Check server output to see if it started successfully.
CouldNotFindRuntimeMBean=Could not find the RuntimeMBean instance
ErrorPopulatingObjectNames=Error populating the object names
ErrorCheckingSlashes=Error while checking slashes in the MBean names
InvalidServerName=Invalid sever name: {0}
InvalidDomainRuntimeServiceAccess=Unable to find DomainRuntime service, typically this is caused by attempting to use the "Server" or "Target" argument on a Managed server instance.
RunningServerOrClusterNotFound=Server or cluster "{0}" does not exist or is not running.
DomainRuntimeServiceNotFound=Unable to find DomainRuntime service to look up server "{0}", typically this is caused by attempting to use the "Server" argument on a Managed server instance.
SystemResourceNotExist=System Resource {0} does not exist on server {1}
WarnSystemResourceNotExist=Warning: Ignoring system Resource {0} which does not exist on server {1}
SystemResourceExistsOnServers=System Resource {0} already exists on server(s) {1}
MergeDiagnosticDataNullInputDirName=No input directory specified containing diagnostic data files to merge.
MergeDiagnosticDataInputDirDoesNotExist=Input directory {0} does not exist or is not a directory.
MergeDiagnosticDataInvalidOutputFileName={0} is not a valid output file name.
MergeDiagnosticDataStart=Starting merge of data in {0}
MergeDiagnosticDataOpenFile=Reading file {0}
MergeDiagnosticDataBuildKeySet=Building aggregate metric key set...
MergeDiagnosticTotalMergedKeys=Total merged columns: {0}
MergeDiagnosticDataInvalidDataSet=File {0} does not have the minimum required columns
MergeDiagnosticDataUnexpectedFormat=Warning, data mismatch in file {0} one line {3}, expected {1} columns but found {2} \nValues: {4} \nSkipping line and continuing...
MergeDiagnosticDataFileError=Encountered an unexpected exception processing file {0}: {1}
MergeDiagnosticDataTimestampParseError=Error parsing timestamp, skipping input file {0}: {1}
MergeDiagnosticDataUnrecognizedFileFormat=Unrecognized format in input file {0}, skipping...
MergeDiagnosticDataInputFileNotFound=Input file {0} not found, skipping...
MergeDiagnosticDataComplete=Merge complete.
DumpDiagosticDataInstanceSetChanged=Detected change in collected metrics set, closing current file {0} and opening a new one ...
DumpDiagnosticDataNewCaptureFile=Opening new capture file {0} ...
DumpDiagonsticDataCaptureStart=Starting capture for resource {0} on server {1} at {2}ms for {3}ms to file {4}, output directory is {5}
DumpDiagnosticDataCaptureComplete=Diagnostic data capture complete.
ErrorDeterminingIfCreate=Error determining if creating an MBean is possible
ErrorGettingCreator=Error getting the creator/destroyer
ErrorGettingInterfaceClassName=Error getting the interfaceclassname
ErrorInScanningForAttrs=Error in scanning for attributes
ErrorGettingAttributes=Error getting the attributes for MBean
ErrorWalkingTheTree=Error walking the tree
ErrorFindingTheMBean=Error finding the MBean
ExceptionWalkingBean=%%%% an exception occurred while walking {0} ... {1}
HarvesterNotEnabled=N/A (Harvester Not Enabled)
ServerNotRunning=The server {0} is not running.
CanNotFindServerInstance=Cannot find the instance of Server {0}
ServerLifeCycledException=ServerLifeCycle Exception occurred.
CanNotFindClusterInstance=Cannot find the Instance of ClusterMBean
ErrorShuttingDownServer=Error shutting down the server
ProblemEnrollingMachine=Problem enrolling the machine.
ListenerName=Listener Name : {0}
MBeanChangedListener=MBean Changed : {0}
AttributeChanged=Attribute Changed: {0}
AttributeValueChanged=Attribute value changed from {0} to {1}
MBeanName=MBean Name : {0}
MBeanUnregistered=This MBean has been unregistered\n
ErrorAddingEditListener=Error adding edit change listener
ErrorAddingCompatibilityChangeListener=Error adding compatibility change listener
ErrorGettingMBeanInfoForMBean=Error getting the MBeanInfo for MBean
ErrorGettingCustomMBeans=Error getting the Custom MBeans
UnableToDetermineConfig=Unable to determine configuration format
ErrrorFileNameRequired=Error: The fileName attribute is required if no nested script is used.
ErrorFileNotExist=Error: File specified {0} does not exist.
AuthenticationFailed=Authentication Failed.
ErrorConnectingToServer=Error connecting to the server
UsernameOrPasswordIncorrect=The username or password supplied are incorrect. Please try again
URLIsMalformed=The url specified is malformed. Please correct it.
CanNotConnectViaHTTP=Cannot connect via http. Connecting through "http" will require you to enable "TunnellingEnabled" attribute on the ServerMBean to "true"
CanNotConnectViaSSL=Cannot connect via SSL. To connect via SSL, use the following two System properties as shown, java -Dweblogic.security.SSL.ignoreHostnameVerification=true -Dweblogic.security.TrustKeyStore=DemoTrust weblogic.WLST
CanNotConnectViaT3s=Cannot connect via t3s or https. If using demo certs, verify that the -Dweblogic.security.TrustKeyStore=DemoTrust system property is set.
ErrorGettingInitialContext=Error getting the initial context. There is no server running at {0}
ConnectToAdminServer=to Admin Server "{0}" that belongs to domain "{1}".
ConnectToManaged=to managed Server "{0}" that belongs to domain "{1}".
CouldNotStartServer=Could not start the server.
CouldNotStartServerTimeout=Could not start the server, the process might have timed out or there is an Error starting the server. Please refer to the log files for more details.
ErrorStartingServerJVM=Error starting the server. WLST could not start a new JVM for the server process, this might happen if you have provided illegal jvmArgs or the JVM picked up any illegal JVM_OPTIONS from your path. Please look for the correct error in your logs and try again.
RootDirectoryNotEmpty=The root directory specified {0} is not empty, if you would like to overwrite the directory contents, specify overWriteDir="true"
ServerLifecycleExceptionSuspend=Serverlifecycle exception occurred while suspending server {0}
ShouldBeConnectedToAdminSuspend=You should be connected to an admin server to suspend another server.
ServerLifecycleExceptionResume=Serverlifecycle exception occurred while resuming server {0}
ShouldBeConnectedToAdminResume=You should be connected to an admin server to resume another server.
NoClusterConfigured=No Cluster with name "{0}" configured in the domain
ErrorShuttingDownConnection=Error shutting down connection
ThereIsNoClusterDefined=There is no cluster defined with name "{0}"
ErrorShuttingDownCluster=Error while shutting down the cluster
ShouldBeConnectedToAdminStart=You should be connected to admin server to start a cluster.
ProblemStartingCluster=Problem starting cluster {0}
ErrorGettingStatusFromLifecycle=Error getting the status from the lifecycle bean
CouldNotStartServerName=Could not start server {0}
UnableStartSomeServers=Unable to start some of the servers in the cluster {0}. Please check if the Node Manager is up and running.
NoServersInClusterStarted=None of the servers in the cluster {0} could be started. Please check if the Node Manager is up and running. It could also be possible that the servers are already running. Check the state of the servers or cluster by using the state command.
ShouldBeConnectedAdminOrNM=You should be connected to an admin server or a NM to start a server
ServerIsAlreadyRunning=Server with name {0} is already running
UnableToLookupServerLifeCycle=Unable to lookup the ServerLifeCycleRuntimeMBean for server {0}
ServerFailedtoStart=Server with name {0} failed to be started
SecurityExceptionOccurred=Security Exception occurred.
ServerLifecycleException=ServerLifeCycle Exception occurred.
ErrorStartingServerPlain=Error starting the server
SpecifyCorrectEntityType=Please specify the right entity type ''Server'', ''Cluster'', ''SystemComponent'', or ''SystemComponentConfiguration''.
ShouldBeConnectedToAdminPerform=You should be connected to an Administration Server to perform this action.
RestartingServer=Restarting server {0} ...
ErrorRestartingServer=Error Restarting server {0}
RestartedServer=Successfully restarted server {0}
CurrentStateOfComponent=Current state of "{0}" : {1}
ErrorGettingComponentState=Error getting the system component state
NoComponentWithName=No system Component with name "{0}" configured in the domain
SHUTDOWN_COMPONENT=Shutting down the system component with name "{0}" ...
SHUTDOWN_COMPONENT_REQUIRES_NAME=Name required to shutdown a system component
ThereIsNoComponentDefined=There is no system component defined with name "{0}"
COMPONENT_SHUTDOWN_SUCCESS=System component with name "{0}" shutdown successfully
ErrorShuttingDownComponent=Error shutting down the system component
UnableToLookupComponentLifeCycle=Unable to lookup the SystemComponentLifeCycleRuntimeMBean for system component "{0}"
ComponentNameStarted=System component with name "{0}" started successfully
ComponentFailedtoStart=System component with name "{0}" failed to start : {1}
ComponentNotRunning=The system component "{0}" is not running.
CanNotFindComponentInstance=Cannot find the instance of system component "{0}"
COMPONENT_SHUTDOWN_TASK_AVAILABLE=\nThe system component shutdown task for system component "{0}" \nis assigned to variable {1} \nYou can call the getStatus(), getError(), getDescription() \nor isRunning() methods on this variable to determine \nthe status of your system component shutdown\n
ComponentStartStatusTask=\nThe system component start status task for system component "{0}" is assigned to variable {1}
ComponentStartStatus=\nYou can call the getStatus(), getError(), getDescription() or isRunning() \nmethods on this variable to determine the status of your system component start\n
ComponentLifecycleException=SystemComponentLifeCycle Exception occurred.
ErrorStartingComponentPlain=Error starting the system component
StartingComponent=Starting system component "{0}" ...
ChangesDeferred=The node manager for "{0}" is not reachable. Changes will be completed when the node manager is available.
ChangesDeferredError=The node manager error is: {0}
ValueNotObjectName=The value "{0}" is not a valid ObjectName.
NoElementWithName=No server, cluster, system component or system component configuration with name "{0}" configured in the domain
SOFT_RESTART_COMPONENT_REQUIRES_NAME=Name required to restart a system component
CANNOT_SOFT_RESTART_FROM_MANAGED=\nCannot restart a system component while connected to a managed server.\n
SOFT_RESTART_COMPONENT=Restarting the system component with name "{0}" ...
COMPONENT_SOFT_RESTART_TASK_AVAILABLE=\nThe system component restart task for system component "{0}" \nis assigned to variable {1} \nYou can call the getStatus(), getError(), getDescription() \nor isRunning() methods on this variable to determine \nthe status of your system component restart\n
COMPONENT_SOFT_RESTART_SUCCESS=System component with name "{0}" restarted successfully
ErrorSoftRestartingComponent=Error restarting the system component
ValueMustBeTrueOrFalse=The "{0}" parameter value must be either "true" or "false". Ignoring "{1}" and defaulting to false.
ValueMustBeTrueOrFalseDefaultTrue=The "{0}" parameter value must be either "true" or "false". Ignoring "{1}" and defaulting to true.
CannotLoadPropertiesInModule=Cannot use loadProperties while using wlst as a module
NotSupportedWhileConnected=This command is not supported while connected to a running server
NotSupportedWhenNotConnected=You will need to be connected to a running server to execute this command
StoppedDraining=Stopped draining {0}
NameHeader=Name
ValueHeader=Value
CouldNotDeployApp=Could not deploy application {0}
SettingAttributes=setting attributes for mbean type {0}
CreatingMBean=creating mbean of type {0} ...
ErrorFromNodeManager=Check that the Node Manager is available. Node Manager error
ReadingDomain=Reading domain from {0}
ServerDataAccessMsg=Getting diagnostic data from Server {0}.
PartitionDataAccessMsg=Getting diagnostic data from Server {0} for Partition {1}.
InvalidPartitionNameMsg=The partition name {0} is not valid.
InvalidLogicalNameMsg=The logical name {0} is not valid for data accessor.
WLDFModuleNameEmptyMsg=The WLDF Module name is empty.
DumpDiagonsticDataDateHeader=Date
DumpDiagonsticDataTimestampHeader=Timestamp

