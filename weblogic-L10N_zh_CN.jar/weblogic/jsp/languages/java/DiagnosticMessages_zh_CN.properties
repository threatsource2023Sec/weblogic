#
# Diagnostic Messages for the Java Language
#
# This is a Java property file used as a resource. See
# java.util.ResourceBundle,
# java.util.Properties,
# java.util.PropertyResourceBundle,
# java.text.MessageFormat, and
# java.util.Locale for more information on locales,
# property resources, and how to author the material in
# this file.
#
# Names should use the following convention:
# java.<major category>.<minor category>.<specific case>
# (Note that hyphens should be used to separate words within each section of the key.)
#

# TODO: This has to be in every language. Need some sort of way to ensure/simplify this...
javelin.ioexception = \u51FA\u73B0 I/O \u5F02\u5E38\u9519\u8BEF: ''{0}''

java.syntax = ''{0}'' \u9644\u8FD1\u5B58\u5728\u8BED\u6CD5\u9519\u8BEF
java.syntax.missing-token = \u8BED\u6CD5\u9519\u8BEF: \u5E94\u4E3A{0} (\u5374\u627E\u5230 ''{1}'')
java.syntax.unused-javadoc = \u5FFD\u7565 JavaDoc \u6CE8\u91CA
java.syntax.expression-expected = \u5E94\u4E3A\u8868\u8FBE\u5F0F (\u5374\u627E\u5230 ''{0}'')
java.syntax.identifier-expected = \u5E94\u4E3A\u6807\u8BC6\u7B26 (\u5374\u627E\u5230 ''{0}'')
java.syntax.type-expected = \u5E94\u4E3A\u7C7B\u578B (\u5374\u627E\u5230 ''{0}'')
java.syntax.invalid-lhs = \u5DE6\u8868\u8FBE\u5F0F\u4E0D\u53EF\u5206\u914D
java.syntax.invalid-local-modifier = \u4FEE\u9970\u7B26\u5BF9\u4E8E\u672C\u5730\u7C7B\u58F0\u660E\u65E0\u6548
java.syntax.pointless-try = ''try'' \u8BED\u53E5\u65E2\u65E0 ''catch'' \u5B50\u53E5, \u4E5F\u65E0 ''finally'' \u5B50\u53E5
java.syntax.missing-if = ''else'' \u6CA1\u6709\u76F8\u5E94\u7684 ''if'' (\u6216\u62EC\u53F7\u4E0D\u5339\u914D)
java.syntax.identifier-keyword-conflict = {0}\u4E3A\u5173\u952E\u5B57, \u4E0D\u80FD\u7528\u4F5C\u6807\u8BC6\u7B26\u3002
java.syntax.malformed-else = ''else'' \u540E\u9762\u5FC5\u987B\u4E3A\u8BED\u53E5
java.syntax.inserting-right-brace = \u7F3A\u5C11\u7ED3\u675F\u5757\u7684\u53F3\u62EC\u53F7
java.syntax.extra-right-brace-detected = \u62EC\u53F7\u6570\u4E0D\u5339\u914D\u3002
java.syntax.type-parameter.not-allowed = \u4E0D\u5141\u8BB8\u4F7F\u7528\u7C7B\u578B\u53C2\u6570\u3002
java.syntax.type-argument.not-allowed = \u4E0D\u5141\u8BB8\u4F7F\u7528\u7C7B\u578B\u53C2\u6570\u3002
java.syntax.missing-return-type = \u7F3A\u5C11\u65B9\u6CD5\u58F0\u660E\u7684\u8FD4\u56DE\u7C7B\u578B\u3002
java.syntax.block-too-deeply-nested = \u5BF9\u8BED\u6CD5\u5206\u6790\u5668\u6765\u8BF4\u6587\u4EF6\u5D4C\u5957\u592A\u6DF1\u3002

# TODO (twagner): The following is just blindly copied from v8, and needs to be checked/vetted
# against the source code.

java.long.overflow = \u6B64\u6587\u5B57\u592A\u5927, \u4E0D\u7B26\u5408 long \u7C7B\u578B\u3002
java.int.overflow = \u6B64\u6587\u5B57\u592A\u5927, \u4E0D\u7B26\u5408 int \u7C7B\u578B\u3002
java.double.infinite = \u6B64\u6587\u5B57\u592A\u5927, \u5728 double \u7C7B\u578B\u4E2D\u65E0\u6CD5\u7CBE\u786E\u5B58\u50A8\u3002
java.double.overflow = \u6B64\u6587\u5B57\u592A\u5927, \u5728 double \u7C7B\u578B\u4E2D\u65E0\u6CD5\u7CBE\u786E\u5B58\u50A8\u3002
java.double.zero = \u6B64\u6587\u5B57\u592A\u5C0F, \u5728 double \u7C7B\u578B\u4E2D\u65E0\u6CD5\u7CBE\u786E\u5B58\u50A8\u3002
java.float.infinite = \u6B64\u6587\u5B57\u592A\u5927, \u5728 float \u7C7B\u578B\u4E2D\u65E0\u6CD5\u7CBE\u786E\u5B58\u50A8\u3002
java.float.overflow = \u6B64\u6587\u5B57\u592A\u5927, \u5728 float \u7C7B\u578B\u4E2D\u65E0\u6CD5\u7CBE\u786E\u5B58\u50A8\u3002
java.float.zero = \u6B64\u6587\u5B57\u592A\u5C0F, \u5728 float \u7C7B\u578B\u4E2D\u65E0\u6CD5\u7CBE\u786E\u5B58\u50A8\u3002

java.escape.illegal = \u672A\u77E5\u8F6C\u4E49\u4EE3\u7801\u3002

# This is a warning
java.constant.eval-error = \u5C1D\u8BD5\u8BA1\u7B97\u6B64\u5E38\u91CF\u65F6\u9047\u5230\u4E86\u5F02\u5E38\u9519\u8BEF: {0}

java.constant.cycle = \u8BA1\u7B97\u6B64\u5E38\u91CF\u65F6\u68C0\u6D4B\u5230\u5FAA\u73AF\u4F9D\u8D56\u5173\u7CFB\u3002

java.break.illegal-context = \u4E0D\u5E26\u6807\u7B7E\u7684 break \u8BED\u53E5\u53EA\u80FD\u5728 for, while, do \u6216 switch \u8BED\u53E5\u7684\u5185\u90E8\u4F7F\u7528\u3002

java.continue.illegal-context = \u4E0D\u5E26\u6807\u7B7E\u7684 continue \u8BED\u53E5\u53EA\u80FD\u5728 for, while \u6216 do \u8BED\u53E5\u7684\u5185\u90E8\u4F7F\u7528\u3002

java.continue.illegal-statement = \u5E26\u6807\u7B7E\u7684 continue \u8BED\u53E5\u53EA\u80FD\u5B9A\u4F4D\u5230\u5E26\u6807\u7B7E\u7684 for, while \u6216 do \u8BED\u53E5\u3002

java.label.not-found = \u5177\u6709\u6B64\u540D\u79F0\u7684\u6807\u7B7E\u5728\u6B64\u4F4D\u7F6E\u90FD\u4E0D\u53EF\u89C1\u3002

java.throw.not-handled = \u6B64\u8868\u8FBE\u5F0F\u53EF\u4EE5\u5F15\u53D1\u5F02\u5E38\u9519\u8BEF{0}, \u8BE5\u5F02\u5E38\u9519\u8BEF\u4E0D\u80FD\u88AB\u4EFB\u4F55\u7ED3\u675F try \u8BED\u53E5\u6355\u83B7, \u5E76\u4E14\u5728\u6B64\u65B9\u6CD5, \u6784\u9020\u5668\u6216\u521D\u59CB\u5316\u5668\u5757\u4E2D\u4E0D\u5141\u8BB8\u51FA\u73B0\u8BE5\u5F02\u5E38\u9519\u8BEF\u3002

java.loop.final-assignment = \u5728\u6B64\u5FAA\u73AF\u4E2D\u68C0\u6D4B\u5230\u4E3A final \u53D8\u91CF\u5206\u914D\u7684\u884C\u4E3A\u3002\u8FD9\u4F1A\u5141\u8BB8\u4E3A\u53D8\u91CF\u591A\u6B21\u5206\u914D\u3002

java.modifier.duplicate = \u6B64\u4FEE\u9970\u7B26\u662F\u91CD\u590D\u7684\u3002

java.modifier.conflict.access = \u53EA\u80FD\u5217\u51FA\u4E00\u79CD\u7C7B\u578B\u7684\u8BBF\u95EE (public, private \u6216 protected)\u3002

java.modifier.conflict.abstract-final = \u4EFB\u4F55\u65E2\u4E3A abstract \u53C8\u4E3A final \u7684\u6210\u5458\u90FD\u662F\u975E\u6CD5\u7684\u3002

java.field.modifiers.illegal = \u4E0D\u80FD\u5C06\u5B57\u6BB5\u58F0\u660E\u4E3A synchronized, abstract \u6216 native\u3002

java.field.volatile.modifiers.illegal = \u4E0D\u80FD\u5C06 volatile \u5B57\u6BB5\u58F0\u660E\u4E3A final\u3002

java.method.modifiers.illegal = \u4E0D\u80FD\u5C06\u65B9\u6CD5\u58F0\u660E\u4E3A transient \u6216 volatile\u3002

java.method.abstract.modifiers.illegal = \u4E0D\u80FD\u5C06 abstract \u65B9\u6CD5\u58F0\u660E\u4E3A private, static, synchronized, native \u6216 strictfp\u3002

java.method.native.modifiers.illegal = \u4E0D\u80FD\u5C06 native \u65B9\u6CD5\u58F0\u660E\u4E3A strictfp\u3002

java.constructor.modifiers.illegal = \u4E0D\u80FD\u5C06\u6784\u9020\u5668\u58F0\u660E\u4E3A abstract, static, final, native, synchronized, transient, volatile \u6216 strictfp\u3002

java.class.illegal-modifiers = \u4E0D\u80FD\u5C06\u7C7B\u58F0\u660E\u4E3A transient, volatile, native \u6216 synchronized\u3002

java.enum.illegal-modifiers = \u4E0D\u80FD\u5C06\u679A\u4E3E\u58F0\u660E\u4E3A abstract, final, transient, volatile, native \u6216 synchronized\u3002

java.enum.constructor.illegal-access = \u975E\u6CD5\u7684\u8BBF\u95EE\u4FEE\u9970\u7B26\u3002

java.interface.illegal-modifiers = \u4E0D\u80FD\u5C06\u63A5\u53E3\u58F0\u660E\u4E3A final, transient, volatile, native \u6216 synchronized\u3002

java.interface.members.illegal-access = \u63A5\u53E3\u6210\u5458\u59CB\u7EC8\u4E3A public\u3002\u4E0D\u80FD\u5C06\u5B83\u4EEC\u58F0\u660E\u4E3A protected \u6216 private\u3002

java.interface.members.field.illegal-modifier = \u4E0D\u80FD\u5C06\u63A5\u53E3\u5B57\u6BB5\u58F0\u660E\u4E3A abstract, transient, volatile, strictfp, native \u6216 synchronized\u3002

java.interface.members.method.illegal-modifier = \u4E0D\u80FD\u5C06\u63A5\u53E3\u65B9\u6CD5\u58F0\u660E\u4E3A static, final, transient, volatile, strictfp, native \u6216 synchronized\u3002

java.cast.not-type-name = \u8F6C\u6362\u8868\u8FBE\u5F0F\u4E2D\u62EC\u53F7\u5185\u7684\u8868\u8FBE\u5F0F\u5FC5\u987B\u5305\u542B\u7C7B\u578B\u540D\u3002

java.type.name-in-use.class = \u5177\u6709\u6B64\u540D\u79F0\u7684\u7C7B\u5728\u6587\u4EF6{0}\u7684\u6B64\u9879\u76EE\u4E2D\u5DF2\u5B9A\u4E49\u3002

java.import.name-in-use.import = \u5177\u6709\u6B64\u540D\u79F0\u7684\u7C7B\u578B\u5DF2\u5BFC\u5165\u3002

java.import.name-in-use.field = \u6B64\u5B57\u6BB5\u5728\u5355\u4E2A static import \u58F0\u660E\u4E2D\u5DF2\u5B9A\u4E49\u3002

java.import.name-in-use.type = \u5177\u6709\u6B64\u540D\u79F0\u7684\u7C7B\u578B\u5728\u8BE5\u6587\u4EF6\u4E2D\u5DF2\u5B9A\u4E49\u3002

java.import.inner-class.inherited = \u65E0\u6CD5\u5BFC\u5165\u7EE7\u627F\u7684\u5185\u90E8\u7C7B\u3002

java.static-import.not-found = \u5728\u7C7B{0}\u4E2D\u627E\u4E0D\u5230\u9759\u6001\u7B26\u53F7{1}\u3002

java.inner-class.member.static-type = \u975E\u9759\u6001\u5185\u90E8\u7C7B\u65E0\u6CD5\u58F0\u660E static \u7C7B\u578B\u6210\u5458\u3002

java.inner-class.member.static-field = \u975E\u9759\u6001\u5185\u90E8\u7C7B\u65E0\u6CD5\u58F0\u660E static \u5B57\u6BB5\u3002

java.inner-class.member.static-method = \u975E\u9759\u6001\u5185\u90E8\u7C7B\u65E0\u6CD5\u58F0\u660E static \u65B9\u6CD5\u3002

java.inner-class.member.static-initializer = \u975E\u9759\u6001\u5185\u90E8\u7C7B\u65E0\u6CD5\u58F0\u660E static \u521D\u59CB\u5316\u5668\u3002

java.constructor-call.cycle = \u5728\u6B64\u7C7B\u7684\u6784\u9020\u5668\u7684\u5907\u7528\u6784\u9020\u5668\u8C03\u7528\u8BED\u53E5\u4E2D\u53D1\u73B0\u5FAA\u73AF\u3002

java.blank-final.static.not-initialized = \u7A7A\u767D final \u5B57\u6BB5{0}\u58F0\u660E\u4E3A static, \u5FC5\u987B\u5728\u4E0A\u4E00\u4E2A\u9759\u6001\u521D\u59CB\u5316\u5668\u7ED3\u675F\u4E4B\u524D\u8FDB\u884C\u521D\u59CB\u5316\u3002

java.blank-final.non-static.not-initialized = \u7A7A\u767D final \u5B57\u6BB5{0}\u5FC5\u987B\u5728\u6240\u6709\u6784\u9020\u5668\u7ED3\u675F\u4E4B\u524D\u8FDB\u884C\u521D\u59CB\u5316\u3002

java.method.body.unexpected = abstract \u548C native \u65B9\u6CD5\u4E0D\u80FD\u6709\u4E3B\u4F53\u3002

java.method.body.missing = \u65B9\u6CD5\u5FC5\u987B\u6709\u4E3B\u4F53, \u9664\u975E\u5B83\u4EEC\u4E3A abstract \u6216 native\u3002

java.method.no-return = \u7F3A\u5C11\u8FD4\u56DE\u8BED\u53E5\u3002

java.constructor.wrong-name = \u7F3A\u5C11\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B, \u6216\u6784\u9020\u5668\u58F0\u660E\u7684\u540D\u79F0\u4E0E\u7C7B\u540D\u4E0D\u5339\u914D\u3002

java.initializer.cannot-complete-normally = \u65E0\u6CD5\u6B63\u5E38\u5B8C\u6210\u6B64\u521D\u59CB\u5316\u5668\u3002

java.block.unreachable = \u6267\u884C\u671F\u95F4\u65E0\u6CD5\u8BBF\u95EE\u6B64\u5757\u3002

java.statement.unreachable = \u6267\u884C\u671F\u95F4\u65E0\u6CD5\u8BBF\u95EE\u6B64\u8BED\u53E5\u3002

java.intializer.not-array = \u6B64\u521D\u59CB\u5316\u5668\u8868\u8FBE\u5F0F\u9700\u8981\u4E00\u4E2A\u6570\u7EC4\u3002

java.label.name-in-use = \u5728\u6B64\u4F4D\u7F6E\u5DF2\u5B58\u5728\u540C\u540D\u6807\u7B7E\u3002

java.if-else.condition-not-boolean = \u5FC5\u987B\u5C06 if \u8BED\u53E5\u7684\u6761\u4EF6\u8BA1\u7B97\u4E3A\u5E03\u5C14\u503C\u3002

java.while.condition-not-boolean = \u5FC5\u987B\u5C06 while \u8BED\u53E5\u7684\u6761\u4EF6\u8BA1\u7B97\u4E3A\u5E03\u5C14\u503C\u3002

java.do-while.condition-not-boolean = \u5FC5\u987B\u5C06 do \u8BED\u53E5\u7684\u6761\u4EF6\u8BA1\u7B97\u4E3A\u5E03\u5C14\u503C\u3002

java.for.condition-not-boolean = \u5FC5\u987B\u5C06 for \u8BED\u53E5\u7684\u6761\u4EF6\u8BA1\u7B97\u4E3A\u5E03\u5C14\u503C\u3002

java.enhanced-for.condition-type = foreach \u8BED\u53E5\u4E0D\u9002\u7528\u4E8E\u8868\u8FBE\u5F0F\u7C7B\u578B\u3002

java.assert.condition-not-boolean = \u5FC5\u987B\u5C06 assert \u8BED\u53E5\u7684\u6761\u4EF6\u8BA1\u7B97\u4E3A\u5E03\u5C14\u503C\u3002

java.assert.detail-void = assert \u8BED\u53E5\u7684\u6D88\u606F\u8868\u8FBE\u5F0F\u53EF\u4EE5\u4E3A\u9664 void \u4E4B\u5916\u7684\u4EFB\u4F55\u7C7B\u578B\u3002

java.switch.expr.bad-type = switch \u8868\u8FBE\u5F0F\u5FC5\u987B\u4E3A byte, char, short, int \u6216 enum\u3002

java.switch.multiple-default = \u6B64 switch \u8BED\u53E5\u4E2D\u5DF2\u58F0\u660E\u9ED8\u8BA4\u6807\u7B7E\u3002

java.switch.case.not-convertable = \u6B64 case \u7684\u503C\u65E0\u6CD5\u8F6C\u6362\u4E3A switch \u8868\u8FBE\u5F0F\u7684\u7C7B\u578B\u3002

java.switch.case.not-constant = \u6B64 case \u7684\u503C\u5FC5\u987B\u4E3A\u7F16\u8BD1\u65F6\u53EF\u4EE5\u786E\u5B9A\u7684\u5E38\u91CF\u3002

java.switch.case.not-enum-constant = \u6B64 case \u7684\u503C\u5FC5\u987B\u4E3A\u6CA1\u6709\u9650\u5B9A\u7684\u679A\u4E3E\u5E38\u91CF\u3002

java.switch.case.value-repeated = \u503C ''{0}'' \u5DF2\u7531\u6B64 switch \u8BED\u53E5\u7684\u5176\u4ED6 case \u6807\u7B7E\u4F7F\u7528\u3002

java.return.unexpected = \u521D\u59CB\u5316\u5668\u4E2D\u4E0D\u5141\u8BB8\u4F7F\u7528 return \u8BED\u53E5\u3002

java.return.argument.unexpected = \u65E0\u6CD5\u4ECE\u6784\u9020\u5668\u6216 void \u65B9\u6CD5\u8FD4\u56DE\u503C\u3002

java.return.argument.not-convertable = \u6B64\u8868\u8FBE\u5F0F\u7684\u503C\u65E0\u6CD5\u8F6C\u6362\u4E3A\u8BE5\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B\u3002

java.return.argument.missing = \u5FC5\u987B\u4ECE\u975E void \u65B9\u6CD5\u4E3A\u8FD4\u56DE\u63D0\u4F9B\u503C\u3002

java.throw.not-reference-type = \u65E0\u6CD5\u5F15\u53D1\u57FA\u5143\u7C7B\u578B\u3002

java.throw.not-throwable = \u53EA\u80FD\u5F15\u53D1\u53EF\u8F6C\u6362\u4E3A java.lang.Throwable \u7684\u5BF9\u8C61\u3002

java.synchronized.not-reference-type = \u65E0\u6CD5\u5BF9\u57FA\u5143\u7C7B\u578B\u8FDB\u884C\u540C\u6B65\u3002

java.catch.not-reference-type = \u65E0\u6CD5\u6355\u83B7\u57FA\u5143\u7C7B\u578B\u3002

java.catch.not-throwable = catch \u53C2\u6570\u7684\u7C7B\u578B\u5FC5\u987B\u53EF\u4EE5\u8F6C\u6362\u4E3A java.lang.Throwable\u3002

java.catch.empty-try-checked = \u65E0\u6CD5\u8BBF\u95EE\u6B64\u53D7\u63A7\u5F02\u5E38\u9519\u8BEF\u6355\u83B7\u7A0B\u5E8F, \u56E0\u4E3A\u76F8\u5E94\u7684 try \u5757\u4E3A\u7A7A\u3002

java.catch.empty-try-unchecked = \u65E0\u6CD5\u8BBF\u95EE\u6B64\u4E0D\u53D7\u63A7\u5F02\u5E38\u9519\u8BEF\u6355\u83B7\u7A0B\u5E8F, \u56E0\u4E3A\u76F8\u5E94\u7684 try \u5757\u4E3A\u7A7A\u3002

java.catch.not-reachable = \u65E0\u6CD5\u8BBF\u95EE\u6B64\u6355\u83B7\u7A0B\u5E8F, \u56E0\u4E3A\u76F8\u5E94\u7684 try \u5757\u6CA1\u6709\u5728\u6B64\u5904\u5F15\u53D1\u4EFB\u4F55\u53EF\u6355\u83B7\u7684\u4E8B\u4EF6\u3002

java.resolve.package.not-exists = \u6B64\u9879\u76EE\u4E2D\u4E0D\u5B58\u5728\u4EFB\u4F55\u5177\u6709\u6B64\u540D\u79F0\u7684\u5305\u3002

java.resolve.package-or-type.not-exists = \u5728\u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u4EFB\u4F55\u5177\u6709\u6B64\u540D\u79F0\u7684\u5305\u6216\u7C7B\u578B\u3002

java.resolve.type.not-exists = \u5728\u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u4EFB\u4F55\u5177\u6709\u6B64\u540D\u79F0\u7684\u7C7B\u578B\u3002

java.resolved.namedtype.not-exists = \u627E\u4E0D\u5230\u7C7B\u578B{0}\u3002

java.resolve.variable.not-exists = \u5728\u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u4EFB\u4F55\u5177\u6709\u6B64\u540D\u79F0\u7684\u53D8\u91CF\u6216\u5B57\u6BB5\u3002

java.resolve.variable.not-static = \u65E0\u6CD5\u4ECE static \u4E0A\u4E0B\u6587\u8BBF\u95EE\u6B64\u53D8\u91CF\u6216\u5B57\u6BB5\u3002

java.resolve.type.not-static = \u65E0\u6CD5\u4ECE static \u4E0A\u4E0B\u6587\u5F15\u7528\u6B64\u7C7B\u578B\u3002

java.resolve.method.not-exists = \u5728\u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u4EFB\u4F55\u5177\u6709\u6B64\u540D\u79F0\u7684\u65B9\u6CD5\u3002

java.resolve.method.not-static = \u65E0\u6CD5\u4ECE static \u4E0A\u4E0B\u6587\u8BBF\u95EE\u6B64\u65B9\u6CD5\u3002

java.resolve.ambiguous.not-exists = \u5728\u6B64\u4F4D\u7F6E\u627E\u4E0D\u5230\u4EFB\u4F55\u5177\u6709\u6B64\u540D\u79F0\u7684\u53D8\u91CF, \u5B57\u6BB5, \u7C7B\u578B\u6216\u5305\u3002

java.package.not-exists = \u5305{0}\u4E0D\u5B58\u5728\u3002

java.member-package.not-exists = \u5305{0}\u4E0D\u5305\u542B\u6B64\u540D\u79F0\u7684\u6210\u5458\u5305\u3002

java.member-type.not-exists = \u7C7B\u578B{0}\u4E0D\u5305\u542B\u540D\u4E3A{1}\u7684\u6210\u5458\u7C7B\u578B\u3002

java.member-package-or-type.not-exists = \u5305{0}\u4E0D\u5305\u542B\u6B64\u540D\u79F0\u7684\u6210\u5458\u5305\u6216\u6210\u5458\u7C7B\u578B\u3002

java.package-member-type.not-exists = \u5305{0}\u4E0D\u5305\u542B\u6B64\u540D\u79F0\u7684\u6210\u5458\u7C7B\u578B\u3002

java.expression.package-qualifier = \u6B64\u540D\u79F0\u7684\u9650\u5B9A\u7B26\u4E3A\u5305, \u8BE5\u5305\u4E0D\u80FD\u5305\u542B\u5B57\u6BB5\u3002

java.expression.not-reference-type = \u6B64\u540D\u79F0\u7684\u9650\u5B9A\u7B26\u4E3A\u57FA\u5143\u7C7B\u578B, \u8BE5\u7C7B\u578B\u4E0D\u80FD\u6709\u5B57\u6BB5\u3002

java.method.package-qualifier = \u6B64\u540D\u79F0\u7684\u9650\u5B9A\u7B26\u4E3A\u5305, \u8BE5\u5305\u4E0D\u80FD\u5305\u542B\u65B9\u6CD5\u3002

java.method.not-reference-type = \u6B64\u540D\u79F0\u7684\u9650\u5B9A\u7B26\u4E3A\u57FA\u5143\u7C7B\u578B, \u8BE5\u7C7B\u578B\u4E0D\u80FD\u6709\u65B9\u6CD5\u3002

java.ambiguous.not-reference-type = \u6B64\u540D\u79F0\u7684\u9650\u5B9A\u7B26\u4E3A\u57FA\u5143\u7C7B\u578B, \u8BE5\u7C7B\u578B\u4E0D\u80FD\u6709\u5B57\u6BB5\u3002

java.type.not-exists = \u5728\u7C7B\u6216\u6E90\u8DEF\u5F84\u4E2D\u627E\u4E0D\u5230\u7C7B\u578B{0}\u3002

java.type.inaccessible = \u4ECE\u6B64\u4F4D\u7F6E\u65E0\u6CD5\u8BBF\u95EE\u7C7B\u578B{0}\u3002

java.type.ambiguous = \u7C7B\u578B{0}\u5305\u542B\u591A\u4E2A\u5177\u6709\u6B64\u540D\u79F0\u7684\u53EF\u8BBF\u95EE\u6210\u5458\u7C7B\u578B\u3002

java.type.field.not-exists = \u7C7B\u578B{0}\u4E0D\u5305\u542B\u5177\u6709\u6B64\u540D\u79F0\u7684\u5B57\u6BB5\u3002

java.use.deprecated = {0}\u4F7F\u7528\u6216\u5F15\u7528\u4E86\u5DF2\u5E9F\u5F03\u7684 API\u3002\u8BF7\u4F7F\u7528 -Xlint:deprecation \u91CD\u65B0\u7F16\u8BD1\u4EE5\u4E86\u89E3\u8BE6\u7EC6\u4FE1\u606F\u3002

java.warn.deprecation-field.use.deprecated-directly = \u7C7B{1}\u4E2D\u7684\u5B57\u6BB5{0}\u5DF2\u5E9F\u5F03\u3002

java.warn.deprecation-method.use.deprecated-directly = \u7C7B{1}\u4E2D\u7684\u65B9\u6CD5{0}\u5DF2\u5E9F\u5F03\u3002

java.warn.deprecation-constructor.use.deprecated-directly = \u7C7B{1}\u4E2D\u7684\u6784\u9020\u5668{0}\u5DF2\u5E9F\u5F03\u3002

java.warn.deprecation-constructor.use.deprecated-by-class = \u8C03\u7528\u5DF2\u5E9F\u5F03\u7684\u7C7B{1}\u4E2D\u7684\u6784\u9020\u5668{0}\u3002

java.warn.deprecation-class.decl.deprecated-superclass = \u7C7B{0}\u6269\u5C55\u5DF2\u5E9F\u5F03\u7684\u7C7B{1}\u3002

java.warn.deprecation-class.decl.deprecated-superinterface = \u7C7B{0}\u6269\u5C55\u5DF2\u5E9F\u5F03\u7684\u63A5\u53E3{1}\u3002

java.warn.deprecation-class.use.deprecated = \u7C7B{0}\u5DF2\u5E9F\u5F03\u3002

java.type.method.not-exists = \u7C7B\u578B{0}\u4E0D\u5305\u542B\u540D\u4E3A{1}\u7684\u65B9\u6CD5\u3002

java.type.ambiguous-member.not-exists = \u7C7B\u578B{0}\u4E0D\u5305\u542B\u5177\u6709\u6B64\u540D\u79F0\u7684\u5B57\u6BB5\u6216\u7C7B\u578B\u3002

java.expression.member.not-static = \u65E0\u6CD5\u4ECE static \u4E0A\u4E0B\u6587\u8BBF\u95EE\u6B64\u5B57\u6BB5\u3002

java.expression.field.inaccessible = \u65E0\u6CD5\u8BBF\u95EE{0}\u7C7B\u578B\u7684\u6B64\u5B57\u6BB5\u3002

java.expression.method.inaccessible = \u65E0\u6CD5\u8BBF\u95EE{0}\u7C7B\u578B\u7684\u6B64\u65B9\u6CD5\u3002

java.expression.field.ambiguous = \u7C7B\u578B{0}\u5305\u542B\u591A\u4E2A\u5177\u6709\u6B64\u540D\u79F0\u7684\u53EF\u8BBF\u95EE\u5B57\u6BB5\u3002

java.expression.method.ambiguous = \u7C7B\u578B{0}\u5305\u542B\u591A\u4E2A\u5177\u6709\u6B64\u540D\u79F0\u7684\u53EF\u8BBF\u95EE\u65B9\u6CD5\u3002

java.type.inner.illegal-dollar = \u5F15\u7528\u5728\u6E90\u6587\u4EF6\u4E2D\u4F7F\u7528 ''$'' \u5B9A\u4E49\u7684\u5185\u90E8\u7C7B\u578B\u662F\u975E\u6CD5\u7684\u3002

java.class-instance-creation.not-reference-type = \u65E0\u6CD5\u4F7F\u7528\u65B0\u5173\u952E\u5B57\u5C06\u57FA\u5143\u7C7B\u578B\u5B9E\u4F8B\u5316\u3002

java.class-instance-creation.abstract = \u6B64\u7C7B\u578B\u4E3A\u62BD\u8C61\u7C7B\u578B, \u56E0\u6B64\u65E0\u6CD5\u5C06\u5176\u5B9E\u4F8B\u5316\u3002

java.class-instance-creation.enum = \u65E0\u6CD5\u5C06\u679A\u4E3E\u7C7B\u578B\u5B9E\u4F8B\u5316\u3002

java.method-call.non-reference = \u53EA\u6709\u5BF9\u8C61\u5177\u6709\u53EF\u4EE5\u4F7F\u7528 ''.'' \u8C03\u7528\u7684\u65B9\u6CD5\u3002

java.method-call.no-super = \u6B64\u7C7B\u578B\u6CA1\u6709\u8D85\u7C7B\u3002

java.method-call.super.abstract = \u6B64\u65B9\u6CD5\u4E3A\u62BD\u8C61\u65B9\u6CD5, \u56E0\u6B64\u65E0\u6CD5\u8FDB\u884C\u8C03\u7528\u3002

java.constructor-call.qualifier.unexpected = \u4E0D\u9700\u8981\u4EFB\u4F55\u9650\u5B9A\u7B26, \u56E0\u4E3A\u7C7B\u578B{0}\u4E0D\u662F (\u975E\u9759\u6001) \u5185\u90E8\u7C7B\u3002

java.constructor-call.qualifier.not-subclass = \u7C7B\u578B{1}\u4E0D\u662F{0}\u7684\u5916\u90E8\u7C7B\u578B{2}\u7684\u5B50\u7C7B\u3002

java.constructor-call.qualifier.missing = \u7C7B\u578B{0}\u4E3A\u9700\u8981\u7C7B\u578B{1}\u7684\u7ED3\u675F\u5B9E\u4F8B\u6216\u5B50\u7C7B\u7684\u975E\u9759\u6001\u5185\u90E8\u7C7B\u3002

java.outer-this.static = \u7C7B\u578B{0}\u4E3A\u9700\u8981\u7C7B\u578B{1}\u7684\u7ED3\u675F\u5B9E\u4F8B\u6216\u5B50\u7C7B\u7684 (\u975E\u9759\u6001) \u5185\u90E8\u7C7B\u3002\u6B64\u4F4D\u7F6E\u4EE5\u7C7B\u578B{2}\u8FDB\u884C\u5D4C\u5957, \u8BE5\u7C7B\u578B\u5373\u4E3A\u8FD9\u6837\u7684\u5B50\u7C7B; \u4F46\u662F, \u4E0D\u53EF\u4EE5\u4ECE\u6B64\u79CD static \u4E0A\u4E0B\u6587\u5F15\u7528\u8BE5\u7C7B\u578B\u3002

java.method-call.no-match = \u5728\u7C7B\u578B{0}\u4E2D\u627E\u4E0D\u5230\u65B9\u6CD5{1}\u7684\u5339\u914D\u9879\u3002

java.method-call.no-match-access = \u7C7B\u578B{0}\u4E2D\u7F3A\u5C11\u65B9\u6CD5{1}\u6216\u4ECE\u6B64\u4F4D\u7F6E\u65E0\u6CD5\u8BBF\u95EE\u3002

java.constructor-call.no-match = \u5728\u7C7B\u578B{0}\u4E2D\u627E\u4E0D\u5230\u6784\u9020\u5668{1}\u7684\u5339\u914D\u9879\u3002

java.constructor-call.no-match-access = \u7C7B\u578B{0}\u4E2D\u7F3A\u5C11\u65B9\u6CD5{1}\u6216\u4ECE\u6B64\u4F4D\u7F6E\u65E0\u6CD5\u8BBF\u95EE\u3002

java.method-call.ambiguous = \u4E0D\u660E\u786E\u7684{0}\u8C03\u7528, {2}\u4E2D\u7684{1}\u548C{4}\u4E2D\u7684{3}\u90FD\u5339\u914D\u3002

java.array-access.not-array = ''[..]'' \u8FD0\u7B97\u7B26\u53EA\u80FD\u5E94\u7528\u4E8E\u6570\u7EC4\u7C7B\u578B\u3002

java.casting.bad-conversion = \u65E0\u6CD5\u4ECE{0}\u8F6C\u6362\u4E3A{1}\u3002

java.operator.unary.not-convertible = \u6B64\u8FD0\u7B97\u7B26\u65E0\u6CD5\u5E94\u7528\u4E8E{0}\u3002

java.operator.binary.not-convertible = \u6B64\u8FD0\u7B97\u7B26\u65E0\u6CD5\u5E94\u7528\u4E8E{0}, {1}\u3002

java.operator.binary.bad-equality = \u7C7B\u578B{0}\u548C{1}\u65E0\u6CD5\u8FDB\u884C\u6BD4\u8F83\u3002

java.types.inconvertible = \u4E0D\u53EF\u8F6C\u6362\u7684\u7C7B\u578B\u3002\u627E\u5230{0}, \u9700\u8981{1}\u3002

java.operator.shift-eq.not-primitive = \u6B64\u5206\u914D\u8FD0\u7B97\u7B26\u53EA\u80FD\u5E94\u7528\u4E8E\u57FA\u5143\u6574\u6570\u7C7B\u578B\u3002

java.assignment.not-convertable = \u6B64\u5206\u914D\u64CD\u4F5C\u6570\u7684\u7C7B\u578B\u4E0D\u53EF\u8FDB\u884C\u5206\u914D\u8F6C\u6362\u3002

java.foreach.not-convertable = \u65E0\u6CD5\u5C06\u8868\u8FBE\u5F0F\u5206\u914D\u7ED9\u6240\u9700\u7C7B\u578B\u3002

java.instanceof.not-reference = instanceof \u8FD0\u7B97\u7B26\u53EA\u80FD\u5E94\u7528\u4E8E\u5F15\u7528\u7C7B\u578B\u3002

java.type.not-reifiable = \u975E\u6CD5\u7684\u4E00\u822C\u7C7B\u578B\u3002

java.operator.increment.not-variable = \u5DE6\u64CD\u4F5C\u6570\u5FC5\u987B\u4E3A\u53D8\u91CF, \u800C\u4E0D\u662F\u503C\u3002

java.conditional.first-not-boolean = \u6761\u4EF6\u8FD0\u7B97\u7B26\u7684\u7B2C\u4E00\u4E2A\u64CD\u4F5C\u6570\u5FC5\u987B\u8BA1\u7B97\u4E3A\u5E03\u5C14\u503C\u3002

java.conditional.void-type = \u6761\u4EF6\u8FD0\u7B97\u7B26\u7684\u7B2C\u4E8C\u4E2A\u548C\u7B2C\u4E09\u4E2A\u64CD\u4F5C\u6570\u4E0D\u80FD\u4E3A void \u7C7B\u578B\u3002

java.conditional.bad-types = \u6761\u4EF6\u8FD0\u7B97\u7B26\u7684\u7B2C\u4E8C\u4E2A\u548C\u7B2C\u4E09\u4E2A\u64CD\u4F5C\u6570\u5FC5\u987B\u4E3A\u57FA\u5143\u6570\u5B57\u7C7B\u578B, \u5E03\u5C14\u7C7B\u578B\u6216\u5F15\u7528\u7C7B\u578B\u3002

java.field-reference.final-assignment = \u6B64\u5B57\u6BB5\u4E3A final \u7C7B\u578B, \u4E0D\u80FD\u5728\u6B64\u4F4D\u7F6E\u8FDB\u884C\u5206\u914D\u3002

java.variable-reference.final-assignment = \u6B64\u53D8\u91CF\u4E3A final \u7C7B\u578B, \u4E0D\u80FD\u5728\u6B64\u4F4D\u7F6E\u8FDB\u884C\u5206\u914D\u3002

java.variable-reference.non-local.not-final = \u5FC5\u987B\u5C06\u672C\u5730\u53D8\u91CF\u6216\u53C2\u6570\u58F0\u660E\u4E3A final, \u4EE5\u4FBF\u4ECE\u672C\u5730\u7C7B\u6216\u533F\u540D\u7C7B\u5BF9\u5176\u8FDB\u884C\u8BBF\u95EE\u3002

java.field-reference.illegal-forward = \u65E0\u6CD5\u5728\u6B64\u4F4D\u7F6E\u5F15\u7528\u6B64\u5B57\u6BB5, \u56E0\u4E3A\u6B64\u5B57\u6BB5\u662F\u5728\u6587\u4EF6\u7684\u540E\u9762\u5B9A\u4E49\u7684\u3002

java.variable.not-definitely-assigned = \u5728\u6B64\u4F4D\u7F6E\u6B64\u53D8\u91CF\u53EF\u80FD\u8FD8\u672A\u8FDB\u884C\u5206\u914D\u3002

java.parameter.not-definitely-unassigned = \u6B64\u53C2\u6570\u4E3A final \u7C7B\u578B, \u4E0D\u80FD\u8FDB\u884C\u5206\u914D\u3002

java.local-variable.not-definitely-unassigned = \u6B64\u53D8\u91CF\u4E3A final \u7C7B\u578B, \u4E0D\u80FD\u91CD\u65B0\u8FDB\u884C\u5206\u914D\u3002

java.field.in-method.not-definitely-unassigned = \u6B64\u5B57\u6BB5\u4E3A final \u7C7B\u578B, \u4E0D\u80FD\u4ECE\u65B9\u6CD5\u8FDB\u884C\u5206\u914D\u3002

java.field.in-constructor.not-definitely-unassigned = \u6B64\u5B57\u6BB5\u4E3A final \u7C7B\u578B, \u4E0D\u80FD\u4ECE\u6784\u9020\u5668\u8FDB\u884C\u5206\u914D\u3002

java.variable.not-definitely-unassigned = \u6B64\u53D8\u91CF\u5148\u524D\u53EF\u80FD\u5DF2\u7ECF\u5206\u914D\u8FC7, \u4E0D\u80FD\u5BF9 final \u53D8\u91CF\u5206\u914D\u4E24\u6B21\u3002

java.variable.name-in-use = \u5728\u6B64\u4F4D\u7F6E\u5DF2\u5B58\u5728\u540C\u540D\u53D8\u91CF\u3002

java.local-class.name-in-use = \u5728\u6B64\u4F4D\u7F6E\u5DF2\u5B58\u5728\u540C\u540D\u672C\u5730\u7C7B\u3002

java.class-name.not-outer = \u6CA1\u6709\u5177\u6709\u6B64\u540D\u79F0\u7684\u7C7B\u5305\u542B\u5F53\u524D\u4F4D\u7F6E\u3002

java.super-expression.static = ''super'' \u5173\u952E\u5B57\u4E0D\u80FD\u7528\u4E8E static \u4E0A\u4E0B\u6587\u4E2D\u3002

java.this-expression.static = ''this'' \u5173\u952E\u5B57\u4E0D\u80FD\u7528\u4E8E static \u4E0A\u4E0B\u6587\u4E2D\u3002

java.class.top-level.access = \u4E0D\u80FD\u5C06\u9876\u7EA7\u7C7B\u58F0\u660E\u4E3A protected \u6216 private\u3002

java.class.top-level.static = \u9876\u7EA7\u7C7B\u90FD\u4E3A\u9690\u5F0F static, \u4F46\u4E0D\u80FD\u5C06\u5176\u663E\u5F0F\u58F0\u660E\u4E3A static\u3002

java.expected-type.wrong-id = \u5728\u6B64\u6587\u4EF6\u4E2D\u5B9A\u4E49\u7684 public \u9876\u7EA7\u7C7B\u578B ''{0}'' \u7684\u540D\u79F0\u4E0E\u6587\u4EF6 ''{1}'' \u7684\u540D\u79F0\u4E0D\u5339\u914D\u3002

java.expected-type.wrong-package = \u6B64\u7C7B\u578B\u7684\u5305\u4E0E\u5176\u6E90\u8DEF\u5F84\u4E0A\u7684\u4F4D\u7F6E\u4E0D\u5339\u914D: {0}\u3002

java.type.superclass.not-class = \u8D85\u7C7B\u5FC5\u987B\u4E3A\u7C7B, \u800C\u4E0D\u662F\u63A5\u53E3\u3002

java.type.superclass.throwable=\u4E00\u822C\u7C7B\u4E0D\u80FD\u6269\u5C55 java.lang.Throwable\u3002

java.type.super-interface.not-interface = \u5217\u51FA\u7684\u63A5\u53E3\u5FC5\u987B\u4E3A\u63A5\u53E3, \u800C\u4E0D\u662F\u7C7B\u3002

java.type.super-interface.duplicate = \u5DF2\u5217\u51FA\u6B64\u63A5\u53E3\u3002

java.type.super.self = \u7C7B\u6216\u63A5\u53E3\u4E0D\u80FD\u6269\u5C55\u6216\u5B9E\u65BD\u5176\u81EA\u8EAB\u3002

java.member.type.name-in-use = \u5177\u6709\u6B64\u540D\u79F0\u7684\u7C7B\u578B\u5728\u6B64\u7C7B\u578B\u4E2D\u5DF2\u58F0\u660E\u3002

java.member.type.name-in-use.outer = \u6210\u5458\u7C7B\u578B\u4E0D\u80FD\u4E0E\u4EFB\u4F55\u7ED3\u675F\u7C7B\u578B\u540C\u540D\u3002

java.inner-class.member.interface = \u975E\u9759\u6001\u5185\u90E8\u7C7B\u4E0D\u80FD\u62E5\u6709\u4F5C\u4E3A\u6210\u5458\u7684\u63A5\u53E3\u3002

java.member.field.name-in-use = \u5177\u6709\u6B64\u540D\u79F0\u7684\u5B57\u6BB5\u5728\u6B64\u7C7B\u578B\u4E2D\u5DF2\u58F0\u660E\u3002

java.member.method.name-in-use = \u5177\u6709\u6B64\u7B7E\u540D\u7684\u65B9\u6CD5\u5728\u6B64\u7C7B\u578B\u4E2D\u5DF2\u58F0\u660E\u3002

java.member.method.erasure-clash = \u540D\u79F0\u51B2\u7A81: {0}\u548C{1}\u8FDB\u884C\u540C\u4E00\u64E6\u9664\u64CD\u4F5C\u3002

java.member.constructor.name-in-use = \u5177\u6709\u6B64\u7B7E\u540D\u7684\u6784\u9020\u5668\u5728\u6B64\u7C7B\u4E2D\u5DF2\u58F0\u660E\u3002

java.member.method.throws.not-class = \u53EA\u80FD\u5C06\u7C7B\u4F5C\u4E3A\u5F02\u5E38\u9519\u8BEF\u5F15\u53D1; \u4E0D\u80FD\u5F15\u53D1\u63A5\u53E3\u3002

java.member.method.throws.not-throwable = \u53EA\u80FD\u5C06 java.lang.Throwable \u53CA\u5176\u5B50\u7C7B\u4F5C\u4E3A\u5F02\u5E38\u9519\u8BEF\u5F15\u53D1\u3002

java.token.illegal = \u6B64\u5B57\u7B26\u4E0D\u662F\u5408\u6CD5 Java \u6807\u8BB0\u7684\u4E00\u90E8\u5206\u3002

java.long-comment.unterminated = \u5F00\u5934\u4E3A ''/*'' \u7684\u6CE8\u91CA\u7ED3\u5C3E\u5FC5\u987B\u4E3A ''*/''\u3002

java.short-comment.unterminated = \u5F00\u5934\u4E3A ''//'' \u7684\u6CE8\u91CA\u7ED3\u5C3E\u5FC5\u987B\u4E3A\u4E00\u4E2A\u65B0\u884C\u3002

java.character.empty = \u5FC5\u987B\u5728\u5F15\u53F7\u5185\u63D0\u4F9B\u5B57\u7B26\u3002

java.character.unterminated = \u5B57\u7B26\u6587\u5B57\u7531\u4E00\u4E2A\u5B57\u7B26\u6216\u4E00\u4E2A\u5916\u9762\u5E26\u5F15\u53F7\u7684\u8F6C\u4E49\u5E8F\u5217\u7EC4\u6210\u3002

java.string.unterminated = \u5FC5\u987B\u4F7F\u7528\u4E0E\u8D77\u59CB\u5904\u4F4D\u4E8E\u540C\u4E00\u884C\u7684\u53F3\u5F15\u53F7\u7ED3\u675F\u5B57\u7B26\u4E32\u3002

java.character.malformed-octal-escape \u5728\u5B57\u7B26\u6587\u5B57\u4E2D\u51FA\u73B0\u683C\u5F0F\u4E0D\u6B63\u786E\u7684\u516B\u8FDB\u5236\u8F6C\u4E49\u7B26\u6216\u610F\u5916\u7684\u5B57\u7B26\u3002

java.character.malformed \u5B57\u7B26\u6587\u5B57\u7684\u683C\u5F0F\u4E0D\u6B63\u786E (\u53EA\u80FD\u63D0\u4F9B\u4E00\u4E2A\u5B57\u7B26\u503C)\u3002

java.string.malformed-octal-escape \u5B57\u7B26\u4E32\u6587\u5B57\u4E2D\u7684\u516B\u8FDB\u5236\u8F6C\u4E49\u7B26\u7684\u683C\u5F0F\u4E0D\u6B63\u786E\u3002

java.hex-literal.empty = \u5728\u521D\u59CB\u7684 0x \u540E\u5FC5\u987B\u63D0\u4F9B\u5341\u516D\u8FDB\u5236\u503C\u3002

java.fp-literal.empty-exponent = \u6D6E\u70B9\u6587\u5B57\u7684\u6307\u6570\u5FC5\u987B\u4E3A\u6574\u6570\u503C\u3002

java.hexadecimal-fp-literal.missing-exponent = \u5341\u516D\u8FDB\u5236\u6D6E\u70B9\u6587\u5B57\u8981\u6C42\u4F7F\u7528\u6307\u6570\u3002

java.hexadecimal-fp-literal.malformed = \u5341\u516D\u8FDB\u5236\u6D6E\u70B9\u6587\u5B57\u7F3A\u5C11\u6574\u6570\u5143\u7D20\u548C\u5C0F\u6570\u5143\u7D20\u3002

java.octal-literal.malformed = \u4E0D\u6B63\u786E\u7684\u516B\u8FDB\u5236\u503C - \u6240\u6709\u6570\u5B57\u5FC5\u987B\u90FD\u5728 [0-7] \u7684\u8303\u56F4\u5185\u3002

java.unicode.format = Unicode \u8F6C\u4E49\u5E8F\u5217\u5FC5\u987B\u6709\u56DB\u4E2A\u5341\u516D\u8FDB\u5236\u6570\u5B57\u3002

java.lexical.high-surrogate-character-in-identifier = \u5728\u6CA1\u6709\u76F8\u5E94\u4F4E\u4EE3\u7406\u7684\u6807\u8BC6\u7B26\u4E2D\u68C0\u6D4B\u5230\u4E86\u9AD8\u4EE3\u7406 Unicode \u5B57\u7B26\u3002

java.lexical.low-surrogate-character-in-identifier = \u5728\u6CA1\u6709\u76F8\u5E94\u9AD8\u4EE3\u7406\u7684\u6807\u8BC6\u7B26\u4E2D\u68C0\u6D4B\u5230\u4E86\u4F4E\u4EE3\u7406 Unicode \u5B57\u7B26\u3002

java.lexical.high-surrogate-character = \u6CA1\u6709\u76F8\u5E94\u4F4E\u4EE3\u7406\u7684\u9AD8\u4EE3\u7406 Unicode \u5B57\u7B26\u3002

java.lexical.low-surrogate-character = \u6CA1\u6709\u76F8\u5E94\u9AD8\u4EE3\u7406\u7684\u4F4E\u4EE3\u7406 Unicode \u5B57\u7B26\u3002

java.lexical.invalid-surrogate-pair-in-identifier = \u6807\u8BC6\u7B26\u5305\u542B\u65E0\u6548\u4EE3\u7801\u70B9 (\u9AD8/\u4F4E UTF-16 \u5BF9)\u3002

java.import.ambiguous = \u6B64\u7C7B\u578B\u540D\u4E0D\u660E\u786E, \u56E0\u4E3A\u5B83\u4E0E\u591A\u4E2A ''*''-import \u5339\u914D, \u5176\u4E2D\u5305\u62EC ''{0}'' \u548C ''{1}''\u3002

java.statement.expression = \u5C06\u8868\u8FBE\u5F0F\u4F5C\u4E3A\u8BED\u53E5\u4F7F\u7528\u975E\u6CD5\u3002
java.statement.no-condition = \u5FC5\u987B\u5728\u62EC\u53F7\u4E2D\u63D0\u4F9B\u6761\u4EF6\u3002

java.array-creation.bad = \u5B9E\u4F8B\u5316\u7C7B\u578B\u540D\u540E\u9762\u5FC5\u987B\u4E3A\u65B9\u62EC\u53F7\u6216\u5706\u62EC\u53F7\u3002

java.array.bad-dimension = \u6570\u7EC4\u7EF4\u6570\u7684\u7C7B\u578B\u5FC5\u987B\u53EF\u4EE5\u8F6C\u6362\u4E3A int\u3002

java.annotations.method.illegal-param = \u6279\u6CE8\u65B9\u6CD5\u4E00\u5B9A\u4E0D\u80FD\u6709\u4EFB\u4F55\u53C2\u6570\u3002

java.annotations.method.illegal-throws = \u6279\u6CE8\u65B9\u6CD5\u4E00\u5B9A\u4E0D\u80FD\u6709 throws \u5B50\u53E5\u3002

java.annotations.illegal-extends = \u6279\u6CE8\u58F0\u660E\u4E0D\u80FD\u6269\u5C55\u5176\u4ED6\u63A5\u53E3\u3002

java.annotations.value.not-convertible = \u6B64\u6279\u6CE8\u503C\u4E0D\u80FD\u8F6C\u6362\u4E3A\u6279\u6CE8\u6210\u5458\u58F0\u660E\u7684\u7C7B\u578B\u3002

java.annotations.value.not-constant = \u6B64\u6279\u6CE8\u6210\u5458\u7684\u503C\u5FC5\u987B\u4E3A\u7F16\u8BD1\u65F6\u5E38\u91CF\u3002

java.annotations.class-value.not-literal = \u6B64\u503C\u5FC5\u987B\u4E3A\u7C7B\u6587\u5B57\u8868\u8FBE\u5F0F\u3002

java.annotations.value.missing = \u5FC5\u987B\u4E3A\u6210\u5458 ''{0}'' \u63D0\u4F9B\u503C\u3002

java.annotations.no-such-member = \u6279\u6CE8\u7C7B\u578B{0}\u4E0D\u5305\u542B\u540D\u4E3A{1}\u7684\u6210\u5458\u3002

java.annotations.duplicate-annotation = \u6B64\u58F0\u660E\u5DF2\u7ECF\u5177\u6709\u7C7B\u578B ''{0}'' \u7684\u6279\u6CE8\u3002

java.annotations.duplicate-member = \u6B64\u6279\u6CE8\u5DF2\u7ECF\u4E3A\u6210\u5458 ''{0}'' \u6307\u5B9A\u503C\u3002

java.annotations.not-annotation-type = \u6B64\u7C7B\u578B\u4E0D\u662F\u6279\u6CE8\u7C7B\u578B\u3002

java.annotations.method.bad-return-type = \u6279\u6CE8\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u4E3A\u57FA\u5143\u7C7B\u578B, \u679A\u4E3E\u7C7B\u578B, \u6279\u6CE8\u7C7B\u578B, \u5B57\u7B26\u4E32\u6216\u7C7B\u3002

java.annotations.invalid-target=\u6B64\u6279\u6CE8\u7C7B\u578B\u5BF9\u6B64\u5143\u7D20\u7C7B\u578B\u65E0\u6548\u3002
java.annotations.repeated-target=\u76EE\u6807\u6279\u6CE8\u4E2D\u91CD\u590D\u7684 ElementType \u5E38\u91CF\u3002
java.annotations.cycle=\u975E\u6CD5\u7684\u6279\u6CE8\u5FAA\u73AF\u3002

java.expected-type.missing = \u7531\u4E8E\u6B64\u6587\u4EF6\u5728\u7C7B\u6216\u6E90\u8DEF\u5F84\u4E0A\u7684\u4F4D\u7F6E, \u5B83\u5E94\u5B9A\u4E49\u540D\u4E3A{0}\u7684\u7C7B\u578B\u3002

java.class.superclass.final = \u4E3A\u6B64\u7C7B\u578B\u6240\u5217\u7684\u8D85\u7C7B\u4E3A final, \u4E0D\u80FD\u4ECE\u4E2D\u8FDB\u884C\u6D3E\u751F\u3002

java.depend.cycle = \u5305\u542B\u6B64\u5B9E\u4F53\u65F6\u68C0\u6D4B\u5230\u5FAA\u73AF\u4F9D\u8D56\u5173\u7CFB\u3002

java.class.abstract.cannot-implement = \u6B64\u7C7B\u7684\u8D85\u7C7B\u6216\u63A5\u53E3\u5B9A\u4E49\u4E86\u56E0\u4ECE\u6B64\u4F4D\u7F6E\u65E0\u6CD5\u5BF9\u5B83\u4EEC\u8FDB\u884C\u8BBF\u95EE\u800C\u4E0D\u80FD\u7EE7\u627F\u7684\u62BD\u8C61\u65B9\u6CD5, \u4F46\u662F\u8FD9\u4E9B\u65B9\u6CD5\u4ECD\u7136\u4F1A\u963B\u6B62\u6B64\u7C7B\u6210\u4E3A\u975E\u62BD\u8C61\u7C7B\u3002

java.class.abstract.method-cannot-implement = \u6B64\u7C7B\u578B\u7684\u8D85\u7C7B\u6216\u63A5\u53E3\u5B9A\u4E49\u4E86\u5728\u6B64\u5904\u65E0\u6CD5\u8BBF\u95EE\u7684\u62BD\u8C61\u65B9\u6CD5{0}, \u8BE5\u65B9\u6CD5\u4E0D\u80FD\u7EE7\u627F, \u56E0\u6B64\u4E5F\u5C31\u6C38\u8FDC\u65E0\u6CD5\u5B9E\u65BD\u3002

java.class.abstract.method-not-implemented = \u6B64\u7C7B\u6CA1\u6709\u5B9E\u65BD\u62BD\u8C61\u65B9\u6CD5{0}\u3002

java.member.method.final-override = \u6B64\u65B9\u6CD5\u5C1D\u8BD5\u8986\u76D6\u58F0\u660E\u4E3A final \u7684{1}\u4E2D\u7684{0}\u3002

java.member.method.static-conflict = \u6B64\u65B9\u6CD5\u5C1D\u8BD5\u8986\u76D6\u5728\u9759\u6001\u65B9\u9762\u5B58\u5728\u4E0D\u540C\u7684{1}\u4E2D\u7684{0}\u3002

java.member.method.static-implementer = \u6B64\u65B9\u6CD5\u5C1D\u8BD5\u5B9E\u65BD\u9759\u6001\u7684{1}\u4E2D\u7684{0}\u3002

java.member.method.return-type-conflict = \u6B64\u65B9\u6CD5\u5C1D\u8BD5\u8986\u76D6\u5E26\u6709\u8FD4\u56DE\u7C7B\u578B\u51B2\u7A81\u7684{1}\u4E2D\u7684{0}\u3002

java.member.method.erasure-conflict=\u6B64\u65B9\u6CD5\u548C{1}\u4E2D\u7684\u65B9\u6CD5{0}\u5177\u6709\u540C\u4E00\u64E6\u9664\u64CD\u4F5C, \u4E24\u8005\u90FD\u5C1A\u4E0D\u80FD\u8986\u76D6\u53E6\u4E00\u4E2A\u3002

java.member.method.access-conflict = \u6B64\u65B9\u6CD5\u5C1D\u8BD5\u8986\u76D6\u5177\u6709\u8F83\u5F31\u8BBF\u95EE\u9650\u5236\u7684{1}\u4E2D\u7684{0}\u3002

java.member.method.throws-conflict = \u6B64\u65B9\u6CD5\u5C1D\u8BD5\u8986\u76D6\u4E0D\u5305\u62EC\u6B64\u5904\u6240\u5217\u6240\u6709\u53EF\u80FD\u5F02\u5E38\u9519\u8BEF\u7684{1}\u4E2D\u7684{0}\u3002

java.member.method.static-conflict.inherited = {1}\u4E2D\u7684\u65B9\u6CD5{0}\u548C{3}\u4E2D\u7684\u65B9\u6CD5{2}\u5177\u6709\u51B2\u7A81\u7684\u9759\u6001\u6027\u3002

java.member.method.static-implementer.inherited = {1}\u4E2D\u7684\u65B9\u6CD5{0}\u5C1D\u8BD5\u5B9E\u65BD{3}\u4E2D\u7684\u62BD\u8C61\u65B9\u6CD5{2}, \u4F46\u4E0D\u80FD\u5B9E\u65BD, \u56E0\u4E3A\u5B83\u662F\u9759\u6001\u7684\u3002

java.member.method.return-type-conflict.inherited = {1}\u4E2D\u7684\u65B9\u6CD5{0}\u548C{3}\u4E2D\u7684\u65B9\u6CD5{2}\u5177\u6709\u51B2\u7A81\u7684\u8FD4\u56DE\u7C7B\u578B\u3002

java.member.method.erasure-conflict.inherited={1}\u4E2D\u7684\u65B9\u6CD5{0}\u548C{3}\u4E2D\u7684\u65B9\u6CD5{2}\u5177\u6709\u540C\u4E00\u64E6\u9664\u64CD\u4F5C, \u4F46\u662F\u4E24\u8005\u90FD\u4E0D\u80FD\u8986\u76D6\u53E6\u4E00\u4E2A\u3002

java.member.method.multiple-inherited-methods={1}\u4E2D\u7684\u65B9\u6CD5{0}\u548C{3}\u4E2D\u7684\u65B9\u6CD5{2}\u662F\u4F7F\u7528\u540C\u4E00\u7B7E\u540D\u7EE7\u627F\u7684\u3002

java.member.method.access-conflict.inherited = {1}\u4E2D\u7684\u65B9\u6CD5{0}\u548C{3}\u4E2D\u7684\u65B9\u6CD5{2}\u5177\u6709\u51B2\u7A81\u7684\u8BBF\u95EE\u9650\u5236\u3002

java.member.method.throws-conflict.inherited = {1}\u4E2D\u7684\u65B9\u6CD5{0}\u548C{3}\u4E2D\u7684\u65B9\u6CD5{2}\u5177\u6709\u51B2\u7A81\u7684 throws \u5B50\u53E5\u3002

java.warn.unchecked-return.inherited = \u6B64\u7C7B\u578B\u7EE7\u627F\u4E86\u4E24\u4E2A\u7248\u672C\u7684\u65B9\u6CD5{1}, \u4E00\u4E2A\u662F\u4ECE{2}\u7EE7\u627F\u7684, \u53E6\u4E00\u4E2A\u662F\u4ECE{3}\u7EE7\u627F\u7684; \u8FD4\u56DE\u7C7B\u578B\u9700\u8981 unchecked \u8F6C\u6362\u3002

java.class.resolve.ioerror = \u4E0D\u80FD\u4ECE{0}\u52A0\u8F7D\u6B64\u7C7B\u3002\u539F\u56E0: {1}\u3002

java.class.resolve.notfound = \u627E\u4E0D\u5230\u7C7B{0}\u3002

java.class.annotation.with-enum = \u7C7B{0}\u5177\u6709\u7C7B\u578B{1}\u7684\u6279\u6CE8\u3002\u6B64\u6279\u6CE8\u7C7B\u578B\u5177\u6709\u679A\u4E3E\u6210\u5458\u3002\u8FD9\u4E00\u70B9\u5F53\u524D\u672A\u83B7\u652F\u6301, \u6B64\u6279\u6CE8\u88AB\u5FFD\u7565\u3002

java.pkg.name.collision = \u5177\u6709\u540C\u540D\u7C7B\u7684\u5305\u51B2\u7A81\u3002

# Displayed when an I/O exception occurs during generate.
generate.io-exception = \u65E0\u6CD5\u4E3A ''{0}'' \u5199\u5165 .class \u6587\u4EF6: {1}

# Errors detected by the Javelin back-end

back-end.constant-pool-too-big = \u7C7B ''{0}'' \u6709\u592A\u591A\u5E38\u91CF ({1})\u3002

back-end.method.args-too-big = \u65B9\u6CD5 ''{0}'' \u6709\u592A\u591A\u53C2\u6570 ({1})\u3002

back-end.constructor.args-too-big = \u6784\u9020\u5668 ''{0}'' \u6709\u592A\u591A\u53C2\u6570 ({1})\u3002

java.enum.super-constructor-call = \u5BF9\u8D85\u7EA7\u5185\u90E8\u679A\u4E3E\u6784\u9020\u5668\u7684\u8C03\u7528\u65E0\u6548\u3002

java.class.enum-const.not-found = \u627E\u4E0D\u5230\u679A\u4E3E\u5E38\u91CF ''{0}''\u3002

java.bound.not-interface=\u6B64\u5904\u9700\u8981\u63A5\u53E3\u3002
java.bound.erasure-clash=\u7C7B\u578B\u53D8\u91CF\u8303\u56F4\u7684\u64E6\u9664\u64CD\u4F5C\u5FC5\u987B\u4E0D\u540C\u3002
java.generics.type-argument-count=\u9519\u8BEF\u7684\u7C7B\u578B\u53C2\u6570\u6570\u76EE\u3002
java.generics.type-argument-primitive=\u975E\u6CD5\u7684\u57FA\u5143\u7C7B\u578B\u53C2\u6570\u3002
java.generics.type-argument-bounds=\u7C7B\u578B\u53C2\u6570\u4E0D\u5728\u5176\u8303\u56F4\u5185\u3002

java.warn.unchecked-conversion=unchecked \u8F6C\u6362\u3002

java.warn.unchecked-return = \u6B64\u65B9\u6CD5\u8986\u76D6{1}\u4E2D\u7684{0}; \u8FD4\u56DE\u7C7B\u578B\u9700\u8981 unchecked \u8F6C\u6362\u3002

unchecked.suppressed-warning=\u67D0\u4E9B\u8F93\u5165\u6587\u4EF6\u4F7F\u7528 unchecked \u6216\u4E0D\u5B89\u5168\u7684\u64CD\u4F5C\u3002\n\u8BF7\u4F7F\u7528 -Xlint:unchecked \u91CD\u65B0\u7F16\u8BD1\u4EE5\u67E5\u770B\u8BE6\u7EC6\u4FE1\u606F\u3002

deprecation.suppressed-warning=\u67D0\u4E9B\u8F93\u5165\u6587\u4EF6\u4F7F\u7528\u5DF2\u5E9F\u5F03\u7684 API\u3002\n\u8BF7\u4F7F\u7528 -Xlint:deprecation \u91CD\u65B0\u7F16\u8BD1\u4EE5\u67E5\u770B\u8BE6\u7EC6\u4FE1\u606F\u3002

# The following resource keys should mirror those found in
# IJavaFormattingOptions.java.  They use the following convention:
# java.<option page>.<option group>.<specific option>
#
# Note that for every fully qualified (2+ parts) option key, each hierarchical
# parent must also be defined.  That is because the option groups and option
# pages draw their names from this list as well.
#
# The exception is "java" itself, since it isn't used anywhere in the UI
# # java = Java

java                                    = Java

java.lines                              = Java: \u6362\u884C\u7B26

java.lines.before                       = \u524D\u9762\u7684\u7A7A\u767D\u884C
java.lines.before.imports               = imports
java.lines.before.class                 = \u7C7B
java.lines.before.methodDecl            = \u65B9\u6CD5\u58F0\u660E
java.lines.before.nestedClass           = \u5D4C\u5957\u7C7B

java.lines.ownLine                      = \u5F00\u59CB\u65B0\u884C
java.lines.ownLine.else                 = else
java.lines.ownLine.while                = while
java.lines.ownLine.catch                = catch
java.lines.ownLine.finally              = finally
java.lines.ownLine.extends              = extends
java.lines.ownLine.implements           = implements
java.lines.ownLine.implemented_classes  = \u5B9E\u65BD\u7684\u7C7B
java.lines.ownLine.decl_parameters      = \u65B9\u6CD5\u58F0\u660E\u53C2\u6570
java.lines.ownLine.call_parameters      = \u65B9\u6CD5\u8C03\u7528\u53C2\u6570
java.lines.ownLine.throws               = throws
java.lines.ownLine.throw_classes        = \u5F15\u53D1\u7C7B
java.lines.ownLine.enum                 = \u679A\u4E3E\u503C



java.spaces                             = Java: \u7A7A\u683C

java.spaces.beforeParen                 = \u5728\u62EC\u53F7\u524D\u9762
java.spaces.beforeParen.methodDecl      = \u65B9\u6CD5\u58F0\u660E
java.spaces.beforeParen.methodCall      = \u65B9\u6CD5\u8C03\u7528
java.spaces.beforeParen.if              = if
java.spaces.beforeParen.while           = while
java.spaces.beforeParen.for             = for
java.spaces.beforeParen.switch          = switch
java.spaces.beforeParen.synchronized    = synchronized
java.spaces.beforeParen.catch           = catch

java.spaces.insideParens                = \u5728\u62EC\u53F7\u5185\u90E8
java.spaces.insideParens.methodDecl     = \u65B9\u6CD5\u58F0\u660E
java.spaces.insideParens.methodCall     = \u65B9\u6CD5\u8C03\u7528
java.spaces.insideParens.if             = if
java.spaces.insideParens.while          = while
java.spaces.insideParens.for            = for
java.spaces.insideParens.switch         = switch
java.spaces.insideParens.synchronized   = synchronized
java.spaces.insideParens.catch          = catch
java.spaces.insideParens.operation      = \u64CD\u4F5C

# Special options for for statements
java.spaces.for                         = for \u8BED\u53E5\u53C2\u6570
java.spaces.for.beforeSemicolon         = \u5728\u6BCF\u4E2A\u5206\u53F7\u524D\u9762
java.spaces.for.afterSemicolon          = \u5728\u6BCF\u4E2A\u5206\u53F7\u540E\u9762
java.spaces.for.emptySemicolon          = \u7A7A\u5206\u53F7\u4E4B\u95F4
java.spaces.for.beforeColon             = \u5728\u5192\u53F7\u524D\u9762
java.spaces.for.afterColon              = \u5728\u5192\u53F7\u540E\u9762

java.spaces.param                       = \u65B9\u6CD5\u8C03\u7528\u53C2\u6570
java.spaces.param.comma                 = \u5728\u6BCF\u4E2A\u9017\u53F7\u540E\u9762
java.spaces.param.noParams              = \u65E0\u53C2\u6570

java.spaces.generic                     = \u4E00\u822C
java.spaces.generic.beforeClass         = \u5728\u4E00\u822C\u7C7B\u524D\u9762
java.spaces.generic.inside              = \u5728\u4E00\u822C\u7C7B\u5185\u90E8
java.spaces.generic.afterComma          = \u5728\u6BCF\u4E2A\u9017\u53F7\u540E\u9762
java.spaces.generic.afterField          = \u5728\u4E00\u822C\u5B57\u6BB5\u6216\u53C2\u6570\u540E\u9762

java.spaces.cast                        = \u8F6C\u6362\u8FD0\u7B97\u7B26
java.spaces.cast.after                  = \u5728\u62EC\u53F7\u540E\u9762

java.spaces.aroundOperator              = \u5728\u8FD0\u7B97\u7B26\u5468\u56F4
# Having a separate option for every option is overwhelming and silly.
# Lump similar categories together, and point their options at the groups.
#java.spaces.aroundOperator.eq           = =
#java.spaces.aroundOperator.plus         = +
#java.spaces.aroundOperator.minus        = -
#java.spaces.aroundOperator.mult         = *
#java.spaces.aroundOperator.div          = /
#java.spaces.aroundOperator.mod          = %
#java.spaces.aroundOperator.and          = &
#java.spaces.aroundOperator.or           = |
#java.spaces.aroundOperator.xor          = ^
#java.spaces.aroundOperator.lshift       = <<
#java.spaces.aroundOperator.rshift       = >>
#java.spaces.aroundOperator.urshift      = >>>
#java.spaces.aroundOperator.andand       = &&
#java.spaces.aroundOperator.oror         = ||
#java.spaces.aroundOperator.lt           = <
#java.spaces.aroundOperator.gt           = >
#java.spaces.aroundOperator.lteq         = <=
#java.spaces.aroundOperator.gteq         = >=
#java.spaces.aroundOperator.eqeq         = ==
#java.spaces.aroundOperator.noteq        = !=
#java.spaces.aroundOperator.pluseq       = +=
#java.spaces.aroundOperator.minuseq      = -=
#java.spaces.aroundOperator.multeq       = *=
#java.spaces.aroundOperator.diveq        = /=
#java.spaces.aroundOperator.modeq        = %=
#java.spaces.aroundOperator.andeq        = &=
#java.spaces.aroundOperator.oreq         = |=
#java.spaces.aroundOperator.xoreq        = ^=
#java.spaces.aroundOperator.lshifteq     = <<=
#java.spaces.aroundOperator.rshifteq     = >>=
#java.spaces.aroundOperator.urshifteq    = >>>=
#java.spaces.aroundOperator.question     = ?
#java.spaces.aroundOperator.colon        = :
#java.spaces.aroundOperator.instanceof   = instanceof
java.spaces.aroundOperator.arithmetic   = \u7B97\u672F (+ - * / %)
java.spaces.aroundOperator.bitwise      = \u4F4D (& | ^)
java.spaces.aroundOperator.shift        = \u4F4D\u79FB (<< >> >>>)
java.spaces.aroundOperator.logical      = \u903B\u8F91 (&& ||)
java.spaces.aroundOperator.relational   = \u5173\u7CFB (== != < > <= >=)
java.spaces.aroundOperator.ternary      = \u4E09\u5143 (? :)
java.spaces.aroundOperator.assignment   = \u5206\u914D (= += |= <<= \u7B49)
java.spaces.aroundOperator.parentheses  = \u62EC\u53F7


java.braces                 = Java: \u5927\u62EC\u53F7
java.braces.class           = \u7C7B
java.braces.enum            = \u679A\u4E3E
java.braces.method          = \u65B9\u6CD5\u58F0\u660E
java.braces.if              = if
java.braces.switch          = switch
java.braces.case            = case
java.braces.while           = while
java.braces.do              = do
java.braces.for             = for
java.braces.synchronized    = synchronized
java.braces.try             = try
java.braces.catch           = catch
java.braces.finally         = finally
java.braces.anonymous       = \u533F\u540D\u5185\u90E8\u7C7B
java.braces.array           = \u9759\u6001\u6570\u7EC4\u58F0\u660E


# Combo choices for generic brace formats
java.braces.cuddled            = \u7D27\u8D34\u62EC\u4F4F
java.braces.cuddled_with_space = \u62EC\u4F4F\u65F6\u7559\u4E00\u4E2A\u7A7A\u683C
java.braces.standard           = \u6807\u51C6
java.braces.standard2          = \u6807\u51C6 w/o \u6362\u884C\u7B26
java.braces.indented           = \u5927\u62EC\u53F7\u7F29\u8FDB
java.braces.indented2          = \u5927\u62EC\u53F7\u7F29\u8FDB +

# Special case for brace rules above when braces are empty
java.braces.empty              = \u7A7A\u5757
java.braces.empty.normal       = \u4E00\u822C\u89C4\u5219
java.braces.empty.empty        = {}
java.braces.empty.space        = { }
java.braces.empty.leaveAlone   = \u4FDD\u7559\u539F\u6837



java.other                          = Java: \u5176\u4ED6

# Special options for switch statements
java.other.case                             = Switch \u8BED\u53E5 case
java.other.case.spaceBeforeColon            = \u5192\u53F7\u524D\u7684\u7A7A\u683C
java.other.case.indentCase                  = \u7F29\u8FDB case \u8BED\u53E5
java.other.case.indentBodies                = \u7F29\u8FDB case \u4E3B\u4F53
java.other.case.betweenCaseBlocks           = case \u7EC4\u4E4B\u95F4\u7684\u7A7A\u767D\u884C
java.other.case.blocks                      = \u5757\u4E2D\u7684 case \u4E3B\u4F53

java.other.blocks                           = \u5757
java.other.blocks.convertNestedStatements   = \u5C06\u5355\u884C\u4E3B\u4F53\u8F6C\u6362\u4E3A\u5757

java.other.assert                           = \u65AD\u8A00
java.other.assert.parens                    = \u62EC\u53F7\u4E2D\u7684\u81EA\u52A8\u6362\u884C\u6D4B\u8BD5\u6761\u4EF6
java.other.assert.colon                     = \u5192\u53F7\u5F00\u59CB\u65B0\u884C

java.other.string                           = \u8FDE\u63A5\u5B57\u7B26\u4E32
java.other.string.wrapConcat                = \u81EA\u52A8\u6362\u5230\u4E0B\u4E00\u884C
java.other.string.wrapPlus                  = \u5728\u524D\u4E00\u884C\u4FDD\u7559 '+'
java.other.string.outdentPlus               = \u4F38\u51FA '+' \u4EE5\u6392\u5217\u5B57\u7B26\u4E32

java.other.string.wordBreak                 = \u65AD\u5F00\u5B57\u7B26\u4E32\u4EE5\u4F7F\u5176\u9002\u5408\u8FB9\u754C
java.other.string.wordJoin                  = \u5F53\u5B57\u7B26\u4E32\u9002\u5408\u8FB9\u754C\u65F6\u5C06\u5176\u8054\u63A5
java.other.string.concat                    = \u8FDE\u63A5\u5B57\u7B26\u4E32
java.other.string.wrap.none                 = \u4FDD\u6301\u4E00\u884C
java.other.string.wrap.line                 = \u81EA\u52A8\u6362\u5230\u4E0B\u4E00\u884C
java.other.string.wrap.indent               = \u81EA\u52A8\u6362\u5230\u4E0B\u4E00\u884C, \u7F29\u8FDB
java.other.string.wrap.string               = \u81EA\u52A8\u6362\u884C\u5230\u5B57\u7B26\u4E32\u5F00\u5934
java.other.string.wrap.plusLine             = \u5C06 + \u81EA\u52A8\u6362\u5230\u4E0B\u4E00\u884C
java.other.string.wrap.plusIndent           = \u5C06 + \u81EA\u52A8\u6362\u5230\u4E0B\u4E00\u884C, \u7F29\u8FDB
java.other.string.wrap.plusString           = \u5C06 + \u81EA\u52A8\u6362\u884C\u5230\u5B57\u7B26\u4E32\u5F00\u5934
java.other.string.wrap.plusPreString        = \u5C06 + \u81EA\u52A8\u6362\u884C\u5230\u5B57\u7B26\u4E32\u5F00\u5934\u524D\u9762

java.other.annotation                       = JSR-175 \u6279\u6CE8
java.other.annotation.spaceBeforeParen      = \u62EC\u53F7\u524D\u7684\u7A7A\u683C
java.other.annotation.spaceInsideParens     = \u62EC\u53F7\u5185\u7684\u7A7A\u683C
java.other.annotation.spaceEmptyParens      = \u7A7A\u62EC\u53F7\u5185\u7684\u7A7A\u683C
java.other.annotation.spaceBeforeEqual      = \u7B49\u53F7\u524D\u7684\u7A7A\u683C
java.other.annotation.spaceAfterEqual       = \u7B49\u53F7\u540E\u7684\u7A7A\u683C
java.other.annotation.parameters            = \u53C2\u6570\u5305\u88C5
java.other.annotation.wrap.none             = \u4FDD\u6301\u4E00\u884C
java.other.annotation.wrap.params           = \u5728\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0B\u5BF9\u9F50
java.other.annotation.wrap.indent           = \u7F29\u8FDB\u5BF9\u9F50\u53C2\u6570
java.other.annotation.parenLine             = \u5C06\u6700\u540E\u7684\u62EC\u53F7\u6362\u81F3\u672C\u8EAB\u7684\u884C

java.other.imports                          = \u5BFC\u5165
java.other.imports.sorted                   = \u6309\u5B57\u6BCD\u987A\u5E8F\u6392\u5E8F
java.other.imports.grouped                  = \u5C06\u9876\u7EA7\u5305\u5206\u7EC4
java.other.imports.star3                    = \u5728 3 \u4E2A\u5B9E\u4F8B\u4E4B\u540E\u4F7F\u7528\u901A\u914D\u7B26


# Because there is no generic text language, the text formatting options are
# piggybacking on java for message resources.  The following resource keys
# should mirror those found in ITextFormattingOptions.java.  They use the
# following convention:
# text.<option page>.<option group>.<specific option>
#
# Note that for every fully qualified (2+ parts) option key, each hierarchical
# parent must also be defined.  That is because the option groups and option
# pages draw their names from this list as well.

text                                = \u6587\u672C
text.general.use_tabs               = \u4F7F\u7528\u5236\u8868\u7B26
text.general.tab_columns            = \u5236\u8868\u7B26\u5217
text.general.indent_columns         = \u7F29\u8FDB\u5217
text.general.right_margin_columns   = \u53F3\u8FB9\u754C\u5217
