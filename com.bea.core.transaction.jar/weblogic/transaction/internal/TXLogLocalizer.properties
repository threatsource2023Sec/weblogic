version=1.0
L10nPackage=weblogic.transaction.internal
I18nPackage=weblogic.transaction.internal
subsystem=JTA
prefix=WL

110000=Transaction log record class name encoding error [{0}]: {1}
110001=Transaction log record encoding error [{0}]: {1}
110003=onError() callback exception: {0}
110004=Unable to read transaction log record checksum.
110005=Transaction log record checksum failure [{0}].
110007=Log record class instantiation problem [{0}]: {1}
110008=Log record class readExternal problem [{0}]: {1}
110011=onRecovery() callback exception: {0}.
110013=An error occurred while writing transaction log: {0}.
110015=A version error occurred while reading the transaction log header file.
110020=Error reading transaction log file [{0}]: {1}
110021=Format error [{0}] occurred while reading transaction log file [{1}]
110022=Format error [{0}] occurred while reading transaction log file [{1}]: {2}
110023=Transaction log record checksum failure [{0}]: {1}.
110026=Missing transaction log file [{0}]
110027={0}
110028=The transaction manager did not call XA.forget() for transaction [{1}] on resource [{0}], which reported a heuristic decision during commit.
110029=The transaction manager did not call XA.forget() for transaction [{1}] on resource [{0}], which reported a heuristic decision during rollback.
110030=XA resource [{0}] has not responded in the last {1} second(s).
110033=Recovered transaction log header file from backup location [{0}].
110101=No license exists for two-phase commit (2PC) processing.
110102=A transaction with multiple resources was rolled back due to an invalid two-phase commit (2PC) license.
110200=User [{0}] is not authorized to invoke startCommit on a transaction branch.
110201=User [{0}] is not authorized to invoke startRollback on a transaction branch.
110202=User [{0}] is not authorized to invoke rollback on a transaction branch.
110204=XA resource [{0}] returns XAER_RMFAIL and is unavailable.
110207=A previously unavailable XA resource [{0}] is now available.
110208=Unregistration of Transaction Recovery Service for server [{0}] failed.
110209=Registration of Transaction Recovery Service for server [{0}] failed.
110210=Failback of Transaction Recovery Service for server [{0}] failed.
110211=Failback retry of Transaction Recovery Service for server [{0}] failed.
110212=An attempt was made to manually migrate the Transaction Recovery Service of the current server away from the server while it is still active.
110213=The activation of Transaction Recovery Service for server [{0}] failed.
110400=An error occurred while unregistering Resource Runtime MBean: {0}
110401=Ignoring error in afterCompletion. Object={0}, Exception={1}
110402=Unknown state in getStatus(): {0}.
110403=An unexpected exception occurred while processing a transaction during a transaction manager timer event. Exception={0}.
110405=Resource {0} was not assigned to any of these servers: {1}
110406=Internal error interpreting heuristic status. Expected={0}, Actual={1}
110407=Unknown state in getStatus(): {0}
110408=An attempt to add a duplicate transaction to the transaction manager list was ignored.
110409=Unable to advertise resource {0}: {1}
110411=Failed to construct local ServerCoordinatorDescriptor: {0}.
110412={0} completed heuristically: {1}.
110414=Illegal State (expected: Prepared or Committing): {0}
110415=Illegal state. Proceeding with rollback anyway. {0}
110419=An attempt was made to add an incompatible object as a transaction property: keys must be strings and values must be serializable.
110420=An attempt was made to add an incompatible object as a local transaction property: keys must be String.
110421=Timer method was called on committed transaction {0}.
110422=Forcibly aborting a transaction found in an unexpected internal state. Details={0}
110423=Abandoning transaction after {0} seconds: {1}
110424=An unexpected exception was caught during begin: {0}
110410=Unable to create resource runtime MBean for resource {0}: {1}
110425=Error advertising TransactionManager object: {0}
110426=An error occurred while advertising UserTransaction object: {0}
110427=An error occurred while advertising Coordinator object: {0}
110428=An error occurred while exporting Coordinator object ID: {0}
110429=Error advertising SubCoordinator object: {0}.
110430={0}: {1}
110433=Unable to obtain ownership of the transaction log.
110442=An administrative request was made to locally roll back the transaction associated with Xid {0}
110443=An administrative request was made to locally commit the transaction associated with Xid {0}
110444=An administrative request was made to globally commit the transaction associated with Xid {0}.
110445=An administrative request was made to globally commit the transaction associated with Xid {0}.
110446=The administrative request to locally roll back the transaction associated with Xid {0} failed because the transaction does not exist.
110447=The administrative request to locally commit the transaction associated with Xid {0} failed because the transaction does not exist.
110448=The administrative request to globally roll back the transaction associated with Xid {0} failed because the transaction does not exist.
110449=The administrative request to globally commit the transaction associated with Xid {0} failed because the transaction does not exist
110450=The administrative request to locally roll back the transaction {0} encountered an error {1}.
110451=The administrative request to globally roll back the transaction {0} encountered an error {1}.
110452=The administrative request to locally commit the transaction {0} encountered an error {1}.
110453=The administrative request to globally commit the transaction {0} encountered an error {1}.
110454=The administrative request to locally roll back the transaction {0} failed because the transaction is in an invalid state. {1}
110455=The administrative request to globally roll back the transaction {0} failed because the transaction is in an invalid state. {1}
110456=The administrative request to locally commit the transaction {0} failed because the transaction is in an invalid state. {1}
110458=The administrative request to globally roll back the transaction {0} failed, because the coordinator {1} could not be contacted. {2}
110459=The administrative request to globally commit the transaction {0} failed, because the coordinator at {1} could not be contacted. {2}
110460=The administrative request to globally rollback the transaction {0} failed, because the coordinator does not support manual transaction resolution.
110462=The administrative request to locally commit the transaction {0} failed, because the transaction has been marked for rollback.
110464=The forced commit operation for transaction {0} on resource {1} was not performed, because the resource is busy.
110465=The forced rollback operation for transaction {0} on resource {1} was not performed, because the resource is busy
110466=The forced commit operation for transaction {0} on resource {1} was not performed because the resource has already been committed.
110467=The forced rollback operation for transaction {0} on resource {1} was not performed because the resource has already been rolled back.
110468=The forced commit operation for transaction {0} on resource {1} encountered an error. {2}
110469=The forced rollback operation for transaction {0} on resource {1} encountered an error. {2}
110470=User [{0}] is not authorized to invoke a forced global rollback.
110471=User [{0}] is not authorized to invoke a forced global commit.
110472=User [{0}] is not authorized to invoke a forced local rollback.
110473=User [{0}] is not authorized to invoke a forced local commit.
110474=Unable to advertise non-XA resource {0}: {1}
110475=User [{0}] is not authorized to invoke commit on a non-XA resource transaction branch.
110476=The server has detected pending transactions during graceful shutdown. The server will wait for the pending transactions to complete before suspending the RMI service. A forced shutdown command can be issued to shut down the server immediately.
110477=The unregisterResource operation for resource {0} timed out after {1} seconds.
110478=One-phase transaction [{1}] is in an unknown state for logging resource [{0}]. The transaction operations either all rolled back, or all committed, or are blocked.\n Transaction detail: [{2}].\n Root cause: [{3}].
110479=Two-phase transaction [{1}], with logging resource [{0}], is an unknown state. The transaction manager will periodically retry determining the state of the transaction every [{3}] seconds. When the state is determined, the remaining resources in the transaction will be either rolled back or committed accordingly.\n Transaction detail: [{2}].\n Root cause: [{4}].
110480=The transaction manager is completing logging resource [{0}] transaction [{1}]. The transaction, which was previously in an unknown state, is now resolved and in the [{2,choice,0#rollback|1#commit}] state.
110482=A logging last resource (LLR) failed during initialization. The server cannot boot unless all configured LLRs initialize. Failing reason: \n{0}\n
110483=The JTA health state has changed from {0} to {1}.
110484=The JTA health state has changed from {0} to {1} with reason codes: {2}.
110485=The JTA health state has changed from {0} to {1} with reason codes: {2}.
110486=Transaction {0} cannot complete commit processing because resource [{1}] is unavailable. The transaction will be abandoned after {2} seconds unless all resources acknowledge the commit decision.
110487=Transaction {0} cannot complete rollback processing because the pending resource [{1}] is unavailable. The transaction will be abandoned after {2} seconds unless all resources acknowledge the rollback decision.
110488=The LLR resource(s) {0} are not available and may contain transaction commit records required for recovery processing. Recovery of XA resources will not occur until these resources are deployed.
114089=User [{0}] is not authorized to invoke ackPrepare on a Coordinator.
110490=User [{0}] is not authorized to invoke Commit on a Coordinator.
110491=User [{0}] is not authorized to invoke AckPrePrepare on a Coordinator.
110492=User [{0}] is not authorized to invoke CheckStatus on a Coordinator.
110493=User [{0}] is not authorized to invoke AckCommit on a Coordinator.
110494=User [{0}] is not authorized to invoke NakCommit on a Coordinator.
110495=User [{0}] is not authorized to invoke AckRollback on a Coordinator.
110496=User [{0}] is not authorized to invoke NakRollback on a Coordinator.
110500=User [{0}] is not authorized to invoke GetSubCoordinatorInfo on a SubCoordinator.
110501=User [{0}] is not authorized to invoke GetProperties on a SubCoordinator.
110502=User [{0}] is not authorized to invoke Recover on a SubCoordinator.
110503=The migrator (the Administration Server for manual JTA migration policy or the Singleton Master for automatic JTA migration policy) is not available. Will skip JTA TRS failback because isStrictOwnershipCheck is [false]. This may lead to potencial TLOG corruption if the TRS of {0} has been migrated to a backup server and the backup server is accessing the TLOG of {0}. More safety can be achieved by setting isStrictOwnershipCheck to [true].
110504=There was an error advertising TransactionSynchronizationRegistry object: {0}.
110505=An attempt was made to set an invalid TRANSACTION_COMPLETION_TIMEOUT_SECONDS_PROPERTY_KEY for transaction property: keys must be number and values must be between -1 and max value of integer.
111001=The Transaction Manager is being started in standalone mode and will not be able to participate in distributed transactions.
111002=The Transaction Manager is being started in distributed mode.
111003=An error occurred while creating the transaction log persistent store: {1}.
111004=Transaction could not set CoordinatorURL to use AdminChannel downgrading {0}.
111005=An in-progress XA operation for transaction {0} on resource {1} could not complete within {2} seconds, or was interrupted. 	Allowing subsequent calls to proceed.
111006=Transaction could not set CoordinatorURL to use SSL URL downgrading {0}
111007=The commit operation for one-phase transaction {0} on resource {1} encountered an error. {2}
111008=Transaction Log failed during initialization. The server cannot boot unless Transaction Log initialize. Failing reason: \n{0}\n
111009=activateDeployments failed during initialization. Failing reason: \n{0}\n
111010=SetPrimaryStore failed. Failing reason: \n{0}\n
111011=A Transaction Log PrimaryStore failed during initialization. The server cannot boot unless configured Transaction Log Primary Store initialize. Failing reason: \n{0}\n
111012=SetPrimaryStore close failed when retry. Failing reason: \n{0}\n
111013=Recover JDBCStore init store exception: {0}
111014=There is a naming conflict for resource = [{0}]. This resource is being registered by this server and has already been registered in:\n [{1}].\n
111015=The commit operation for transaction {0} timed out after {1} seconds.
111016=Recovery is not possible as determiner resource can not be obtained {0}.
111017=Encountered an exception while attempting to acquire a transaction manager for transactional annotation interceptors {0}.
111018=No ComponentInvocation is present for @Transactional annotation processing. The restriction on use of UserTransaction will not be enforced.
111019=The server has detected pending transactions after graceful shutdown in ClientInitiatexTxShutdownService.stop. Continue to work.
111020=An issue occurred during cross-site recovery processing: {0}.
111021=The JTA Security Interoperability Mode value "compatibility" is deprecated. Use "default" or "performance" instead.

