prefix=WL
severity110000=16
messagedetail110000=An error occurred while writing a record to the transaction log.
cause110000=An error occurred while writing a record to the transaction log.
action110000=Check for other log messages that give more information about the failure.
severity110001=16
messagedetail110001=An error occurred while writing a record to the transaction log.
cause110001=An error occurred while writing a record to the transaction log. See the reported exception for more details.
action110001=Check for other log messages that give more information about the failure.
severity110003=16
messagedetail110003=An error occurred while writing a record to the transaction log, followed by an exception in the callback handler.
cause110003=An error occurred while writing a record to the transaction log.
action110003=Check for other log messages that give more information about the failure.
severity110004=16
messagedetail110004=An error occurred while reading the transaction log.
cause110004=The transaction log file is corrupted, possibly due to a crash or file system error. If this error occurs only once per system reboot, a crash caused the transaction being logged at that time to be rolled back.
action110004=No action is required. Recovery is automatic.
severity110005=16
messagedetail110005=An error occurred while reading the transaction log.
cause110005=A record in the transaction log file is corrupted, possibly due to a crash or file system error. If this error occurs only once per system re-boot, a crash caused the transaction being logged at that time to be rolled back.
action110005=No action is required. Recovery is automatic.
messagedetail110007=An error occurred while reading a record from the transaction log.
cause110007=An error occurred while reading a record from the transaction log. This may have also occurred due to crash recovery processing of a new transaction log file performed by an older WebLogic Server software version.
action110007=Check for other log messages that give more information about the failure.
messagedetail110008=An error occurred while reading externalized state information for a record from the transaction log.
cause110008=An error occurred while reading externalized state information for a record from the transaction log. This may have also occurred due to crash recovery processing of a new transaction log file performed by an older WebLogic Server software version.
action110008=Check for other log messages that give more information about the failure.
severity110011=16
messagedetail110011=A callback handler exception occurred after recovering an object from the transaction log.
cause110011=See the message detail.
action110011=Check for other log messages that give more information about the failure.
messagedetail110013=An error occurred while writing the transaction log.
cause110013=The file system is full or permission problems exist.
action110013=Verify the transaction log file location and locate any file system problems.
messagedetail110015=The transaction log header file contains an unrecognized version number.
cause110015=File corruption exists. A new transaction log file may have been given to an older version of WebLogic Server.
action110015=The system will automatically create an empty transaction log.
messagedetail110020=There was an error reading transaction log file [{0}] during crash recovery.
cause110020=There are file system or permission problems, or possible corruption of the transaction log.
action110020=Verify the transaction log file location and check for file system problems. Crash recovery processing continues as best it can.
messagedetail110021=A format error occurred while reading transaction log file [{1}] during crash recovery.
cause110021=The transaction log file was possibly corrupted.
action110021=Contact My Oracle Support.
messagedetail110022=A format error occurred while reading transaction log file [{1}] during crash recovery.
cause110022=The transaction log file is possibly corrupted.
action110022=Contact My Oracle Support.
severity110023=16
messagedetail110023=An error occurred while reading the transaction log.
cause110023=A record in the transaction log file is corrupted, possibly due to a crash or file system error. If this error occurs only once per system reboot, a crash caused the transaction being logged at that time to be rolled back.
action110023=No action is required. Recovery is automatic.
messagedetail110026=Transaction log file [{0}] could not be opened for reading.
cause110026=File system or permission problems exist, or the transaction log might be corrupted. The file might also have been manually deleted.
action110026=Verify the transaction log file location and check for file system problems. Crash recovery processing will continue.
severity110027=128
messagedetail110027=Uncatalogued debug message - please do not change
cause110027=Debugging - please do not change.
action110027=No action required.
severity110028=64
messagedetail110028=Due to an explicit setting of the "forgetHeuristics" configuration property, the transaction manager did not call XA.forget() on resource [{0}] for transaction [{1}]. The resource reported a heuristic decision during transaction commit processing.
cause110028=See the message details for probable cause.
action110028=After correcting any data inconsistencies due to the heuristic outcome, use the resource manager administrative commands to instruct the resource to ignore the transaction.
severity110029=64
messagedetail110029=Due to an explicit setting of the "forgetHeuristics" configuration property, the transaction manager did not call XA.forget() on resource [{0}] for transaction [{1}]. The resource reported a heuristic decision during transaction rollback processing.
cause110029=See the message details for the probable cause.
action110029=After correcting any data inconsistencies due to the heuristic outcome, use the resource manager administrative commands to instruct the resource to ignore the transaction.
severity110030=16
messagedetail110030=The XA resource [{0}] has not responded to XA calls in the last {1} seconds.
cause110030=The resource is unavailable (possibly the resource is down, or network problems exist).
action110030=Check the resource manager and network condition. When the resource is available again, take the following actions to inform the Transaction Manager: For JDBC connection pools, refresh the connection pool. You can also enable the auto-refresh feature of the connection pool to do this automatically. For other third-party XA resources, the resource provider should re-register the resource by calling weblogic.transaction.TransactionManager.unregisterResource(), followed by weblogic.transaction.TransactionManager.registerStaticResource() or weblogic.transaction.TransactionManager.registerDynamicResource().
messagedetail110033=An error occurred while reading the transaction log header file, but a backup copy was found.
cause110033=This error is probably caused by a crash that occurred when the the transaction log header file was being rewritten.
action110033=No action is required. Recovery is automatic.
severity110101=64
messagedetail110101=A valid two-phase commit (2PC) license is not present. The server is limited to coordinating transactions with zero or one resources.
cause110101=The 2PC license is not present.
action110101=Contact an Oracle sales representative to obtain a 2PC license.
severity110102=16
messagedetail110102=An attempt was made to commit a transaction with multiple resources, but the two-phase commit (2PC) feature is not licensed. The server is limited to coordinating transactions with zero or one resources.
cause110102=The 2PC license is not present.
action110102=Contact an Oracle sales representative to obtain a 2PC license.
messagedetail110200=The user with identity [{0}] should not be attempting to directly invoke internal methods on the SubCoordinator object. This might subvert transactional integrity. Permission was denied, and the attempt was ignored.
cause110200=This might be a symptom of a potential security attack or, alternately, a problem with the "system" security identity of the server.
action110200=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110201=The user with identity [{0}] should not be attempting to directly invoke internal methods on the SubCoordinator object. This might subvert transactional integrity. Permission was denied, and the attempt was ignored.
cause110201=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110201=Verify that client software is not directly invoking an internal WebLogic system object.
messagedetail110202=The user with identity [{0}] should not be attempting to directly invoke internal methods on the SubCoordinator object. This might subvert transactional integrity. Permission was denied, and the attempt was ignored.
cause110202=This might be a symptom of a potential security attack, or alternately, a problem with the "system" security identity of the server.
action110202=Verify that client software is not directly invoking an internal WebLogic system object.
severity110204=16
messagedetail110204=XA resource [{0}] returns XAER_RMFAIL and is unavailable.
cause110204=The resource is unavailable because is down or network problems exist.
action110204=Check the resource manager and network conditions. When the resource is available again, take the following actions to inform the Transaction Manager: For JDBC connection pools, refresh the connection pool. You can also enable the auto-refresh feature of the connection pool to do this automatically. For other third-party XA resources, the resource provider should re-register the resource by calling weblogic.transaction.TransactionManager.unregisterResource(), followed by weblogic.transaction.TransactionManager.registerStaticResource() or weblogic.transaction.TransactionManager.registerDynamicResource().
severity110207=64
messagedetail110207=The XA resource [{0}] was previously unavailable but has just become available again.
cause110207=The previously unavailable resource is now available. It is possible that the resource has recovered from earlier failures or that previous network problems were cleared.
action110207=No action is required.
severity110208=16
messagedetail110208=An attempt to unregister the Transaction Recovery Service for server [{0}] from the migratable service framework failed.
cause110208=An attempt to unregister the Transaction Recovery Service for server [{0}] from the migratable service framework failed.
action110208=Check for other log messages that give more information about the failure.
severity110209=16
messagedetail110209=An attempt to register the Transaction Recovery Service for server [{0}] from the migratable service framework failed.
cause110209=An attempt to register the Transaction Recovery Service for server [{0}] from the migratable service framework failed.
action110209=Check for other log messages that give more information about the failure.
severity110210=16
messagedetail110210=Transaction recovery actions are performed for the Transaction Recovery Service for server [{0}]. An attempt to failback the Transaction Recovery Service failed.
cause110210=Transaction recovery actions are performed for the Transaction Recovery Service for server [{0}]. An attempt to failback the Transaction Recovery Service failed.
action110210=Examine the migration errors and perform manual migration of the Transaction Recovery Service back to server [{0}].
severity110211=16
messagedetail110211=Transaction recovery actions are performed for the Transaction Recovery Service for server [{0}]. Both the first and second attempt to failback the Transaction Recovery Service failed. JTA is going to give up implicitly failing back the Transaction Recovery Service for server [{0}].
cause110211=Transaction recovery actions are performed for the Transaction Recovery Service for server [{0}]. Both the first and second attempt to failback the Transaction Recovery Service failed. JTA is going to give up implicitly failing back the Transaction Recovery Service for server [{0}].
action110211=Examine the migration errors and perform manual migration of the Transaction Recovery Service back to server [{0}].
severity110212=16
messagedetail110212=Attempts were made to manually migrate the current server Transaction Recovery Service away from the server while it is still active.
cause110212=An attempt was made to manually migrate the current Transaction Recovery Service away from the server while it is still active.
action110212=For controlled migration, suspend or shut down the current server first before manually migrating it to a backup server.
severity110213=16
messagedetail110213=The activation of Transaction Recovery Service for server [{0}] failed.
cause110213=The activation of Transaction Recovery Service for server [{0}] failed.
action110213=Examine the error details, correct the error conditions, and perform the necessary manual migration again if possible. If unsuccessful, My Oracle Support.
severity110400=16
messagedetail110400=A management error was detected while unregistering a Resource Runtime MBean.
cause110400=The MBean may have been unregistered previously or there may be an issue with the JMX Administration Server.
action110400=No action is required.
severity110401=16
messagedetail110401=An exception occurred in a Synchronization.afterCompletion() synchronization callback. The exception is ignored by the Transaction Manager.
cause110401=The application-defined javax.transaction.Synchronization callback may have caused an exception.
action110401=No action is required.
severity110402=16
messagedetail110402=The Transaction.getStatus() method was called and the transaction status is not a valid value.
cause110402=The Transaction.getStatus() method was called and the transaction status is not a valid value.
action110402=Check for other log messages that give more information about the failure.
severity110403=16
messagedetail110403=The transaction manager manages a timer service that periodically checks active transactions for timeouts and performs general housekeeping activities. An exception occurred during this processing and was ignored.
cause110403=Refer to the exception information found in the error message.
action110403=No action is required.
severity110405=16
messagedetail110405=During transaction commit or rollback processing, a participating resource could not be assigned to any of the participating servers. The operation was aborted.
cause110405=The transaction coordinator maintains information regarding where resources are registered among all the servers that are known to the coordinator. The participating resource may have been unregistered or became unavailable prior to attempting the operation. This condition may also occur if the cache belonging to the coordinator was out of date or has not completed initialization at the time the operation was invoked.
action110405=Verify the state of resource managers participating in the transaction and retry the operation.
severity110406=16
messagedetail110406=The heuristic completion status of a transaction is calculated based on the expected and actual completion states of all participants. The logic to determine the heuristic outcome did not account for the combination of the actual and expected completion states.
cause110406=The heuristic completion status of a transaction is calculated based on the expected and actual completion states of all participants. The logic to determine the heuristic outcome did not account for the combination of the actual and expected completion states.
action110406=Check for other log messages that give more information about the failure.
severity110407=16
messagedetail110407=The Transaction.getStatus() method did not recognize the transaction state as a valid state.
cause110407=The Transaction.getStatus() method did not recognize the transaction state as a valid state.
action110407=Check for other log messages that give more information about the failure.
severity110408=16
messagedetail110408=The internal transaction table of the server already contains the transaction instance being added. This event is innocuous.
cause110408=The internal transaction table of the server already contains the transaction instance being added. This event is innocuous.
action110408=Check for other log messages that give more information about the failure.
messagedetail110409=An error occurred while trying to advertise the name of the resource being registered with the transaction manager.
cause110409=A problem may exist with the JNDI provider, or another object is already bound to this context.
action110409=Contact My Oracle Support.
messagedetail110411=During server initialization, information about the local server could not be obtained from the local JNDI context.
cause110411=During server initialization, information about the local server could not be obtained from the local JNDI context.
action110411=Check for other log messages that give more information about the failure.
messagedetail110412=The specified transaction completed heuristically. A heuristic completion occurs when a participating resource makes a unilateral decision to commit or roll back its work and that decision differs from the coordinator view of the transaction.
cause110412=The resource manager may have failed, timed out, or detected locking conflicts that prompted it to commit or roll back work for the transaction branch. If the heuristic error was due to a resource manager failure, the resource may not be able to determine if work for the transaction branch was committed, aborted, or both. In this case, the condition is considered a HAZARD or MIXED heuristic.
action110412=Check the participants of the transaction should be checked for possible data corruption. The resource manager reporting the heuristic may maintain state information related to the updates involved in the heuristic error. If the JTA ForgetHeuristics configuration parameter is set to false, this information may be preserved in the resource manager. This information might be useful in correcting any data inconsistencies.
messagedetail110414=While attempting to retry the commit phase of a transaction, it was detected that the state of the transaction is not valid. To be in the commit phase, a transaction can only be in the prepared or committing states.
cause110414=While attempting to retry the commit phase of a transaction, it was detected that the state of the transaction is not valid. To be in the commit phase, a transaction can only be in the prepared or committing states.
action110414=Check for other log messages that give more information about the failure.
messagedetail110415=While attempting to retry the rollback of a prepared transaction, it was detected that the state of the transaction is not valid.
cause110415=While attempting to retry the rollback of a prepared transaction, it was detected that the state of the transaction is not valid.
action110415=Check for other log messages that give more information about the failure.
messagedetail110419=Transaction properties are Serializable objects that are associated with a transaction and indexed by a String key. These objects become associated with the transaction context, propagate with the transaction, and are stored in the transaction log. The class of the key object must be a String and the class of the value object must be Serializable.
cause110419=An attempt was made to add an incompatible object as a transaction property (the class of the key object must be a string and the class of the value object must be serializable).
action110419=Change the application to assign the transaction property using a String key and a serializable value.
messagedetail110420=Local transaction properties are objects that are associated with a transaction object but do not propagate with the transaction or get stored in the transaction log. The key object must be of the class String.
cause110420=An attempt was made to add an incompatible object as a local transaction property (the key object must be of the class String).
action110420=Change the application to add the local property with a String key.
messagedetail110421=The transaction manager invoked a timer method on a transaction that has already completed. The transaction manager periodically checks for transactions that should be aborted due to timeout. This transaction should have been removed from the internal transaction table.
cause110421=The transaction manager invoked a timer method on a transaction that has already completed. The transaction manager periodically checks for transactions that should be aborted due to timeout. This transaction should have been removed from the internal transaction table.
action110421=Check for other log messages that give more information about the failure. No action required.
messagedetail110422=While processing a transaction, the transaction manager detected that the transaction is in an illegal state. The only course of action for the coordinator is to attempt to force a rollback of all participants.
cause110422=While processing a transaction, the transaction manager detected that the transaction is in an illegal state. The only course of action for the coordinator is to attempt to force a rollback of all participants.
action110422=Check for any data inconsistencies among participating resources. Contact My Oracle Support.
messagedetail110423=When a transaction is abandoned, knowledge of the transaction is removed from the transaction manager that was attempting to complete the transaction. The JTA configuration attribute AbandonTimeoutSeconds determines how long the transaction manager should persist in trying to commit or roll back the transaction.
cause110423=A resource or participating server may have been unavailable for the duration of the AbandonTimeoutSeconds period.
action110423=Check participating resources for heuristic completions and correct any data inconsistencies.
messagedetail110424=While the transaction manager was creating a new transaction, an unexpected exception occurred.
cause110424=Check the exception detail portion of the log message.
action110424=Correct the condition described in the exception detail portion of the log message.
messagedetail110410=When a resource manager is registered with the transaction manager, a runtime MBean is created to track transaction statistics that are specific to the resource. This MBean could not be created.
cause110410=There may be a problem with the JMX Administration Server, or another MBean with this name is already registered with the Administration Server.
action110410=Contact My Oracle Support.
messagedetail110425=The transaction service could not advertise the TransactionManager object in the server JNDI context.
cause110425=There may be a problem with the JNDI provider or another object is already bound to this context.
action110425=Contact My Oracle Support.
messagedetail110426=The transaction service could not advertise the UserTransaction object in the server JNDI context.
cause110426=There may be a problem with the JNDI provider, or another object is already bound to this context.
action110426=Contact My Oracle Support.
messagedetail110427=The transaction service could not advertise the Coordinator object for the server in the JNDI context.
cause110427=There may be a problem with the JNDI provider, or another object is already bound to this context.
action110427=Contact My Oracle Support.
messagedetail110428=The Coordinator remote object is pinned to a specific object ID. During transaction service initialization, the Coordinator object for the server could not be exported under this object ID.
cause110428=Another remote object may be bound to this object ID.
action110428=Contact My Oracle Support.
messagedetail110429=The transaction service could not advertise the SubCoordinator Remote Management Interface (RMI) object for the server in the JNDI context.
cause110429=There may be a problem with the JNDI provider, or another object is already bound to this context.
action110429=Contact My Oracle Support.
severity110430=128
messagedetail110430=Uncatalogued debug message - please do not change
cause110430=Debugging - please do not change.
action110430=No action required.
messagedetail110433=The server is unable to obtain ownership of its own transaction log within the specified time.
cause110433=The Transaction Recovery Service associated with the current server is currently owned by other servers.
action110433=Migrate the Transaction Recovery Migratable Service back to the current server before restarting it.
severity110442=64
stack110442=false
messagedetail110442=An administrative client, such as the WebLogic Server Administration Console, issued a forced local rollback operation for the specified transaction.
cause110442=The forced local rollback operation was initiated by an administrative application.
action110442=No action is required.
severity110443=64
stack110443=false
messagedetail110443=An administrative client, such as the WebLogic Server Administration Console, issued a forced local commit operation for the specified transaction.
cause110443=The forced local commit operation was initiated by an administrative application.
action110443=No action is required.
severity110444=64
stack110444=false
messagedetail110444=An administrative client, such as the WebLogic Server Administration Console, issued a forced global rollback operation for the specified transaction.
cause110444=A forced global rollback operation was initiated by an administrative application.
action110444=No action is required.
severity110445=64
stack110445=false
messagedetail110445=An administrative client, such as the WebLogic Server Administration Console, issued a forced global commit operation for the specified transaction.
cause110445=A forced global commit operation was initiated by an administrative application.
action110445=No action is required.
stack110446=false
messagedetail110446=An administrative client, such as the WebLogic Server Administration Console, issued a forced local rollback operation for the specified transaction, and that transaction does not exist on the server.
cause110446=The transaction may have completed before the administrative request was made.
action110446=No action is required.
stack110447=false
messagedetail110447=An administrative client, such as the WebLogic Server Administration Console, issued a forced local commit operation for the specified transaction, and that transaction does not exist on the server.
cause110447=The transaction may have completed before the administrative request was made.
action110447=No action is required.
stack110448=false
messagedetail110448=An administrative client, such as the WebLogic Server Administration Console, issued a forced global rollback operation for the specified transaction, and that transaction does not exist on the server.
cause110448=The transaction may have completed before the administrative request was made.
action110448=No action is required.
stack110449=false
messagedetail110449=An administrative client, such as the WebLogic Server Administration Console, issued a forced global commit operation for the specified transaction, and that transaction does not exist on the server.
cause110449=The transaction may have completed before the administrative request was made.
action110449=No action is required.
stack110450=false
messagedetail110450=An administrative client, such as the WebLogic Server Administration Console, issued a forced local rollback operation for the specified transaction. An error was encountered while processing the request.
cause110450=Refer to the exception information in the error message.
action110450=Check to see if the transaction still exists. The operation may have resolved the transaction. If the problem persists, contact My Oracle Support.
stack110451=false
messagedetail110451=An administrative client, such as the WebLogic Server Administration Console, issued a forced global rollback operation for the specified transaction. An error was encountered while processing the request.
cause110451=Refer to the exception information in the error message.
action110451=Check to see if the transaction still exists; the operation may have resolved the transaction. If the problem persists, contact My Oracle Support.
stack110452=false
messagedetail110452=An administrative client, such as the WebLogic Server Administration Console, issued a forced local commit operation for the specified transaction. An error was encountered while processing the request.
cause110452=Refer to the exception information in the error message.
action110452=Check to see if the transaction still exists. The operation may have resolved the transaction. If the problem persists, contact My Oracle Support.
stack110453=false
messagedetail110453=An administrative client, such as the WebLogic Server Administration Console, issued a forced global commit operation for the specified transaction. An error was encountered while processing the request.
cause110453=Refer to the exception information in the error message.
action110453=Check to see if the transaction still exists. The operation may have resolved the transaction. If the problem persists, contact My Oracle Support.
stack110454=false
messagedetail110454=An administrative client, such as the WebLogic Server Administration Console, issued a forced local rollback operation for the specified transaction. However, the transaction is in an invalid state and cannot be rolled back.
cause110454=The administrative request is invalid.
action110454=Issue a forced commit operation instead to resolve the transaction.
stack110455=false
messagedetail110455=An administrative client, such as the WebLogic Server Administration Console, issued a forced global rollback operation for the specified transaction. However, the transaction is in an invalid state and cannot be rolled back.
cause110455=The administrative request is invalid.
action110455=Issue a forced commit operation instead to resolve the transaction.
stack110456=false
messagedetail110456=An administrative client, such as the WebLogic Server Administration Console, issued a forced local commit operation for the specified transaction. However, the transaction is in an invalid state and cannot be committed.
cause110456=The administrative request is invalid.
action110456=Issue a forced rollback operation instead to resolve the transaction.
stack110458=false
messagedetail110458=An administrative client, such as the WebLogic Server Administration Console, issued a forced global rollback operation and the coordinator for the transaction could not be contacted. Global operations require the coordinating server to be available to process the request among all participating servers for the transaction.
cause110458=The coordinating server for the transaction is either not running or is unreachable.
action110458=Verify that the coordinating server is available and retry the operation. Alternatively, perform local operations to resolve the transaction.
stack110459=false
messagedetail110459=An administrative client, such as the WebLogic Server Administration Console, issued a forced global commit operation and the coordinator for the transaction could not be contacted. Global operations require the coordinating server to be available to process the request among all participating servers for the transaction.
cause110459=The coordinating server for the transaction is either not running or is unreachable.
action110459=Verify that the coordinating server is available and retry the operation. Alternatively, perform local operations to resolve the transaction.
stack110460=false
messagedetail110460=An administrative client, such as the WebLogic Server Administration Console, issued a force global rollback operation, and the coordinator for the transaction does not support manual transaction resolution.
cause110460=The coordinating server is an older version of WebLogic Server that does not support manual transaction resolution.
action110460=Perform local commit operations on all participants that support manual transaction resolution.
stack110462=false
messagedetail110462=An administrative client, such as the WebLogic Server Administration Console, issued a forced local commit operation. However, the transaction has been marked for rollback only. The commit operation can not complete.
cause110462=The transaction has been marked for rollback by an application component.
action110462=Attempt to resolve the transaction by using a forced rollback operation instead.
stack110464=false
messagedetail110464=An administrative client, such as the WebLogic Server Administration Console, issued a forced commit operation. However, the resource is busy with another operation for this transaction.
cause110464=There may be a blocked resource operation for this transaction. The resource may be experiencing problems or it may be slow to respond.
action110464=Attempt to retry the commit operation. The associated resource changes for the transaction may need to be manually resolved using a resource-specific utility.
stack110465=false
messagedetail110465=An administrative client, such as the WebLogic Server Administration Console, issued a forced rollback operation. However, the resource is busy with another operation for this transaction.
cause110465=There may be a blocked resource operation for this transaction. The resource may be experiencing problems or it may be slow to respond.
action110465=Attempt to retry the commit operation. The associated resource changes for the transaction may need to be manually resolved using a resource-specific utility.
severity110466=64
stack110466=false
messagedetail110466=An administrative client, such as the WebLogic Server Administration Console, issued a forced commit operation. However, the transaction has already been committed.
cause110466=The transaction may have completed before the administrative client invoked the commit operation.
action110466=No action is required. The transaction has been resolved.
severity110467=64
stack110467=false
messagedetail110467=An administrative client, such as the WebLogic Server Administration Console, issued a forced rollback operation. However, the transaction has already been rolled back.
cause110467=The transaction may have completed before the administrative client invoked the rollback operation.
action110467=No action is required. The transaction has been resolved.
stack110468=false
messagedetail110468=An administrative client, such as the WebLogic Server Administration Console, issued a forced commit operation and a participating resource responded to the rollback operation with an error.
cause110468=Refer to the resource exception in the error message and any appropriate resource-specific error logs.
action110468=Determine if administrative operations are required in the resource to resolve the transaction branch.
stack110469=false
messagedetail110469=An administrative client, such as the WebLogic Server Administration Console, issued a forced rollback operation and a participating resource responded to the rollback operation with an error.
cause110469=Refer to the resource exception in the error message and any appropriate resource-specific error logs.
action110469=Determine if administrative operations are required in the resource to resolve the transaction branch.
stack110470=false
messagedetail110470=The administrative request to roll back the transaction failed because the user is not authorized to perform the operation.
cause110470=The authenticated principal making the request does not have adequate privileges to perform a forced rollback operation on the transaction.
action110470=Authenticate using an identity with adequate privileges prior to invoking the operation.
stack110471=false
messagedetail110471=The administrative request to commit the transaction failed because the user is not authorized to perform the operation.
cause110471=The authenticated principal making the request does not have adequate privileges to perform a forced commit operation on the transaction.
action110471=Authenticate using an identity with adequate privileges prior to invoking the operation.
stack110472=false
messagedetail110472=The administrative request to roll back the transaction failed because the user is not authorized to perform the operation.
cause110472=The authenticated principal making the request does not have adequate privileges to perform a forced rollback operation on the transaction.
action110472=Authenticate using an identity with adequate privileges prior to invoking the operation.
stack110473=false
messagedetail110473=The administrative request to commit the transaction failed because the user is not authorized to perform the operation.
cause110473=The authenticated principal making the request does not have adequate privileges to perform a forced commit operation on the transaction.
action110473=Authenticate using an identity with adequate privileges prior to invoking the operation.
messagedetail110474=An error occurred while trying to advertise the name of the resource being registered with the transaction manager.
cause110474=There may be a problem with the JNDI provider, or another object is already bound to this context.
action110474=Contact My Oracle Support.
messagedetail110475=User identity [{0}] should not be attempting to directly invoke internal methods on the SubCoordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110475=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110475=Verify that client software is not directly invoking an internal WebLogic Server system object.
severity110476=32
messagedetail110476=The server has detected pending transactions during graceful shutdown. The server will wait for the pending transactions to complete before suspending the Remote Management Interface (RMI) service. A forced shutdown command can be issued to shut down the server immediately.
cause110476=The server has detected pending transactions during graceful shutdown.
action110476=No action is required. Use a forced shutdown command to ignore inflight work and shut down the server immediately.
severity110477=64
messagedetail110477=The weblogic.transaction.TransactionManager.unregisterResource() method was invoked for resource {0} with the blocking option enabled. This operation will block if there are any transactions active on the server that reference the resource, giving such in-progress transactions the chance to complete before removing the resource from the server. The timeout value of {1} seconds expired before all referring transactions could complete. When the timeout expires, the resource is unregistered from the server. Any remaining in-progress transactions that refer to the resource may not be able to complete.
cause110477=It was requested that the specified resource be unregistered from the transaction manager and transactions that refer to the resource still exist on the server.
action110477=Monitor inflight transactions to determine if there are still active transactions that depend on the unregistered resource. Options include using the Administration Console to manually resolve dependent transactions, or the resource may be redeployed for a sufficient period to allow the dependent transactions to complete.
severity110478=16
messagedetail110478=A logging last resource (LLR) is participating in a global one-phase transaction so the global transaction must use a LLR local transaction to complete the transaction. The LLR local transaction failed during local commit, so the status of the transaction with respect to the logging resource is unknown and the global transaction can't be completed. The transaction operations either all rolled back, all committed, or are blocked.
cause110478=If the logging last resource is a database, there are a number of possible root causes. Among them are: the database may have shut down or crashed during the call to local commit, the database connection may have failed, the database local transaction may have timed out, or the database may have detected a potential deadlock condition introduced by application operations within the local commit.
action110478=Examine the exception caused by the LLR resource to determine the root cause of the problem.
severity110479=16
messagedetail110479=A logging last resource (LLR) is participating in a global two-phase transaction so the global transaction must use a LLR local transaction to persist its global commit record to the logging resource. The LLR local transaction failed during local commit, so the status of the transaction with respect to the logging resource is unknown and the global transaction can't be completed. The transaction manager will periodically try test if the LLR local transaction committed by checking for the presence of the global commit record within the LLR transaction table. If the test determines that the global commit record was persisted, then the LLR local transaction committed, and the transaction manager will commit the remaining resources (branches) in the global transaction. If the test determines that global commit record was not persisted, then the LLR local transaction rolled back, and the transaction manager will rollback the remaining resources in the global transaction.
cause110479=If the logging last resource is a database, there are a number of possible root causes. Among them are: the database may have shutdown or crashed during the call to local commit, the database connection may have failed, the database local transaction may have timed out, or the database may have detected a potention dead-lock condition introduced by application operations within the local commit.
action110479=Examine the exception caused by the LLR resource to determine the root cause of the problem. Note that no action may be required as the transaction manager will periodically retry the transaction until it can automatically rollback or commit accordingly.
severity110480=32
messagedetail110480=A logging last resource (LLR) participated in a global two-phase transaction so the global transaction was required to use a LLR local transaction to persist its global commit record to the logging resource. The LLR local transaction failed during local commit, so the status of the transaction with respect to the logging resource was unknown and the global transaction could not be completed. The transaction manager was later able to determine if the LLR local transaction committed or rolled back by checking for the presence of the global commit record within the LLR transaction table. If the test determined that the global commit record was persisted, then the LLR local transaction committed, and the transaction manager is committing the remaining resources (branches) in the global transaction. If the test determined that global commit record was not persisted, then the LLR local transaction rolled back, and the transaction manager is rolling back the remaining resources in the global transaction.
cause110480=See previous log messages for the same transaction to determine the root cause.
action110480=See previous log messages for the same transaction to determine the root cause.
severity110482=4
messagedetail110482=While the server is running, the server's transaction manager may use any configured logging last resources (LLRs) to persist transaction state. If a configured LLR cannot be loaded during boot, then the server cannot boot, as the LLR may contain transaction records for committed two-phase transactions that have not completed committing all resources involved in the transaction.
cause110482=If the logging last resource is a JDBC LLR connection, there are a number of possible root causes. Among them are: the database may have shut down or crashed, the database connection may have failed during boot, or the database connection may have incorrect database permissions.
action110482=Examine the root exception thrown by the LLR to determine the root cause of the problem.
severity110483=64
messagedetail110483=This is a generic log message that indicates that there has been a change in the health of the JTA subsystem.
cause110483=An internal event has caused the JTA health state to transition to the normal state. Refer to previous health log entries for the conditions that have been corrected to trigger the state change.
action110483=No action is required.
severity110484=16
messagedetail110484=This is a generic log message that indicates that there has been a change in the health of the JTA subsystem.
cause110484=Refer to the message body for information regarding the events that caused the health change.
action110484=Refer to the message body for the cause of the JTA state change and take the appropriate action to correct the exception condition.
messagedetail110485=This is a generic log message that indicates that there has been a change in the health of the JTA subsystem.
cause110485=Refer to the message body for information regarding the events that caused the health change.
action110485=Refer to the message body for the cause of the JTA state change and take the appropriate action to correct the exception condition.
severity110486=16
messagedetail110486=The transaction manager has committed the global transaction but may not have informed all resource participants of the outcome. The pending resource is not known to exist in the system and is preventing the transaction from completing. The transaction will remain in the committing state until either the resource acknowledges the XAResource.commit call or until the abandon timeout expires at which time the transaction will be removed from the system possibly leaving pending transaction branches.
cause110486=The resource may have been undeployed or is unresponsive and declared unavailable.
action110486=Check for related server log messages that may provide additional details regarding the state of the resource. If the resource is undeployed, deploy the resource or the application module if the resource is application scoped. If a problem exists with the resource manager, correct the problem and redeploy the resource.
severity110487=16
messagedetail110487=The transaction manager has decided to abort the global transaction but may not have informed all resource participants of the outcome. The pending resource is not known to exist in the system and is preventing the transaction from completing. The transaction will remain in the rollback state until either the resource acknowledges the XAResource.rollback call or until the abandon timeout expires at which time the transaction will be removed from the system possibly leaving pending transaction branches.
cause110487=The resource may have been undeployed or is unresponsive and declared unavailable.
action110487=Check for related server log messages that may provide additional detail regarding the state of the resource. If the resource is undeployed, deploy the resource or the application module if the resource is application scoped. If a problem exists with the resource manager, correct the problem and redeploy the resource.
severity110488=16
messagedetail110488=The missing logging last resource (LLR) participated in one or more global transactions in a prior server run and may contain persisted transaction commit records that are necessary for resolving pending resource transaction branches. The transaction manager cannot proceed with recovery of XA resources until all transaction commit records have been processed.
cause110488=Prior to server restart, one or more global transactions were processed that had a LLR participant and may not have completed before the server was restarted. This potentially left a commit record in a LLR resource and prepared resource transaction branches that are awaiting a commit or rollback decision from the coordinator.
action110488=Redeploy the specified LLR resources, wait for all in progress transactions to complete, and shut down the server gracefully.
messagedetail114089=The user with identity [{0}] should not be attempting to directly invoke internal methods on the Coordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause114089=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action114089=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110490=The user with identity [{0}] should not be attempting to directly invoke internal methods on the Coordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110490=This might be a symptom of a potential security attack, or alternately, a problem with the "system" security identity of the server.
action110490=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110491=The user with identity [{0}] should not be attempting to directly invoke internal methods on the Coordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110491=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110491=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110492=The user with identity [{0}] should not be attempting to directly invoke internal methods on the Coordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110492=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110492=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110493=The user with identity [{0}] should not be attempting to directly invoke internal methods on the Coordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110493=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110493=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110494=The user with identity [{0}] should not be attempting to directly invoke internal methods on the Coordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110494=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110494=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110495=The user with identity [{0}] should not be attempting to directly invoke internal methods on the Coordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110495=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110495=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110496=The user with identity [{0}] should not be attempting to directly invoke internal methods on the Coordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110496=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110496=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110500=The user with identity [{0}] should not be attempting to directly invoke internal methods on the SubCoordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110500=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110500=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110501=The user with identity [{0}] should not be attempting to directly invoke internal methods on the SubCoordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110501=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110501=Verify that the client software is not directly invoking an internal WebLogic Server system object.
messagedetail110502=The user with identity [{0}] should not be attempting to directly invoke internal methods on the SubCoordinator object. This might subvert transactional integrity. Permission was denied and the attempt was ignored.
cause110502=This might be a symptom of a potential security attack or, alternatively, a problem with the "system" security identity of the server.
action110502=Verify that the client software is not directly invoking an internal WebLogic Server system object.
severity110503=16
messagedetail110503=The migrator (the Administration Server for manual JTA migration policy or the Singleton Master for automatic JTA migration policy) is not available. Will skip JTA Transaction Recovery Service (TRS) failback because isStrictOwnershipCheck is [false]. This may lead to potencial TLOG corruption if the TRS of {0} has been migrated to a backup server and the backup server is accessing the TLOG of {0}. More safety can be achieved by setting isStrictOwnershipCheck to [true].
cause110503=The Administration Server or Singleton Master is not running or cannot be reached.
action110503=Start Administration Server or Singleton Master before starting any Managed Server in the cluster.
messagedetail110504=The transaction service could not advertise the TransactionSynchronizationRegistry object in the server JNDI context.
cause110504=There may be a problem with the JNDI provider or another object is already bound to this context.
action110504=Contact My Oracle Support.
messagedetail110505=During the commit process, the transaction manager will wait until all resource managers response. Using this timeout, you can set the maximum time that a transaction manager will wait to complete a transaction during the termination of the transaction. If the value set for completion-timeout-seconds exceeds the value set for abandon-timeout-seconds, the abandon-timeout-seconds will effectively override completion-timeout-seconds. The default is 0 for backward compatibility, -1 for indefinitely wait.
cause110505=See the message detail.
action110505=Change the application to assign the proper TRANSACTION_COMPLETION_TIMEOUT_SECONDS_PROPERTY_KEY property value.
severity111001=64
messagedetail111001=The Transaction Manager does not have a Remote Management Interface (RMI) provider or a JNDI context provider configured that are required to support distributed transactions.
cause111001=There are no suitable RMI or JNDI providers configured.
action111001=Configure the appropriate RMI and JNDI context providers.
severity111002=64
messagedetail111002=The Transaction Manager is in distributed mode and can participate in distributed transactions.
cause111002=The Transaction Manager is in distributed mode and can participate in distributed transactions.
action111002=No action is required.
severity111003=64
messagedetail111003=An error was encountered while opening or creating the persistent store that was to be used for the transaction log.
cause111003=Refer to the associated exception for the cause.
action111003=No action is required.
severity111004=16
messagedetail111004=An error occurred while trying to set CoordinatorURL to use AdminChannel.
cause111004=An error occurred while trying to set CoordinatorURL to use AdminChannel.
action111004=Check for other log messages that give more information about the failure.
severity111005=64
messagedetail111005=An XA operation to the resource manager was taking a long time to complete. The transaction manager will allow subsequent XA calls to be made in an attempt to allow the transaction to complete.
cause111005=The call to the resource manager may have been affected by a server or network problem and could have been interrupted.
action111005=Verify that the resource manager is functioning properly and is accessible.
severity111006=16
messagedetail111006=An error occurred while trying to set CoordinatorURL to use the SSL port.
cause111006=An error occurred while trying to set CoordinatorURL to use the SSL port.
action111006=Check for other log messages that give more information about the failure.
messagedetail111007=This is a one-Phase transaction, the commit call will not be retried. It is unknown if the work for the transaction branch was committed or not
cause111007=Refer to the resource exception in the error message and any appropriate resource-specific error logs.
action111007=Determine if administrative operations are required in the resource to resolve the transaction branch.
severity111008=4
messagedetail111008=While the server is running, the server 's transaction manager may use Transaction Log(TLog) to persist transaction state. If a configured TLog cannot be loaded during boot, then the server cannot boot, as the TLog may contain transaction records for committed two-phase transactions that have not completed committing all resources involved in the transaction.
cause111008=The transaction log may contain transaction records for committed two-phase transactions that have not completed committing all resources involved in the transaction..
action111008=Check for other log messages that give more information about the failure.
severity111009=4
messagedetail111009=During WLS start up, an exception was caught at activateDeployemts.
cause111009=During WLS start up, an exception was caught at activateDeployemts.
action111009=Check for other log messages that give more information about the failure.
severity111010=4
messagedetail111010=An exception was caught at setPrimaryStore.
cause111010=An exception was caught at setPrimaryStore.
action111010=Check for other log messages that give more information about the failure.
severity111011=4
messagedetail111011=While the server is running, the server's transaction manager may use configured Transaction Log Primary Store to persist transaction state. If a configured Transaction Log Primary Store cannot be loaded during boot, then the server cannot boot, as the Transaction Log Primary Store may contain transaction records for committed two-phase transactions that have not completed committing all resources involved in the transaction.
cause111011=The Transaction Log Primary Store may contain transaction records for committed two-phase transactions that have not completed committing all resources involved in the transaction.
action111011=Examine the root exception thrown by the Transaction Log Primary Store to determine the root cause of the problem.
severity111012=4
messagedetail111012=An exception was caught at close store in retrying setPrimaryStore.
cause111012=An exception was caught at close store in retrying setPrimaryStore .
action111012=Check for other log messages that give more information about the failure.
severity111013=4
messagedetail111013=JDBC store log recovered while processing, then an exception occurred when init store.
cause111013=An exception occurred when init store.
action111013=Check for other log messages that give more information about the failure.
messagedetail111014=A resource that participates in a global distributed transaction that spans different servers, clusters or domains cannot be registered both as a NonXAResource and an XAResource using the same resource name. Doing so results in conflicts and the resource is unable to be registered.
cause111014=This resource is trying to be registered as a NonXAResource but was already registered as an XAResource.
action111014=Correct the configuration either by making the resource name unique or by making the resource consistently either an XAResource or a NonXAResource.
severity111015=64
messagedetail111015=The commit operation for transaction {0} timed out after {1} seconds.
cause111015=The application may take longer than the time that is specified in timeout-seconds in the JTA parameter before issuing the commit.
action111015=Increase the transaction timeout-seconds in the JTA parameter or tuning application.
messagedetail111016=Recovery is not possible as determiner resource can not be obtained {0}.
cause111016=Determiner resource may have been removed or is otherwise unobtainable.
action111016=Insure determiner resource can be obtained and has not been removed.
messagedetail111017=Encountered an exception while attempting to acquire a transaction manager for transactional annotation interceptors {0}.
cause111017=Examine the root exception to determine the cause of the problem.
action111017=Take appropriate action based on the cause.
severity111018=16
messagedetail111018=No ComponentInvocation is present for @Transactional annotation processing. The restriction on use of UserTransaction will not be enforced.
cause111018=No ComponentInvocation is present for @Transactional annotation processing.
action111018=No action is required.
severity111019=16
messagedetail111019=The server has detected pending transactions after graceful shutdown in ClientInitiatexTxShutdownService.stop. Continue to work.
cause111019=The server has detected pending transactions after graceful shutdown in ClientInitiatexTxShutdownService.stop. Continue to work.
action111019=No action is required. Use a forced shutdown command to ignore inflight work and shut down the server immediately.
severity111020=16
messagedetail111020=An issue occurred during cross-site recovery processing. This may be due to store connection issues.
cause111020=A lease store connection or other failures has occurred.
action111020=Refer to logs for information on the cause of failure.
severity111021=16
messagedetail111021=The JTA Security Interoperability Mode value "compatibility" is deprecated. Use "default" or "performance" instead.
cause111021=The domain JTA configuration specifies a value of "compatibility" for Security Interoperability Mode.
action111021=Modify the domain JTA configuration to specify a value of "default" or "performance" for Security Interoperability Mode.

