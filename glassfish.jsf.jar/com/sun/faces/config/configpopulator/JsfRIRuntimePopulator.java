package com.sun.faces.config.configpopulator;

import javax.faces.application.ApplicationConfigurationPopulator;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public final class JsfRIRuntimePopulator extends ApplicationConfigurationPopulator {
   public void populateApplicationConfiguration(Document toPopulate) {
      String ns = toPopulate.getDocumentElement().getNamespaceURI();
      Element faces_configElement = toPopulate.getDocumentElement();
      Element render_kitElement = toPopulate.createElementNS(ns, "factory");
      Element rendererElement = toPopulate.createElementNS(ns, "application-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.ApplicationFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "exception-handler-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.context.ExceptionHandlerFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "visit-context-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.component.visit.VisitContextFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "faces-context-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.context.FacesContextFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "client-window-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.lifecycle.ClientWindowFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "flash-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.context.flash.FlashFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "partial-view-context-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.context.PartialViewContextFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "lifecycle-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.lifecycle.LifecycleFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "render-kit-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.RenderKitFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "view-declaration-language-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.view.ViewDeclarationLanguageFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "tag-handler-delegate-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.facelets.tag.jsf.TagHandlerDelegateFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "external-context-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.context.ExternalContextFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "facelet-cache-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.facelets.impl.FaceletCacheFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "flow-handler-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.flow.FlowHandlerFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "search-expression-context-factory");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.component.search.SearchExpressionContextFactoryImpl"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "application");
      rendererElement = toPopulate.createElementNS(ns, "action-listener");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.ActionListenerImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "navigation-handler");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.NavigationHandlerImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "state-manager");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.StateManagerImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "view-handler");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.view.MultiViewHandler"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "resource-handler");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.resource.ResourceHandlerImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "search-expression-handler");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.component.search.SearchExpressionHandlerImpl"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "system-event-listener");
      Element renderer_classElement = toPopulate.createElementNS(ns, "system-event-listener-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.view.ViewScopeEventListener"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "system-event-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.event.PostConstructViewMapEvent"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "source-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIViewRoot"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "system-event-listener");
      renderer_classElement = toPopulate.createElementNS(ns, "system-event-listener-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.application.view.ViewScopeEventListener"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "system-event-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.event.PreDestroyViewMapEvent"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "source-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIViewRoot"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.BigDecimal"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.BigDecimalConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.BigInteger"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.BigIntegerConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Boolean"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.BooleanConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Byte"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.ByteConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Character"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.CharacterConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.DateTime"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.DateTimeConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Double"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.DoubleConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Float"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.FloatConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Integer"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.IntegerConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Long"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.LongConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Number"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.NumberConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Short"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.ShortConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.math.BigDecimal"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.BigDecimalConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.math.BigInteger"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.BigIntegerConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Boolean"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.BooleanConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Byte"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.ByteConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Character"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.CharacterConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Double"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.DoubleConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Float"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.FloatConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Integer"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.IntegerConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Long"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.LongConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Short"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.ShortConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "converter");
      rendererElement = toPopulate.createElementNS(ns, "converter-for-class");
      rendererElement.appendChild(toPopulate.createTextNode("java.lang.Enum"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "converter-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.convert.EnumConverter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "lifecycle");
      rendererElement = toPopulate.createElementNS(ns, "phase-listener");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.lifecycle.ELResolverInitPhaseListener"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "behavior");
      rendererElement = toPopulate.createElementNS(ns, "behavior-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.behavior.Ajax"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "behavior-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.behavior.AjaxBehavior"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "validator");
      rendererElement = toPopulate.createElementNS(ns, "validator-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Bean"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "validator-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.validator.BeanValidator"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "validator");
      rendererElement = toPopulate.createElementNS(ns, "validator-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.DoubleRange"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "validator-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.validator.DoubleRangeValidator"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "validator");
      rendererElement = toPopulate.createElementNS(ns, "validator-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Length"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "validator-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.validator.LengthValidator"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "validator");
      rendererElement = toPopulate.createElementNS(ns, "validator-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.LongRange"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "validator-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.validator.LongRangeValidator"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "validator");
      rendererElement = toPopulate.createElementNS(ns, "validator-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.RegularExpression"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "validator-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.validator.RegexValidator"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "validator");
      rendererElement = toPopulate.createElementNS(ns, "validator-id");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Required"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "validator-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.validator.RequiredValidator"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "validator");
      rendererElement = toPopulate.createElementNS(ns, "validator-id");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.ext.validator.CreditCardValidator"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "validator-class");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.ext.validator.CreditCardValidator"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.ext.focus"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.ext.component.UIFocus"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.ext.validateWholeBean"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.ext.component.UIValidateWholeBean"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("facelets.ui.Repeat"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.facelets.component.UIRepeat"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("facelets.ui.ComponentRef"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.facelets.tag.ui.ComponentRef"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("facelets.ui.Debug"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.facelets.tag.ui.UIDebug"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Composite"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.facelets.tag.jsf.CompositeComponentImpl"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.ComponentResourceContainer"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("com.sun.faces.component.ComponentResourceContainer"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "render-kit");
      rendererElement = toPopulate.createElementNS(ns, "render-kit-id");
      rendererElement.appendChild(toPopulate.createTextNode("HTML_BASIC"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("FocusFamily"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.ext.render.FocusHTMLRenderer"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.ext.render.FocusHTMLRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("facelets"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("facelets.ui.Repeat"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.facelets.component.RepeatRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "client-behavior-renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "client-behavior-renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.behavior.Ajax"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "client-behavior-renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.AjaxBehaviorRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Column"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIColumn"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Command"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UICommand"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Data"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIData"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Form"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIForm"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Graphic"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIGraphic"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.ImportConstants"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIImportConstants"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Input"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIInput"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Message"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIMessage"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Messages"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIMessages"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.NamingContainer"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UINamingContainer"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIOutput"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.OutcomeTarget"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIOutcomeTarget"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Panel"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIPanel"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.ViewParameter"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIViewParameter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.ViewAction"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIViewAction"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Parameter"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIParameter"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.SelectBoolean"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UISelectBoolean"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.SelectItem"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UISelectItem"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.SelectItems"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UISelectItems"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.SelectMany"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UISelectMany"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.SelectOne"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UISelectOne"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.ViewRoot"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIViewRoot"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.Websocket"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.UIWebsocket"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlColumn"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlColumn"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlCommandButton"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlCommandButton"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlCommandLink"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlCommandLink"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlCommandScript"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlCommandScript"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlDataTable"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlDataTable"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlForm"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlForm"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlGraphicImage"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlGraphicImage"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlInputFile"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlInputFile"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlInputHidden"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlInputHidden"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlInputSecret"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlInputSecret"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlInputText"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlInputText"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlInputTextarea"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlInputTextarea"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlMessage"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlMessage"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlMessages"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlMessages"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlOutputFormat"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlOutputFormat"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlOutputLabel"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlOutputLabel"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlOutputLink"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlOutputLink"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlOutcomeTargetLink"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlOutcomeTargetLink"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlOutcomeTargetButton"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlOutcomeTargetButton"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlOutputText"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlOutputText"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlPanelGrid"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlPanelGrid"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlPanelGroup"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlPanelGroup"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlSelectBooleanCheckbox"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlSelectBooleanCheckbox"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlSelectManyCheckbox"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlSelectManyCheckbox"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlSelectManyListbox"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlSelectManyListbox"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlSelectManyMenu"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlSelectManyMenu"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlSelectOneListbox"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlSelectOneListbox"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlSelectOneMenu"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlSelectOneMenu"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.HtmlSelectOneRadio"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlSelectOneRadio"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.OutputDoctype"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlDoctype"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.OutputHead"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlHead"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "component");
      rendererElement = toPopulate.createElementNS(ns, "component-type");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.OutputBody"));
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "component-class");
      rendererElement.appendChild(toPopulate.createTextNode("javax.faces.component.html.HtmlBody"));
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
      render_kitElement = toPopulate.createElementNS(ns, "render-kit");
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Command"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Button"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.ButtonRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Command"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Link"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.CommandLinkRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Command"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Script"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.CommandScriptRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Data"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Table"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.TableRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Form"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Form"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.FormRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Graphic"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Image"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.ImageRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Panel"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.passthrough.Element"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.PassthroughRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Input"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.File"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.FileRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Input"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Hidden"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.HiddenRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Input"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Secret"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.SecretRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Input"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Text"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.TextRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Input"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Textarea"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.TextareaRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Message"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Message"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.MessageRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Messages"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Messages"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.MessagesRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Format"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.OutputMessageRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Label"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.LabelRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Link"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.OutputLinkRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.OutcomeTarget"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Link"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.OutcomeTargetLinkRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.OutcomeTarget"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Button"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.OutcomeTargetButtonRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Text"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.TextRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Panel"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Grid"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.GridRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Panel"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Group"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.GroupRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.SelectBoolean"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Checkbox"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.CheckboxRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.SelectMany"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Checkbox"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.SelectManyCheckboxListRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.SelectMany"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Listbox"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.ListboxRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.SelectMany"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Menu"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.MenuRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.SelectOne"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Listbox"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.ListboxRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.SelectOne"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Menu"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.MenuRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.SelectOne"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Radio"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.RadioRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.NamingContainer"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Composite"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.CompositeRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.CompositeFacet"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.CompositeFacetRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.resource.Script"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.ScriptRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.resource.Stylesheet"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.StylesheetRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Doctype"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.DoctypeRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Head"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.HeadRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Output"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Body"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.BodyRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      rendererElement = toPopulate.createElementNS(ns, "renderer");
      renderer_classElement = toPopulate.createElementNS(ns, "component-family");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Script"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-type");
      renderer_classElement.appendChild(toPopulate.createTextNode("javax.faces.Websocket"));
      rendererElement.appendChild(renderer_classElement);
      renderer_classElement = toPopulate.createElementNS(ns, "renderer-class");
      renderer_classElement.appendChild(toPopulate.createTextNode("com.sun.faces.renderkit.html_basic.WebsocketRenderer"));
      rendererElement.appendChild(renderer_classElement);
      render_kitElement.appendChild(rendererElement);
      faces_configElement.appendChild(render_kitElement);
   }
}
