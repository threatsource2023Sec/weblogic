version=1.0
L10nPackage=weblogic.diagnostics.i18n
I18nPackage=weblogic.diagnostics.i18n
subsystem=Diagnostics

SMTPDefaultSubject=WLS Watch Notification: Watch ''{0}'' with severity ''{1}'' on server ''{2}'' has triggered at {3}
mismatchOperandTypes=The operands in the expression {1} {0} {2} are not of the same type.
patternSyntaxError=The regex pattern {0} in the query expression has a syntax error.
invalidQueryExpression=The query expression {0} is syntactically invalid.
unknownVariable=The variable name {0} is unknown and cannot be resolved.
mismatchedNodeType=The node name {0} is not of type {1}.
WLSTHelpDesc=WLST commands for the Diagnostics component.
WLSTExportDesc=The exportDiagnosticData command exports the diagnostic data created by the WebLogic Server to XML format in the offline mode.
WLSTExportSyntax=The exportDiagnosticData() command takes different arguments which can be supplied as key value pairs separated by comma. \n The different parameter names are listed below. \n @param logicalName The logical name of the log file being read. If not specified then defaults to "ServerLog". The different types of logs supported for offline access are HarvestedDataArchive, EventsDataArchive, ServerLog, DomainLog, HTTPAccessLog, WebAppLog, ConnectorLog, JMSMessageLog and JMSSAFMessageLog. \n @param logName - This parameter refers to the base log file name containing the log data to be exported. If not specified then defaults to "myserver.log"\n @param storeDir - The location of the diagnostic store for the server. If not specified then defaults to "../data/store/diagnostics"\n @param logRotationDir - The directory containing the old rotated log files. If not specified defaults to "."\n @param query - An expression specifying the filter condition for the data records to be included in the result set. If not specified defaults to an empty string which will return all the data.\n @param beginTime - The timestamp (inclusive) of the earliest record to be added to the result set. If not specified defaults to 0\n @param endTime - The timestamp (exclusive) of the latest record to be added to the result set. If not specified defaults to Long.MAX_VALUE\n @exportFileName - The name of the file to which the data is exported, defaults to export.xml if not specified by the user. \n @elfFields - Applicable for HTTP Access logs only if this is in the Extended format. See WebServerLogMBean.getELFFields() \n
WLSTExportExample=This will export all the data from the server log named server1.log and its rotated files from the current dir to a export file called foo.xml.\n exportDiagnosticData(logicalName="ServerLog",logName="server.log",exportFileName="foo.xml")
DomainRuntimeNamespaceWarningText=The {0} namespace is valid only on the administration server.
InvalidHarvesterNamespaceText=The specified harvester namespace, "{0}", is invalid; valid namespaces are "ServerRuntime" and "DomainRuntime".
BadHarvesterVariableName=The Harvester watch variable "{0}" defined in watch "{1}" is invalid. The variable name should be comprised of an optional type (enclosed in square brackets - "[]"), followed by the ObjectName of the MBean instance(optional if type is provided), followed by a pair of forward slash characters - "//" and finally by the MBean attribute name, which is mandatory. An example of a Harvester watch variable expression is '${[weblogic.management.configuration.ServerRuntime]mydomain:Name=myserver,Type=ServerRuntime//SocketsOpenedTotalCount} >= 5'
BadHarvesterVariableType=The type name portion, "{0}", of the variable is invalid. The type name must represent a well-formed Java classname.
BadHarvesterVariableAttr=The attribute name portion, "{0}", of the variable is invalid. The attribute name must represent a well-formed Java identifier.
HarvesterVariableTypeMismatch=In the Harvester watch variable, "{0}", the provided type name, "{2}", does not match the actual type name, "{3}", for the provided instance, "{1}". Ignoring provided type.
InvalidObjectName=The instance name, "{0}" is invalid. It must conform to valid JMX ObjectName syntax.
EmptyAttributeName=There is no attribute name provided. Attribute names are a mandatory part of the Harvester watch variable syntax.
MissingBothTypeAndInstanceName=Neither a type name nor an instance name is specified. The syntax requires that one of these to be present.
ErrorsOcurredParsingHarvesterVariableName=The following {3} errors occurred whilst parsing Harvester watch variable "{0}" (defined in watch "{1}"):{2}
ErrorsOccurredValidatingWatchedValues=The following {1} errors occurred whilst validating Harvester watch rules:{0}
InstanceLabel=instance
InstancesLabel=instances
TypeLabel=type
TypesLabel=types
AttributeLabel=attribute
AttributesLabel=attributes
ProviderLabel=provider
ProvidersLabel=providers
EnabledLabel=enabled
DisabledLabel=disabled
HarvestedLabel=harvested
UnharvestedLabel=unharvested
PluginStateInitialLabel=initial
PluginStateActiveLabel=active
PluginStateShutdownLabel=shutdown
PluginStateUndefinedLabel=***ERROR***
HarvesterStateActiveLabel=active
HarvesterStateInactiveLabel=inactive
YesLabel=yes
NoLabel=no
MaybeLabel=maybe
NullParamMessage=The required parameter, "{0}", is null.
InvalidParamMessage=The provided "{0}" value "{1}" is invalid.
ConfigLoadingProblemMessage=A problem occurred consuming the harvester configuration.
InvalidPluginStateMessage=A request was made to plugin "{0}" while it was in an inappropriate state. The state at time of call was "{1}".
HarvesterNotAvailableMessage="The harvester is not currently active for this server."
AmbiguousTypeNameMessage=The instance name "{0}" is ambiguous. It exists in both type "{2}" in provider "{1}" and in type "{4}" in provider "{3}".
ItemNotHarvestableMessage=The {0} named "{1}" is not harvestable.
NoTypeConfigMessage=There is no Harvester configuration data for harvester type "{0}".
AmbiguousInstanceNameMessage=The instance name "{0}" is ambiguous. It exists in both type "{2}" in provider "{1}" and in type "{4}" in provider "{3}".
NotHarvestableMessage=The following {0} are not harvestable for type "{1}": {2}
DuplicateProviderMessage=The provider name "{0}" is registered twice.
IllegalOperationOnRunningHarvesterMessage=An attempt was made to alter the Harvester after it is running.
InstanceNotRegisteredMessage=A provided instance is not registered.
TypeNotDefinedMessage=A provided type does not exist.
InstancesDoNotExistMessage=The following Harvestable instances do not exist: {0}.
TypesDoNotExistMessage=The following Harvestable types do not exist: {0}.
HarvesterTypeNotFoundMessage=Type named "{0}" was not found in this domain.
GenericHarvesterProblemMessage=An unexpected internal problem has occurred in the Harvester. Additional information on this problem is provided when the Harvester debug is active.
NoJDBCSystemResourceConfigured=The WLDFServerDiagnosticMBean for server "{0}" has JDBC archive but the DiagnosticJDBCResource property does not refer to any JDBCSystemResource.
JDBCSystemResourceNotTargettedToServer=The WLDFServerDiagnosticMBean for server "{0}" has JDBC archive that refers to JDBCSystemResource "{1}" which is not targetted to this server.
SNMPNotificationAgentUndefinedError=No SNMP agent instance is available for sending SNMP traps for Watch notifications.
MailSessionIsUndefined=A diagnostic SMTP notification refers to an undefined mail session named "{0}".
MailSessionIsNotOnServer=An SMTP notification refers to an mail session named "{0}" that is not targeted to this server ("{1}").
UndefinedMailRecipients=The following recipients, defined in diagnostics SMTP notification named "{1}", are undefined on referenced mail session named "{2}": {0}
InconsistentTypesInWatchInstVarMessage=The instance named "{0}" was specified to be of type "{1}" but is actually of type "{2}".
WatchInstanceMetricNotFoundMessage=The attribute "{2}" was specified in a watch rule for instance "{1}", but that metric does not exist in any of the potential types for the instance: "{0}".
WatchTypeMetricNotFoundMessage=Harvestable attribute named "{1}" was defined for type "{0}" in a watch rule, but that metric does not exist.
ProblemDuringWatchProcessingMessage=A problem occurred during the processing of the Harvester watch rules.
ConflictingTypesInWatchRulesMessage=Instance "{0}" is specified with different types in watch rules. The conflicting types are "{1}" and "{2}".
ModelMBeanDoesNotPublishTypeMessage=Custom ModelMBean "{1}" does not publish it's type so it cannot be watched.
AttributeIsMarkedUnharvestableMessage=The attribute "{2}" in instance "{1}" is defined for the type "{0}" but is not a harvestable attribute.
WatchListMessage=[Occurs in Watches: {0}]
PendingTaskStatusText=Pending
ExecutingTaskStatusText=Executing
CompletedTaskStatusText=Completed
CancelledTaskStatusText=Cancelled
FailedTaskStatusText=Failed
DataRetirementTaskDescriptionText=Data retirement
SizeBasedDataRetirementTaskDescriptionText=Size based data retirement
AgeBasedDataRetirementTaskDescriptionText=Age based data retirement
DuplicateRetirementsErrorText=Duplicate data retirements for archive(s): {0}
InvalidArchiveNameForDataRetirementText=Invalid archive name in data retirement configuration for "{0}". Permissible values are: {1}
InvalidRetirementTimeText=Invalid retirement time {1} for data retirement "{0}" is not in the range [0..23]
InvalidHarvesterInstanceNameText=The instance name specified is not a valid ObjectName or pattern supported by the WLDF Harvester.
InvalidHarvesterInstanceNamePatternText=The instance name pattern specified is not a valid pattern supported by the WLDF Harvester.
AccessorClientIOException="Failed to get an HTTP_OK response; response received {0}"
AccessorClientInvalidImageName="{0} is not a valid Diagnostic Image file."
AccessorClientInvalidImageEntryName="{1} is not a valid entry for Diagnostic Image file {0}."
AccessorClientImageEntryNotFound="Image entry {1} not found in Diagnostic Image file {0}."
RuntimeControlAlreadyExists=The WLDF system resource named {0} already exists!!");
AttemptedToDeleteDomainConfiguredResource=Unable to delete system resource {0}, it is either a built-in or domain-configured resource.
InputParams=Input parameters:
ExportingDiagnosticDataMsg=Exporting diagnostic data to {0}.
ExportDiagnosticDataSuccessMsg=Exported diagnostic data successfully.
LoggingImageSourceTimedOutMsg=The Logging image source has timed out. The contents of the log file {0} could not be fully written to the diagnostic image.
InvalidDiagnosticDataExportFormatMsg=The export format {0} is not valid. Only csv, txt and xml formats are supported.
NoPatchesSpecifiedWithDebugPatchActivation=No patches specified while activating/deactivating dynamic debug patches.
DebugPatchDoesnotExist()=Debug patch "{0}" does not exist.
DebugPatchAdditionalInfo()=\nAdditional Information:\n
DebugPatchInfoNotAvailable()=Additional information for debug patch "{0}" is not available.
InstrumentationAgentNotAvailable=Instrumentation agent is not available.
StoreNotAvailable=Persistent store is not available for archive {0}.
ArchiveDoesNotSupportUpdate=Archive "{0}" does not support update operation.
ApplicationNotFoundDuringPatchActivation=Unable to activate debug patch since specified application "{0}" cannot be found.
ApplicationInPartitionNotFoundDuringPatchActivation=Unable to activate debug patch since specified application "{0}" in partition "{1}" cannot be found.
ModuleInApplicationNotFoundDuringPatchActivation=Unable to activate debug patch since specified module "{1}" in application "{0}" cannot be found.
ModuleInApplicationInPartitionNotFoundDuringPatchActivation=Unable to activate debug patch since specified module "{1}" in application "{0}" within partition "{2}" cannot be found.
PatchActivationFileDoesNotExist=Cannot find jar file for patch {0}. Note that only one patch may be activated at a time and a valid patch.jar file must exist in the {1} directory under the domain directory.
InvalidAccessorNameForRemoval=The WLDF Accessor {0} cannot be removed.
QueryTimestampRangeMsg=Executing WLDF Accessor query for data records between {0} and {1}.
InvalidDumpDirectory=Specified dump directory {0} is not within server directory {1}
ImageFileDoesNotExist=Image file does not exist for {0}.
ImageFileNullOrEmpty=Image file parameter is null or empty.

