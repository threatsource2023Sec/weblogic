package encodings;

import java.util.Arrays;
import org.python.compiler.APIVersion;
import org.python.compiler.Filename;
import org.python.compiler.MTime;
import org.python.core.CodeBootstrap;
import org.python.core.CodeLoader;
import org.python.core.Py;
import org.python.core.PyCode;
import org.python.core.PyDictionary;
import org.python.core.PyFrame;
import org.python.core.PyFunction;
import org.python.core.PyFunctionTable;
import org.python.core.PyObject;
import org.python.core.PyRunnable;
import org.python.core.PyRunnableBootstrap;
import org.python.core.PyString;
import org.python.core.PyUnicode;
import org.python.core.ThreadState;
import org.python.core.imp;

@APIVersion(37)
@MTime(1498849383000L)
@Filename("encodings/cp869.py")
public class cp869$py extends PyFunctionTable implements PyRunnable {
   static cp869$py self;
   static final PyCode f$0;
   static final PyCode Codec$1;
   static final PyCode encode$2;
   static final PyCode decode$3;
   static final PyCode IncrementalEncoder$4;
   static final PyCode encode$5;
   static final PyCode IncrementalDecoder$6;
   static final PyCode decode$7;
   static final PyCode StreamWriter$8;
   static final PyCode StreamReader$9;
   static final PyCode getregentry$10;

   public PyObject f$0(PyFrame var1, ThreadState var2) {
      var1.setglobal("__doc__", PyString.fromInterned(" Python Character Mapping Codec generated from 'VENDORS/MICSFT/PC/CP869.TXT' with gencodec.py.\n\n"));
      var1.setline(3);
      PyString.fromInterned(" Python Character Mapping Codec generated from 'VENDORS/MICSFT/PC/CP869.TXT' with gencodec.py.\n\n");
      var1.setline(5);
      PyObject var3 = imp.importOne("codecs", var1, -1);
      var1.setlocal("codecs", var3);
      var3 = null;
      var1.setline(9);
      PyObject[] var5 = new PyObject[]{var1.getname("codecs").__getattr__("Codec")};
      PyObject var4 = Py.makeClass("Codec", var5, Codec$1);
      var1.setlocal("Codec", var4);
      var4 = null;
      Arrays.fill(var5, (Object)null);
      var1.setline(17);
      var5 = new PyObject[]{var1.getname("codecs").__getattr__("IncrementalEncoder")};
      var4 = Py.makeClass("IncrementalEncoder", var5, IncrementalEncoder$4);
      var1.setlocal("IncrementalEncoder", var4);
      var4 = null;
      Arrays.fill(var5, (Object)null);
      var1.setline(21);
      var5 = new PyObject[]{var1.getname("codecs").__getattr__("IncrementalDecoder")};
      var4 = Py.makeClass("IncrementalDecoder", var5, IncrementalDecoder$6);
      var1.setlocal("IncrementalDecoder", var4);
      var4 = null;
      Arrays.fill(var5, (Object)null);
      var1.setline(25);
      var5 = new PyObject[]{var1.getname("Codec"), var1.getname("codecs").__getattr__("StreamWriter")};
      var4 = Py.makeClass("StreamWriter", var5, StreamWriter$8);
      var1.setlocal("StreamWriter", var4);
      var4 = null;
      Arrays.fill(var5, (Object)null);
      var1.setline(28);
      var5 = new PyObject[]{var1.getname("Codec"), var1.getname("codecs").__getattr__("StreamReader")};
      var4 = Py.makeClass("StreamReader", var5, StreamReader$9);
      var1.setlocal("StreamReader", var4);
      var4 = null;
      Arrays.fill(var5, (Object)null);
      var1.setline(33);
      var5 = Py.EmptyObjects;
      PyFunction var6 = new PyFunction(var1.f_globals, var5, getregentry$10, (PyObject)null);
      var1.setlocal("getregentry", var6);
      var3 = null;
      var1.setline(46);
      var3 = var1.getname("codecs").__getattr__("make_identity_dict").__call__(var2, var1.getname("range").__call__((ThreadState)var2, (PyObject)Py.newInteger(256)));
      var1.setlocal("decoding_map", var3);
      var3 = null;
      var1.setline(47);
      var1.getname("decoding_map").__getattr__("update").__call__((ThreadState)var2, (PyObject)(new PyDictionary(new PyObject[]{Py.newInteger(128), var1.getname("None"), Py.newInteger(129), var1.getname("None"), Py.newInteger(130), var1.getname("None"), Py.newInteger(131), var1.getname("None"), Py.newInteger(132), var1.getname("None"), Py.newInteger(133), var1.getname("None"), Py.newInteger(134), Py.newInteger(902), Py.newInteger(135), var1.getname("None"), Py.newInteger(136), Py.newInteger(183), Py.newInteger(137), Py.newInteger(172), Py.newInteger(138), Py.newInteger(166), Py.newInteger(139), Py.newInteger(8216), Py.newInteger(140), Py.newInteger(8217), Py.newInteger(141), Py.newInteger(904), Py.newInteger(142), Py.newInteger(8213), Py.newInteger(143), Py.newInteger(905), Py.newInteger(144), Py.newInteger(906), Py.newInteger(145), Py.newInteger(938), Py.newInteger(146), Py.newInteger(908), Py.newInteger(147), var1.getname("None"), Py.newInteger(148), var1.getname("None"), Py.newInteger(149), Py.newInteger(910), Py.newInteger(150), Py.newInteger(939), Py.newInteger(151), Py.newInteger(169), Py.newInteger(152), Py.newInteger(911), Py.newInteger(153), Py.newInteger(178), Py.newInteger(154), Py.newInteger(179), Py.newInteger(155), Py.newInteger(940), Py.newInteger(156), Py.newInteger(163), Py.newInteger(157), Py.newInteger(941), Py.newInteger(158), Py.newInteger(942), Py.newInteger(159), Py.newInteger(943), Py.newInteger(160), Py.newInteger(970), Py.newInteger(161), Py.newInteger(912), Py.newInteger(162), Py.newInteger(972), Py.newInteger(163), Py.newInteger(973), Py.newInteger(164), Py.newInteger(913), Py.newInteger(165), Py.newInteger(914), Py.newInteger(166), Py.newInteger(915), Py.newInteger(167), Py.newInteger(916), Py.newInteger(168), Py.newInteger(917), Py.newInteger(169), Py.newInteger(918), Py.newInteger(170), Py.newInteger(919), Py.newInteger(171), Py.newInteger(189), Py.newInteger(172), Py.newInteger(920), Py.newInteger(173), Py.newInteger(921), Py.newInteger(174), Py.newInteger(171), Py.newInteger(175), Py.newInteger(187), Py.newInteger(176), Py.newInteger(9617), Py.newInteger(177), Py.newInteger(9618), Py.newInteger(178), Py.newInteger(9619), Py.newInteger(179), Py.newInteger(9474), Py.newInteger(180), Py.newInteger(9508), Py.newInteger(181), Py.newInteger(922), Py.newInteger(182), Py.newInteger(923), Py.newInteger(183), Py.newInteger(924), Py.newInteger(184), Py.newInteger(925), Py.newInteger(185), Py.newInteger(9571), Py.newInteger(186), Py.newInteger(9553), Py.newInteger(187), Py.newInteger(9559), Py.newInteger(188), Py.newInteger(9565), Py.newInteger(189), Py.newInteger(926), Py.newInteger(190), Py.newInteger(927), Py.newInteger(191), Py.newInteger(9488), Py.newInteger(192), Py.newInteger(9492), Py.newInteger(193), Py.newInteger(9524), Py.newInteger(194), Py.newInteger(9516), Py.newInteger(195), Py.newInteger(9500), Py.newInteger(196), Py.newInteger(9472), Py.newInteger(197), Py.newInteger(9532), Py.newInteger(198), Py.newInteger(928), Py.newInteger(199), Py.newInteger(929), Py.newInteger(200), Py.newInteger(9562), Py.newInteger(201), Py.newInteger(9556), Py.newInteger(202), Py.newInteger(9577), Py.newInteger(203), Py.newInteger(9574), Py.newInteger(204), Py.newInteger(9568), Py.newInteger(205), Py.newInteger(9552), Py.newInteger(206), Py.newInteger(9580), Py.newInteger(207), Py.newInteger(931), Py.newInteger(208), Py.newInteger(932), Py.newInteger(209), Py.newInteger(933), Py.newInteger(210), Py.newInteger(934), Py.newInteger(211), Py.newInteger(935), Py.newInteger(212), Py.newInteger(936), Py.newInteger(213), Py.newInteger(937), Py.newInteger(214), Py.newInteger(945), Py.newInteger(215), Py.newInteger(946), Py.newInteger(216), Py.newInteger(947), Py.newInteger(217), Py.newInteger(9496), Py.newInteger(218), Py.newInteger(9484), Py.newInteger(219), Py.newInteger(9608), Py.newInteger(220), Py.newInteger(9604), Py.newInteger(221), Py.newInteger(948), Py.newInteger(222), Py.newInteger(949), Py.newInteger(223), Py.newInteger(9600), Py.newInteger(224), Py.newInteger(950), Py.newInteger(225), Py.newInteger(951), Py.newInteger(226), Py.newInteger(952), Py.newInteger(227), Py.newInteger(953), Py.newInteger(228), Py.newInteger(954), Py.newInteger(229), Py.newInteger(955), Py.newInteger(230), Py.newInteger(956), Py.newInteger(231), Py.newInteger(957), Py.newInteger(232), Py.newInteger(958), Py.newInteger(233), Py.newInteger(959), Py.newInteger(234), Py.newInteger(960), Py.newInteger(235), Py.newInteger(961), Py.newInteger(236), Py.newInteger(963), Py.newInteger(237), Py.newInteger(962), Py.newInteger(238), Py.newInteger(964), Py.newInteger(239), Py.newInteger(900), Py.newInteger(240), Py.newInteger(173), Py.newInteger(241), Py.newInteger(177), Py.newInteger(242), Py.newInteger(965), Py.newInteger(243), Py.newInteger(966), Py.newInteger(244), Py.newInteger(967), Py.newInteger(245), Py.newInteger(167), Py.newInteger(246), Py.newInteger(968), Py.newInteger(247), Py.newInteger(901), Py.newInteger(248), Py.newInteger(176), Py.newInteger(249), Py.newInteger(168), Py.newInteger(250), Py.newInteger(969), Py.newInteger(251), Py.newInteger(971), Py.newInteger(252), Py.newInteger(944), Py.newInteger(253), Py.newInteger(974), Py.newInteger(254), Py.newInteger(9632), Py.newInteger(255), Py.newInteger(160)})));
      var1.setline(180);
      PyUnicode var7 = PyUnicode.fromInterned("\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007f\ufffe\ufffe\ufffe\ufffe\ufffe\ufffeΆ\ufffe·¬¦‘’Έ―ΉΊΪΌ\ufffe\ufffeΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄\u00ad±υφχ§ψ΅°¨ωϋΰώ■ ");
      var1.setlocal("decoding_table", var7);
      var3 = null;
      var1.setline(441);
      PyObject[] var10002 = new PyObject[494];
      set$$0(var10002);
      PyDictionary var8 = new PyDictionary(var10002);
      var1.setlocal("encoding_map", var8);
      var3 = null;
      var1.f_lasti = -1;
      return Py.None;
   }

   public PyObject Codec$1(PyFrame var1, ThreadState var2) {
      var1.setlocal("__module__", var1.getname("__name__"));
      var1.setline(11);
      PyObject[] var3 = new PyObject[]{PyString.fromInterned("strict")};
      PyFunction var4 = new PyFunction(var1.f_globals, var3, encode$2, (PyObject)null);
      var1.setlocal("encode", var4);
      var3 = null;
      var1.setline(14);
      var3 = new PyObject[]{PyString.fromInterned("strict")};
      var4 = new PyFunction(var1.f_globals, var3, decode$3, (PyObject)null);
      var1.setlocal("decode", var4);
      var3 = null;
      return var1.getf_locals();
   }

   public PyObject encode$2(PyFrame var1, ThreadState var2) {
      var1.setline(12);
      PyObject var3 = var1.getglobal("codecs").__getattr__("charmap_encode").__call__(var2, var1.getlocal(1), var1.getlocal(2), var1.getglobal("encoding_map"));
      var1.f_lasti = -1;
      return var3;
   }

   public PyObject decode$3(PyFrame var1, ThreadState var2) {
      var1.setline(15);
      PyObject var3 = var1.getglobal("codecs").__getattr__("charmap_decode").__call__(var2, var1.getlocal(1), var1.getlocal(2), var1.getglobal("decoding_table"));
      var1.f_lasti = -1;
      return var3;
   }

   public PyObject IncrementalEncoder$4(PyFrame var1, ThreadState var2) {
      var1.setlocal("__module__", var1.getname("__name__"));
      var1.setline(18);
      PyObject[] var3 = new PyObject[]{var1.getname("False")};
      PyFunction var4 = new PyFunction(var1.f_globals, var3, encode$5, (PyObject)null);
      var1.setlocal("encode", var4);
      var3 = null;
      return var1.getf_locals();
   }

   public PyObject encode$5(PyFrame var1, ThreadState var2) {
      var1.setline(19);
      PyObject var3 = var1.getglobal("codecs").__getattr__("charmap_encode").__call__(var2, var1.getlocal(1), var1.getlocal(0).__getattr__("errors"), var1.getglobal("encoding_map")).__getitem__(Py.newInteger(0));
      var1.f_lasti = -1;
      return var3;
   }

   public PyObject IncrementalDecoder$6(PyFrame var1, ThreadState var2) {
      var1.setlocal("__module__", var1.getname("__name__"));
      var1.setline(22);
      PyObject[] var3 = new PyObject[]{var1.getname("False")};
      PyFunction var4 = new PyFunction(var1.f_globals, var3, decode$7, (PyObject)null);
      var1.setlocal("decode", var4);
      var3 = null;
      return var1.getf_locals();
   }

   public PyObject decode$7(PyFrame var1, ThreadState var2) {
      var1.setline(23);
      PyObject var3 = var1.getglobal("codecs").__getattr__("charmap_decode").__call__(var2, var1.getlocal(1), var1.getlocal(0).__getattr__("errors"), var1.getglobal("decoding_table")).__getitem__(Py.newInteger(0));
      var1.f_lasti = -1;
      return var3;
   }

   public PyObject StreamWriter$8(PyFrame var1, ThreadState var2) {
      var1.setlocal("__module__", var1.getname("__name__"));
      var1.setline(26);
      return var1.getf_locals();
   }

   public PyObject StreamReader$9(PyFrame var1, ThreadState var2) {
      var1.setlocal("__module__", var1.getname("__name__"));
      var1.setline(29);
      return var1.getf_locals();
   }

   public PyObject getregentry$10(PyFrame var1, ThreadState var2) {
      var1.setline(34);
      PyObject var10000 = var1.getglobal("codecs").__getattr__("CodecInfo");
      PyObject[] var3 = new PyObject[]{PyString.fromInterned("cp869"), var1.getglobal("Codec").__call__(var2).__getattr__("encode"), var1.getglobal("Codec").__call__(var2).__getattr__("decode"), var1.getglobal("IncrementalEncoder"), var1.getglobal("IncrementalDecoder"), var1.getglobal("StreamReader"), var1.getglobal("StreamWriter")};
      String[] var4 = new String[]{"name", "encode", "decode", "incrementalencoder", "incrementaldecoder", "streamreader", "streamwriter"};
      var10000 = var10000.__call__(var2, var3, var4);
      var3 = null;
      PyObject var5 = var10000;
      var1.f_lasti = -1;
      return var5;
   }

   private static void set$$0(PyObject[] var0) {
      var0[0] = Py.newInteger(0);
      var0[1] = Py.newInteger(0);
      var0[2] = Py.newInteger(1);
      var0[3] = Py.newInteger(1);
      var0[4] = Py.newInteger(2);
      var0[5] = Py.newInteger(2);
      var0[6] = Py.newInteger(3);
      var0[7] = Py.newInteger(3);
      var0[8] = Py.newInteger(4);
      var0[9] = Py.newInteger(4);
      var0[10] = Py.newInteger(5);
      var0[11] = Py.newInteger(5);
      var0[12] = Py.newInteger(6);
      var0[13] = Py.newInteger(6);
      var0[14] = Py.newInteger(7);
      var0[15] = Py.newInteger(7);
      var0[16] = Py.newInteger(8);
      var0[17] = Py.newInteger(8);
      var0[18] = Py.newInteger(9);
      var0[19] = Py.newInteger(9);
      var0[20] = Py.newInteger(10);
      var0[21] = Py.newInteger(10);
      var0[22] = Py.newInteger(11);
      var0[23] = Py.newInteger(11);
      var0[24] = Py.newInteger(12);
      var0[25] = Py.newInteger(12);
      var0[26] = Py.newInteger(13);
      var0[27] = Py.newInteger(13);
      var0[28] = Py.newInteger(14);
      var0[29] = Py.newInteger(14);
      var0[30] = Py.newInteger(15);
      var0[31] = Py.newInteger(15);
      var0[32] = Py.newInteger(16);
      var0[33] = Py.newInteger(16);
      var0[34] = Py.newInteger(17);
      var0[35] = Py.newInteger(17);
      var0[36] = Py.newInteger(18);
      var0[37] = Py.newInteger(18);
      var0[38] = Py.newInteger(19);
      var0[39] = Py.newInteger(19);
      var0[40] = Py.newInteger(20);
      var0[41] = Py.newInteger(20);
      var0[42] = Py.newInteger(21);
      var0[43] = Py.newInteger(21);
      var0[44] = Py.newInteger(22);
      var0[45] = Py.newInteger(22);
      var0[46] = Py.newInteger(23);
      var0[47] = Py.newInteger(23);
      var0[48] = Py.newInteger(24);
      var0[49] = Py.newInteger(24);
      var0[50] = Py.newInteger(25);
      var0[51] = Py.newInteger(25);
      var0[52] = Py.newInteger(26);
      var0[53] = Py.newInteger(26);
      var0[54] = Py.newInteger(27);
      var0[55] = Py.newInteger(27);
      var0[56] = Py.newInteger(28);
      var0[57] = Py.newInteger(28);
      var0[58] = Py.newInteger(29);
      var0[59] = Py.newInteger(29);
      var0[60] = Py.newInteger(30);
      var0[61] = Py.newInteger(30);
      var0[62] = Py.newInteger(31);
      var0[63] = Py.newInteger(31);
      var0[64] = Py.newInteger(32);
      var0[65] = Py.newInteger(32);
      var0[66] = Py.newInteger(33);
      var0[67] = Py.newInteger(33);
      var0[68] = Py.newInteger(34);
      var0[69] = Py.newInteger(34);
      var0[70] = Py.newInteger(35);
      var0[71] = Py.newInteger(35);
      var0[72] = Py.newInteger(36);
      var0[73] = Py.newInteger(36);
      var0[74] = Py.newInteger(37);
      var0[75] = Py.newInteger(37);
      var0[76] = Py.newInteger(38);
      var0[77] = Py.newInteger(38);
      var0[78] = Py.newInteger(39);
      var0[79] = Py.newInteger(39);
      var0[80] = Py.newInteger(40);
      var0[81] = Py.newInteger(40);
      var0[82] = Py.newInteger(41);
      var0[83] = Py.newInteger(41);
      var0[84] = Py.newInteger(42);
      var0[85] = Py.newInteger(42);
      var0[86] = Py.newInteger(43);
      var0[87] = Py.newInteger(43);
      var0[88] = Py.newInteger(44);
      var0[89] = Py.newInteger(44);
      var0[90] = Py.newInteger(45);
      var0[91] = Py.newInteger(45);
      var0[92] = Py.newInteger(46);
      var0[93] = Py.newInteger(46);
      var0[94] = Py.newInteger(47);
      var0[95] = Py.newInteger(47);
      var0[96] = Py.newInteger(48);
      var0[97] = Py.newInteger(48);
      var0[98] = Py.newInteger(49);
      var0[99] = Py.newInteger(49);
      var0[100] = Py.newInteger(50);
      var0[101] = Py.newInteger(50);
      var0[102] = Py.newInteger(51);
      var0[103] = Py.newInteger(51);
      var0[104] = Py.newInteger(52);
      var0[105] = Py.newInteger(52);
      var0[106] = Py.newInteger(53);
      var0[107] = Py.newInteger(53);
      var0[108] = Py.newInteger(54);
      var0[109] = Py.newInteger(54);
      var0[110] = Py.newInteger(55);
      var0[111] = Py.newInteger(55);
      var0[112] = Py.newInteger(56);
      var0[113] = Py.newInteger(56);
      var0[114] = Py.newInteger(57);
      var0[115] = Py.newInteger(57);
      var0[116] = Py.newInteger(58);
      var0[117] = Py.newInteger(58);
      var0[118] = Py.newInteger(59);
      var0[119] = Py.newInteger(59);
      var0[120] = Py.newInteger(60);
      var0[121] = Py.newInteger(60);
      var0[122] = Py.newInteger(61);
      var0[123] = Py.newInteger(61);
      var0[124] = Py.newInteger(62);
      var0[125] = Py.newInteger(62);
      var0[126] = Py.newInteger(63);
      var0[127] = Py.newInteger(63);
      var0[128] = Py.newInteger(64);
      var0[129] = Py.newInteger(64);
      var0[130] = Py.newInteger(65);
      var0[131] = Py.newInteger(65);
      var0[132] = Py.newInteger(66);
      var0[133] = Py.newInteger(66);
      var0[134] = Py.newInteger(67);
      var0[135] = Py.newInteger(67);
      var0[136] = Py.newInteger(68);
      var0[137] = Py.newInteger(68);
      var0[138] = Py.newInteger(69);
      var0[139] = Py.newInteger(69);
      var0[140] = Py.newInteger(70);
      var0[141] = Py.newInteger(70);
      var0[142] = Py.newInteger(71);
      var0[143] = Py.newInteger(71);
      var0[144] = Py.newInteger(72);
      var0[145] = Py.newInteger(72);
      var0[146] = Py.newInteger(73);
      var0[147] = Py.newInteger(73);
      var0[148] = Py.newInteger(74);
      var0[149] = Py.newInteger(74);
      var0[150] = Py.newInteger(75);
      var0[151] = Py.newInteger(75);
      var0[152] = Py.newInteger(76);
      var0[153] = Py.newInteger(76);
      var0[154] = Py.newInteger(77);
      var0[155] = Py.newInteger(77);
      var0[156] = Py.newInteger(78);
      var0[157] = Py.newInteger(78);
      var0[158] = Py.newInteger(79);
      var0[159] = Py.newInteger(79);
      var0[160] = Py.newInteger(80);
      var0[161] = Py.newInteger(80);
      var0[162] = Py.newInteger(81);
      var0[163] = Py.newInteger(81);
      var0[164] = Py.newInteger(82);
      var0[165] = Py.newInteger(82);
      var0[166] = Py.newInteger(83);
      var0[167] = Py.newInteger(83);
      var0[168] = Py.newInteger(84);
      var0[169] = Py.newInteger(84);
      var0[170] = Py.newInteger(85);
      var0[171] = Py.newInteger(85);
      var0[172] = Py.newInteger(86);
      var0[173] = Py.newInteger(86);
      var0[174] = Py.newInteger(87);
      var0[175] = Py.newInteger(87);
      var0[176] = Py.newInteger(88);
      var0[177] = Py.newInteger(88);
      var0[178] = Py.newInteger(89);
      var0[179] = Py.newInteger(89);
      var0[180] = Py.newInteger(90);
      var0[181] = Py.newInteger(90);
      var0[182] = Py.newInteger(91);
      var0[183] = Py.newInteger(91);
      var0[184] = Py.newInteger(92);
      var0[185] = Py.newInteger(92);
      var0[186] = Py.newInteger(93);
      var0[187] = Py.newInteger(93);
      var0[188] = Py.newInteger(94);
      var0[189] = Py.newInteger(94);
      var0[190] = Py.newInteger(95);
      var0[191] = Py.newInteger(95);
      var0[192] = Py.newInteger(96);
      var0[193] = Py.newInteger(96);
      var0[194] = Py.newInteger(97);
      var0[195] = Py.newInteger(97);
      var0[196] = Py.newInteger(98);
      var0[197] = Py.newInteger(98);
      var0[198] = Py.newInteger(99);
      var0[199] = Py.newInteger(99);
      var0[200] = Py.newInteger(100);
      var0[201] = Py.newInteger(100);
      var0[202] = Py.newInteger(101);
      var0[203] = Py.newInteger(101);
      var0[204] = Py.newInteger(102);
      var0[205] = Py.newInteger(102);
      var0[206] = Py.newInteger(103);
      var0[207] = Py.newInteger(103);
      var0[208] = Py.newInteger(104);
      var0[209] = Py.newInteger(104);
      var0[210] = Py.newInteger(105);
      var0[211] = Py.newInteger(105);
      var0[212] = Py.newInteger(106);
      var0[213] = Py.newInteger(106);
      var0[214] = Py.newInteger(107);
      var0[215] = Py.newInteger(107);
      var0[216] = Py.newInteger(108);
      var0[217] = Py.newInteger(108);
      var0[218] = Py.newInteger(109);
      var0[219] = Py.newInteger(109);
      var0[220] = Py.newInteger(110);
      var0[221] = Py.newInteger(110);
      var0[222] = Py.newInteger(111);
      var0[223] = Py.newInteger(111);
      var0[224] = Py.newInteger(112);
      var0[225] = Py.newInteger(112);
      var0[226] = Py.newInteger(113);
      var0[227] = Py.newInteger(113);
      var0[228] = Py.newInteger(114);
      var0[229] = Py.newInteger(114);
      var0[230] = Py.newInteger(115);
      var0[231] = Py.newInteger(115);
      var0[232] = Py.newInteger(116);
      var0[233] = Py.newInteger(116);
      var0[234] = Py.newInteger(117);
      var0[235] = Py.newInteger(117);
      var0[236] = Py.newInteger(118);
      var0[237] = Py.newInteger(118);
      var0[238] = Py.newInteger(119);
      var0[239] = Py.newInteger(119);
      var0[240] = Py.newInteger(120);
      var0[241] = Py.newInteger(120);
      var0[242] = Py.newInteger(121);
      var0[243] = Py.newInteger(121);
      var0[244] = Py.newInteger(122);
      var0[245] = Py.newInteger(122);
      var0[246] = Py.newInteger(123);
      var0[247] = Py.newInteger(123);
      var0[248] = Py.newInteger(124);
      var0[249] = Py.newInteger(124);
      var0[250] = Py.newInteger(125);
      var0[251] = Py.newInteger(125);
      var0[252] = Py.newInteger(126);
      var0[253] = Py.newInteger(126);
      var0[254] = Py.newInteger(127);
      var0[255] = Py.newInteger(127);
      var0[256] = Py.newInteger(160);
      var0[257] = Py.newInteger(255);
      var0[258] = Py.newInteger(163);
      var0[259] = Py.newInteger(156);
      var0[260] = Py.newInteger(166);
      var0[261] = Py.newInteger(138);
      var0[262] = Py.newInteger(167);
      var0[263] = Py.newInteger(245);
      var0[264] = Py.newInteger(168);
      var0[265] = Py.newInteger(249);
      var0[266] = Py.newInteger(169);
      var0[267] = Py.newInteger(151);
      var0[268] = Py.newInteger(171);
      var0[269] = Py.newInteger(174);
      var0[270] = Py.newInteger(172);
      var0[271] = Py.newInteger(137);
      var0[272] = Py.newInteger(173);
      var0[273] = Py.newInteger(240);
      var0[274] = Py.newInteger(176);
      var0[275] = Py.newInteger(248);
      var0[276] = Py.newInteger(177);
      var0[277] = Py.newInteger(241);
      var0[278] = Py.newInteger(178);
      var0[279] = Py.newInteger(153);
      var0[280] = Py.newInteger(179);
      var0[281] = Py.newInteger(154);
      var0[282] = Py.newInteger(183);
      var0[283] = Py.newInteger(136);
      var0[284] = Py.newInteger(187);
      var0[285] = Py.newInteger(175);
      var0[286] = Py.newInteger(189);
      var0[287] = Py.newInteger(171);
      var0[288] = Py.newInteger(900);
      var0[289] = Py.newInteger(239);
      var0[290] = Py.newInteger(901);
      var0[291] = Py.newInteger(247);
      var0[292] = Py.newInteger(902);
      var0[293] = Py.newInteger(134);
      var0[294] = Py.newInteger(904);
      var0[295] = Py.newInteger(141);
      var0[296] = Py.newInteger(905);
      var0[297] = Py.newInteger(143);
      var0[298] = Py.newInteger(906);
      var0[299] = Py.newInteger(144);
      var0[300] = Py.newInteger(908);
      var0[301] = Py.newInteger(146);
      var0[302] = Py.newInteger(910);
      var0[303] = Py.newInteger(149);
      var0[304] = Py.newInteger(911);
      var0[305] = Py.newInteger(152);
      var0[306] = Py.newInteger(912);
      var0[307] = Py.newInteger(161);
      var0[308] = Py.newInteger(913);
      var0[309] = Py.newInteger(164);
      var0[310] = Py.newInteger(914);
      var0[311] = Py.newInteger(165);
      var0[312] = Py.newInteger(915);
      var0[313] = Py.newInteger(166);
      var0[314] = Py.newInteger(916);
      var0[315] = Py.newInteger(167);
      var0[316] = Py.newInteger(917);
      var0[317] = Py.newInteger(168);
      var0[318] = Py.newInteger(918);
      var0[319] = Py.newInteger(169);
      var0[320] = Py.newInteger(919);
      var0[321] = Py.newInteger(170);
      var0[322] = Py.newInteger(920);
      var0[323] = Py.newInteger(172);
      var0[324] = Py.newInteger(921);
      var0[325] = Py.newInteger(173);
      var0[326] = Py.newInteger(922);
      var0[327] = Py.newInteger(181);
      var0[328] = Py.newInteger(923);
      var0[329] = Py.newInteger(182);
      var0[330] = Py.newInteger(924);
      var0[331] = Py.newInteger(183);
      var0[332] = Py.newInteger(925);
      var0[333] = Py.newInteger(184);
      var0[334] = Py.newInteger(926);
      var0[335] = Py.newInteger(189);
      var0[336] = Py.newInteger(927);
      var0[337] = Py.newInteger(190);
      var0[338] = Py.newInteger(928);
      var0[339] = Py.newInteger(198);
      var0[340] = Py.newInteger(929);
      var0[341] = Py.newInteger(199);
      var0[342] = Py.newInteger(931);
      var0[343] = Py.newInteger(207);
      var0[344] = Py.newInteger(932);
      var0[345] = Py.newInteger(208);
      var0[346] = Py.newInteger(933);
      var0[347] = Py.newInteger(209);
      var0[348] = Py.newInteger(934);
      var0[349] = Py.newInteger(210);
      var0[350] = Py.newInteger(935);
      var0[351] = Py.newInteger(211);
      var0[352] = Py.newInteger(936);
      var0[353] = Py.newInteger(212);
      var0[354] = Py.newInteger(937);
      var0[355] = Py.newInteger(213);
      var0[356] = Py.newInteger(938);
      var0[357] = Py.newInteger(145);
      var0[358] = Py.newInteger(939);
      var0[359] = Py.newInteger(150);
      var0[360] = Py.newInteger(940);
      var0[361] = Py.newInteger(155);
      var0[362] = Py.newInteger(941);
      var0[363] = Py.newInteger(157);
      var0[364] = Py.newInteger(942);
      var0[365] = Py.newInteger(158);
      var0[366] = Py.newInteger(943);
      var0[367] = Py.newInteger(159);
      var0[368] = Py.newInteger(944);
      var0[369] = Py.newInteger(252);
      var0[370] = Py.newInteger(945);
      var0[371] = Py.newInteger(214);
      var0[372] = Py.newInteger(946);
      var0[373] = Py.newInteger(215);
      var0[374] = Py.newInteger(947);
      var0[375] = Py.newInteger(216);
      var0[376] = Py.newInteger(948);
      var0[377] = Py.newInteger(221);
      var0[378] = Py.newInteger(949);
      var0[379] = Py.newInteger(222);
      var0[380] = Py.newInteger(950);
      var0[381] = Py.newInteger(224);
      var0[382] = Py.newInteger(951);
      var0[383] = Py.newInteger(225);
      var0[384] = Py.newInteger(952);
      var0[385] = Py.newInteger(226);
      var0[386] = Py.newInteger(953);
      var0[387] = Py.newInteger(227);
      var0[388] = Py.newInteger(954);
      var0[389] = Py.newInteger(228);
      var0[390] = Py.newInteger(955);
      var0[391] = Py.newInteger(229);
      var0[392] = Py.newInteger(956);
      var0[393] = Py.newInteger(230);
      var0[394] = Py.newInteger(957);
      var0[395] = Py.newInteger(231);
      var0[396] = Py.newInteger(958);
      var0[397] = Py.newInteger(232);
      var0[398] = Py.newInteger(959);
      var0[399] = Py.newInteger(233);
      var0[400] = Py.newInteger(960);
      var0[401] = Py.newInteger(234);
      var0[402] = Py.newInteger(961);
      var0[403] = Py.newInteger(235);
      var0[404] = Py.newInteger(962);
      var0[405] = Py.newInteger(237);
      var0[406] = Py.newInteger(963);
      var0[407] = Py.newInteger(236);
      var0[408] = Py.newInteger(964);
      var0[409] = Py.newInteger(238);
      var0[410] = Py.newInteger(965);
      var0[411] = Py.newInteger(242);
      var0[412] = Py.newInteger(966);
      var0[413] = Py.newInteger(243);
      var0[414] = Py.newInteger(967);
      var0[415] = Py.newInteger(244);
      var0[416] = Py.newInteger(968);
      var0[417] = Py.newInteger(246);
      var0[418] = Py.newInteger(969);
      var0[419] = Py.newInteger(250);
      var0[420] = Py.newInteger(970);
      var0[421] = Py.newInteger(160);
      var0[422] = Py.newInteger(971);
      var0[423] = Py.newInteger(251);
      var0[424] = Py.newInteger(972);
      var0[425] = Py.newInteger(162);
      var0[426] = Py.newInteger(973);
      var0[427] = Py.newInteger(163);
      var0[428] = Py.newInteger(974);
      var0[429] = Py.newInteger(253);
      var0[430] = Py.newInteger(8213);
      var0[431] = Py.newInteger(142);
      var0[432] = Py.newInteger(8216);
      var0[433] = Py.newInteger(139);
      var0[434] = Py.newInteger(8217);
      var0[435] = Py.newInteger(140);
      var0[436] = Py.newInteger(9472);
      var0[437] = Py.newInteger(196);
      var0[438] = Py.newInteger(9474);
      var0[439] = Py.newInteger(179);
      var0[440] = Py.newInteger(9484);
      var0[441] = Py.newInteger(218);
      var0[442] = Py.newInteger(9488);
      var0[443] = Py.newInteger(191);
      var0[444] = Py.newInteger(9492);
      var0[445] = Py.newInteger(192);
      var0[446] = Py.newInteger(9496);
      var0[447] = Py.newInteger(217);
      var0[448] = Py.newInteger(9500);
      var0[449] = Py.newInteger(195);
      var0[450] = Py.newInteger(9508);
      var0[451] = Py.newInteger(180);
      var0[452] = Py.newInteger(9516);
      var0[453] = Py.newInteger(194);
      var0[454] = Py.newInteger(9524);
      var0[455] = Py.newInteger(193);
      var0[456] = Py.newInteger(9532);
      var0[457] = Py.newInteger(197);
      var0[458] = Py.newInteger(9552);
      var0[459] = Py.newInteger(205);
      var0[460] = Py.newInteger(9553);
      var0[461] = Py.newInteger(186);
      var0[462] = Py.newInteger(9556);
      var0[463] = Py.newInteger(201);
      var0[464] = Py.newInteger(9559);
      var0[465] = Py.newInteger(187);
      var0[466] = Py.newInteger(9562);
      var0[467] = Py.newInteger(200);
      var0[468] = Py.newInteger(9565);
      var0[469] = Py.newInteger(188);
      var0[470] = Py.newInteger(9568);
      var0[471] = Py.newInteger(204);
      var0[472] = Py.newInteger(9571);
      var0[473] = Py.newInteger(185);
      var0[474] = Py.newInteger(9574);
      var0[475] = Py.newInteger(203);
      var0[476] = Py.newInteger(9577);
      var0[477] = Py.newInteger(202);
      var0[478] = Py.newInteger(9580);
      var0[479] = Py.newInteger(206);
      var0[480] = Py.newInteger(9600);
      var0[481] = Py.newInteger(223);
      var0[482] = Py.newInteger(9604);
      var0[483] = Py.newInteger(220);
      var0[484] = Py.newInteger(9608);
      var0[485] = Py.newInteger(219);
      var0[486] = Py.newInteger(9617);
      var0[487] = Py.newInteger(176);
      var0[488] = Py.newInteger(9618);
      var0[489] = Py.newInteger(177);
      var0[490] = Py.newInteger(9619);
      var0[491] = Py.newInteger(178);
      var0[492] = Py.newInteger(9632);
      var0[493] = Py.newInteger(254);
   }

   public cp869$py(String var1) {
      self = this;
      String[] var2 = new String[0];
      f$0 = Py.newCode(0, var2, var1, "<module>", 0, false, false, self, 0, (String[])null, (String[])null, 0, 4096);
      var2 = new String[0];
      Codec$1 = Py.newCode(0, var2, var1, "Codec", 9, false, false, self, 1, (String[])null, (String[])null, 0, 4096);
      var2 = new String[]{"self", "input", "errors"};
      encode$2 = Py.newCode(3, var2, var1, "encode", 11, false, false, self, 2, (String[])null, (String[])null, 0, 4097);
      var2 = new String[]{"self", "input", "errors"};
      decode$3 = Py.newCode(3, var2, var1, "decode", 14, false, false, self, 3, (String[])null, (String[])null, 0, 4097);
      var2 = new String[0];
      IncrementalEncoder$4 = Py.newCode(0, var2, var1, "IncrementalEncoder", 17, false, false, self, 4, (String[])null, (String[])null, 0, 4096);
      var2 = new String[]{"self", "input", "final"};
      encode$5 = Py.newCode(3, var2, var1, "encode", 18, false, false, self, 5, (String[])null, (String[])null, 0, 4097);
      var2 = new String[0];
      IncrementalDecoder$6 = Py.newCode(0, var2, var1, "IncrementalDecoder", 21, false, false, self, 6, (String[])null, (String[])null, 0, 4096);
      var2 = new String[]{"self", "input", "final"};
      decode$7 = Py.newCode(3, var2, var1, "decode", 22, false, false, self, 7, (String[])null, (String[])null, 0, 4097);
      var2 = new String[0];
      StreamWriter$8 = Py.newCode(0, var2, var1, "StreamWriter", 25, false, false, self, 8, (String[])null, (String[])null, 0, 4096);
      var2 = new String[0];
      StreamReader$9 = Py.newCode(0, var2, var1, "StreamReader", 28, false, false, self, 9, (String[])null, (String[])null, 0, 4096);
      var2 = new String[0];
      getregentry$10 = Py.newCode(0, var2, var1, "getregentry", 33, false, false, self, 10, (String[])null, (String[])null, 0, 4097);
   }

   public PyCode getMain() {
      return f$0;
   }

   public static void main(String[] var0) {
      Py.runMain(CodeLoader.createSimpleBootstrap((new cp869$py("encodings/cp869$py")).getMain()), var0);
   }

   public static CodeBootstrap getCodeBootstrap() {
      return PyRunnableBootstrap.getFilenameConstructorReflectionBootstrap(cp869$py.class);
   }

   public PyObject call_function(int var1, PyFrame var2, ThreadState var3) {
      switch (var1) {
         case 0:
            return this.f$0(var2, var3);
         case 1:
            return this.Codec$1(var2, var3);
         case 2:
            return this.encode$2(var2, var3);
         case 3:
            return this.decode$3(var2, var3);
         case 4:
            return this.IncrementalEncoder$4(var2, var3);
         case 5:
            return this.encode$5(var2, var3);
         case 6:
            return this.IncrementalDecoder$6(var2, var3);
         case 7:
            return this.decode$7(var2, var3);
         case 8:
            return this.StreamWriter$8(var2, var3);
         case 9:
            return this.StreamReader$9(var2, var3);
         case 10:
            return this.getregentry$10(var2, var3);
         default:
            return null;
      }
   }
}
