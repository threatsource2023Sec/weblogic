package org.python.modules;

import org.python.core.BytecodeNotification;
import org.python.core.Py;
import org.python.core.PyObject;

public class _bytecodetools {
   public static final String __doc__ = "Provides utilities for generated bytecode.\n";
   public static final String __name__ = "BytecodeTools";

   public static void register(PyObject callback) {
      BytecodeNotification.register(new _Callback(callback));
   }

   public static boolean unregister(PyObject callback) {
      return BytecodeNotification.unregister(new _Callback(callback));
   }

   public static void clear() {
      BytecodeNotification.clear();
   }

   static class _Callback implements BytecodeNotification.Callback {
      PyObject callback;

      public _Callback(PyObject callback) {
         this.callback = callback;
      }

      public void notify(String name, byte[] bytes, Class c) {
         this.callback.__call__(Py.java2py(name), Py.java2py(bytes), Py.java2py(c));
      }

      public int hashCode() {
         return this.callback.hashCode();
      }

      public boolean equals(Object other) {
         if (!(other instanceof _Callback)) {
            return false;
         } else {
            _Callback that = (_Callback)other;
            return this.callback.equals(that.callback);
         }
      }
   }
}
